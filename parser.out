Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PR_PROGRAM { more_vars more_funcs main }
Rule 2     vars -> PR_VAR ids
Rule 3     ids -> type ID index
Rule 4     index -> [ CTEI ]
Rule 5     index -> [ CTEI ] [ CTEI ]
Rule 6     index -> empty
Rule 7     type -> PR_INT
Rule 8     type -> PR_FLOAT
Rule 9     type -> PR_BOOL
Rule 10    type -> PR_STRING
Rule 11    func -> func1 func2
Rule 12    func1 -> func1_1 func1_2
Rule 13    func1_1 -> PR_FUNCTION func_type ID (
Rule 14    func1_2 -> more_ids ) {
Rule 15    func2 -> more_vars more_bloques }
Rule 16    more_ids -> ids
Rule 17    more_ids -> ids more_ids
Rule 18    more_ids -> empty
Rule 19    func_type -> type
Rule 20    func_type -> PR_VOID
Rule 21    bloque -> assignation
Rule 22    bloque -> loop
Rule 23    bloque -> cond
Rule 24    bloque -> return
Rule 25    bloque -> lecture
Rule 26    bloque -> writing
Rule 27    bloque -> call
Rule 28    more_vars -> vars
Rule 29    more_vars -> vars more_vars
Rule 30    more_vars -> empty
Rule 31    more_funcs -> func
Rule 32    more_funcs -> func more_funcs
Rule 33    more_funcs -> empty
Rule 34    more_bloques -> bloque
Rule 35    more_bloques -> bloque more_bloques
Rule 36    more_bloques -> empty
Rule 37    assignation -> assignTo = mega_exp
Rule 38    assignTo -> ID other_index
Rule 39    other_index -> [ exp ]
Rule 40    other_index -> [ exp ] [ exp ]
Rule 41    other_index -> empty
Rule 42    loop -> PR_REPEAT ( mega_exp ) { more_bloques }
Rule 43    cond -> cond1 cond2
Rule 44    cond1 -> PR_IF ( mega_exp ) {
Rule 45    cond2 -> more_bloques } maybe_else
Rule 46    maybe_else -> check_else do_else
Rule 47    maybe_else -> empty
Rule 48    check_else -> PR_ELSE {
Rule 49    do_else -> more_bloques }
Rule 50    return -> PR_RETURN mega_exp
Rule 51    lecture -> PR_READ ARR ID index
Rule 52    writing -> PR_PRINT ( mega_exp )
Rule 53    func_pred -> PR_calculaRegresion ( exp )
Rule 54    func_pred -> PR_prediceResultado ( exp )
Rule 55    func_pred -> PR_calculaModa ( exp )
Rule 56    func_pred -> PR_calculaMediana ( exp )
Rule 57    func_pred -> PR_calculaMedia ( exp )
Rule 58    func_pred -> PR_calculaPoisson ( exp )
Rule 59    func_pred -> PR_calculaBinomial ( exp )
Rule 60    func_pred -> PR_calculaNormal ( exp )
Rule 61    call -> call_1 call_2
Rule 62    call -> func_pred
Rule 63    call_1 -> ID (
Rule 64    call_2 -> exp )
Rule 65    mega_exp -> opt_not super_exp
Rule 66    mega_exp -> opt_not super_exp log_op mega_exp
Rule 67    log_op -> PR_AND
Rule 68    log_op -> PR_OR
Rule 69    log_op -> PR_NOT
Rule 70    opt_not -> PR_NOT
Rule 71    opt_not -> empty
Rule 72    super_exp -> exp
Rule 73    super_exp -> exp rel_op super_exp
Rule 74    rel_op -> <
Rule 75    rel_op -> >
Rule 76    rel_op -> LE
Rule 77    rel_op -> GE
Rule 78    rel_op -> EQ
Rule 79    rel_op -> NEQ
Rule 80    exp -> termino
Rule 81    exp -> termino + exp
Rule 82    exp -> termino - exp
Rule 83    termino -> factor
Rule 84    termino -> factor * termino
Rule 85    termino -> factor / termino
Rule 86    factor -> ( super_exp )
Rule 87    factor -> + var_cte
Rule 88    factor -> - var_cte
Rule 89    factor -> var_cte
Rule 90    var_cte -> other
Rule 91    var_cte -> CTEI
Rule 92    var_cte -> CTEF
Rule 93    var_cte -> CTES
Rule 94    var_cte -> PR_TRUE
Rule 95    var_cte -> PR_FALSE
Rule 96    other -> ID other_index
Rule 97    other -> call
Rule 98    other -> empty
Rule 99    main -> PR_MAIN { more_vars more_bloques }
Rule 100   empty -> <empty>

Terminals, with rules where they appear

(                    : 13 42 44 52 53 54 55 56 57 58 59 60 63 86
)                    : 14 42 44 52 53 54 55 56 57 58 59 60 64 86
*                    : 84
+                    : 81 87
-                    : 82 88
/                    : 85
<                    : 74
=                    : 37
>                    : 75
ARR                  : 51
CTEF                 : 92
CTEI                 : 4 5 5 91
CTES                 : 93
EQ                   : 78
GE                   : 77
ID                   : 3 13 38 51 63 96
LE                   : 76
NEQ                  : 79
PR_AND               : 67
PR_BOOL              : 9
PR_ELSE              : 48
PR_FALSE             : 95
PR_FLOAT             : 8
PR_FUNCTION          : 13
PR_IF                : 44
PR_INT               : 7
PR_MAIN              : 99
PR_NOT               : 69 70
PR_OR                : 68
PR_PRINT             : 52
PR_PROGRAM           : 1
PR_READ              : 51
PR_REPEAT            : 42
PR_RETURN            : 50
PR_STRING            : 10
PR_TRUE              : 94
PR_VAR               : 2
PR_VOID              : 20
PR_calculaBinomial   : 59
PR_calculaMedia      : 57
PR_calculaMediana    : 56
PR_calculaModa       : 55
PR_calculaNormal     : 60
PR_calculaPoisson    : 58
PR_calculaRegresion  : 53
PR_prediceResultado  : 54
[                    : 4 5 5 39 40 40
]                    : 4 5 5 39 40 40
error                : 
{                    : 1 14 42 44 48 99
}                    : 1 15 42 45 49 99

Nonterminals, with rules where they appear

assignTo             : 37
assignation          : 21
bloque               : 34 35
call                 : 27 97
call_1               : 61
call_2               : 61
check_else           : 46
cond                 : 23
cond1                : 43
cond2                : 43
do_else              : 46
empty                : 6 18 30 33 36 41 47 71 98
exp                  : 39 40 40 53 54 55 56 57 58 59 60 64 72 73 81 82
factor               : 83 84 85
func                 : 31 32
func1                : 11
func1_1              : 12
func1_2              : 12
func2                : 11
func_pred            : 62
func_type            : 13
ids                  : 2 16 17
index                : 3 51
lecture              : 25
log_op               : 66
loop                 : 22
main                 : 1
maybe_else           : 45
mega_exp             : 37 42 44 50 52 66
more_bloques         : 15 35 42 45 49 99
more_funcs           : 1 32
more_ids             : 14 17
more_vars            : 1 15 29 99
opt_not              : 65 66
other                : 90
other_index          : 38 96
programa             : 0
rel_op               : 73
return               : 24
super_exp            : 65 66 73 86
termino              : 80 81 82 84 85
type                 : 3 19
var_cte              : 87 88 89
vars                 : 28 29
writing              : 26

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PR_PROGRAM { more_vars more_funcs main }

    PR_PROGRAM      shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PR_PROGRAM . { more_vars more_funcs main }

    {               shift and go to state 3


state 3

    (1) programa -> PR_PROGRAM { . more_vars more_funcs main }
    (28) more_vars -> . vars
    (29) more_vars -> . vars more_vars
    (30) more_vars -> . empty
    (2) vars -> . PR_VAR ids
    (100) empty -> .

    PR_VAR          shift and go to state 7
    PR_FUNCTION     reduce using rule 100 (empty -> .)
    PR_MAIN         reduce using rule 100 (empty -> .)

    more_vars                      shift and go to state 4
    vars                           shift and go to state 5
    empty                          shift and go to state 6

state 4

    (1) programa -> PR_PROGRAM { more_vars . more_funcs main }
    (31) more_funcs -> . func
    (32) more_funcs -> . func more_funcs
    (33) more_funcs -> . empty
    (11) func -> . func1 func2
    (100) empty -> .
    (12) func1 -> . func1_1 func1_2
    (13) func1_1 -> . PR_FUNCTION func_type ID (

    PR_MAIN         reduce using rule 100 (empty -> .)
    PR_FUNCTION     shift and go to state 13

    more_funcs                     shift and go to state 8
    func                           shift and go to state 9
    empty                          shift and go to state 10
    func1                          shift and go to state 11
    func1_1                        shift and go to state 12

state 5

    (28) more_vars -> vars .
    (29) more_vars -> vars . more_vars
    (28) more_vars -> . vars
    (29) more_vars -> . vars more_vars
    (30) more_vars -> . empty
    (2) vars -> . PR_VAR ids
    (100) empty -> .

  ! reduce/reduce conflict for PR_FUNCTION resolved using rule 28 (more_vars -> vars .)
  ! reduce/reduce conflict for PR_MAIN resolved using rule 28 (more_vars -> vars .)
  ! reduce/reduce conflict for PR_REPEAT resolved using rule 28 (more_vars -> vars .)
  ! reduce/reduce conflict for PR_RETURN resolved using rule 28 (more_vars -> vars .)
  ! reduce/reduce conflict for PR_READ resolved using rule 28 (more_vars -> vars .)
  ! reduce/reduce conflict for PR_PRINT resolved using rule 28 (more_vars -> vars .)
  ! reduce/reduce conflict for ID resolved using rule 28 (more_vars -> vars .)
  ! reduce/reduce conflict for PR_IF resolved using rule 28 (more_vars -> vars .)
  ! reduce/reduce conflict for PR_calculaRegresion resolved using rule 28 (more_vars -> vars .)
  ! reduce/reduce conflict for PR_prediceResultado resolved using rule 28 (more_vars -> vars .)
  ! reduce/reduce conflict for PR_calculaModa resolved using rule 28 (more_vars -> vars .)
  ! reduce/reduce conflict for PR_calculaMediana resolved using rule 28 (more_vars -> vars .)
  ! reduce/reduce conflict for PR_calculaMedia resolved using rule 28 (more_vars -> vars .)
  ! reduce/reduce conflict for PR_calculaPoisson resolved using rule 28 (more_vars -> vars .)
  ! reduce/reduce conflict for PR_calculaBinomial resolved using rule 28 (more_vars -> vars .)
  ! reduce/reduce conflict for PR_calculaNormal resolved using rule 28 (more_vars -> vars .)
  ! reduce/reduce conflict for } resolved using rule 28 (more_vars -> vars .)
    PR_FUNCTION     reduce using rule 28 (more_vars -> vars .)
    PR_MAIN         reduce using rule 28 (more_vars -> vars .)
    PR_REPEAT       reduce using rule 28 (more_vars -> vars .)
    PR_RETURN       reduce using rule 28 (more_vars -> vars .)
    PR_READ         reduce using rule 28 (more_vars -> vars .)
    PR_PRINT        reduce using rule 28 (more_vars -> vars .)
    ID              reduce using rule 28 (more_vars -> vars .)
    PR_IF           reduce using rule 28 (more_vars -> vars .)
    PR_calculaRegresion reduce using rule 28 (more_vars -> vars .)
    PR_prediceResultado reduce using rule 28 (more_vars -> vars .)
    PR_calculaModa  reduce using rule 28 (more_vars -> vars .)
    PR_calculaMediana reduce using rule 28 (more_vars -> vars .)
    PR_calculaMedia reduce using rule 28 (more_vars -> vars .)
    PR_calculaPoisson reduce using rule 28 (more_vars -> vars .)
    PR_calculaBinomial reduce using rule 28 (more_vars -> vars .)
    PR_calculaNormal reduce using rule 28 (more_vars -> vars .)
    }               reduce using rule 28 (more_vars -> vars .)
    PR_VAR          shift and go to state 7

  ! PR_FUNCTION     [ reduce using rule 100 (empty -> .) ]
  ! PR_MAIN         [ reduce using rule 100 (empty -> .) ]
  ! PR_REPEAT       [ reduce using rule 100 (empty -> .) ]
  ! PR_RETURN       [ reduce using rule 100 (empty -> .) ]
  ! PR_READ         [ reduce using rule 100 (empty -> .) ]
  ! PR_PRINT        [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! PR_IF           [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaRegresion [ reduce using rule 100 (empty -> .) ]
  ! PR_prediceResultado [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaModa  [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMediana [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMedia [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaPoisson [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaBinomial [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaNormal [ reduce using rule 100 (empty -> .) ]
  ! }               [ reduce using rule 100 (empty -> .) ]

    vars                           shift and go to state 5
    more_vars                      shift and go to state 14
    empty                          shift and go to state 6

state 6

    (30) more_vars -> empty .

    PR_FUNCTION     reduce using rule 30 (more_vars -> empty .)
    PR_MAIN         reduce using rule 30 (more_vars -> empty .)
    PR_REPEAT       reduce using rule 30 (more_vars -> empty .)
    PR_RETURN       reduce using rule 30 (more_vars -> empty .)
    PR_READ         reduce using rule 30 (more_vars -> empty .)
    PR_PRINT        reduce using rule 30 (more_vars -> empty .)
    ID              reduce using rule 30 (more_vars -> empty .)
    PR_IF           reduce using rule 30 (more_vars -> empty .)
    PR_calculaRegresion reduce using rule 30 (more_vars -> empty .)
    PR_prediceResultado reduce using rule 30 (more_vars -> empty .)
    PR_calculaModa  reduce using rule 30 (more_vars -> empty .)
    PR_calculaMediana reduce using rule 30 (more_vars -> empty .)
    PR_calculaMedia reduce using rule 30 (more_vars -> empty .)
    PR_calculaPoisson reduce using rule 30 (more_vars -> empty .)
    PR_calculaBinomial reduce using rule 30 (more_vars -> empty .)
    PR_calculaNormal reduce using rule 30 (more_vars -> empty .)
    }               reduce using rule 30 (more_vars -> empty .)


state 7

    (2) vars -> PR_VAR . ids
    (3) ids -> . type ID index
    (7) type -> . PR_INT
    (8) type -> . PR_FLOAT
    (9) type -> . PR_BOOL
    (10) type -> . PR_STRING

    PR_INT          shift and go to state 17
    PR_FLOAT        shift and go to state 18
    PR_BOOL         shift and go to state 19
    PR_STRING       shift and go to state 20

    ids                            shift and go to state 15
    type                           shift and go to state 16

state 8

    (1) programa -> PR_PROGRAM { more_vars more_funcs . main }
    (99) main -> . PR_MAIN { more_vars more_bloques }

    PR_MAIN         shift and go to state 22

    main                           shift and go to state 21

state 9

    (31) more_funcs -> func .
    (32) more_funcs -> func . more_funcs
    (31) more_funcs -> . func
    (32) more_funcs -> . func more_funcs
    (33) more_funcs -> . empty
    (11) func -> . func1 func2
    (100) empty -> .
    (12) func1 -> . func1_1 func1_2
    (13) func1_1 -> . PR_FUNCTION func_type ID (

  ! reduce/reduce conflict for PR_MAIN resolved using rule 31 (more_funcs -> func .)
    PR_MAIN         reduce using rule 31 (more_funcs -> func .)
    PR_FUNCTION     shift and go to state 13

  ! PR_MAIN         [ reduce using rule 100 (empty -> .) ]

    func                           shift and go to state 9
    more_funcs                     shift and go to state 23
    empty                          shift and go to state 10
    func1                          shift and go to state 11
    func1_1                        shift and go to state 12

state 10

    (33) more_funcs -> empty .

    PR_MAIN         reduce using rule 33 (more_funcs -> empty .)


state 11

    (11) func -> func1 . func2
    (15) func2 -> . more_vars more_bloques }
    (28) more_vars -> . vars
    (29) more_vars -> . vars more_vars
    (30) more_vars -> . empty
    (2) vars -> . PR_VAR ids
    (100) empty -> .

    PR_VAR          shift and go to state 7
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    PR_calculaRegresion reduce using rule 100 (empty -> .)
    PR_prediceResultado reduce using rule 100 (empty -> .)
    PR_calculaModa  reduce using rule 100 (empty -> .)
    PR_calculaMediana reduce using rule 100 (empty -> .)
    PR_calculaMedia reduce using rule 100 (empty -> .)
    PR_calculaPoisson reduce using rule 100 (empty -> .)
    PR_calculaBinomial reduce using rule 100 (empty -> .)
    PR_calculaNormal reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)

    func2                          shift and go to state 24
    more_vars                      shift and go to state 25
    vars                           shift and go to state 5
    empty                          shift and go to state 6

state 12

    (12) func1 -> func1_1 . func1_2
    (14) func1_2 -> . more_ids ) {
    (16) more_ids -> . ids
    (17) more_ids -> . ids more_ids
    (18) more_ids -> . empty
    (3) ids -> . type ID index
    (100) empty -> .
    (7) type -> . PR_INT
    (8) type -> . PR_FLOAT
    (9) type -> . PR_BOOL
    (10) type -> . PR_STRING

    )               reduce using rule 100 (empty -> .)
    PR_INT          shift and go to state 17
    PR_FLOAT        shift and go to state 18
    PR_BOOL         shift and go to state 19
    PR_STRING       shift and go to state 20

    func1_2                        shift and go to state 26
    more_ids                       shift and go to state 27
    ids                            shift and go to state 28
    empty                          shift and go to state 29
    type                           shift and go to state 16

state 13

    (13) func1_1 -> PR_FUNCTION . func_type ID (
    (19) func_type -> . type
    (20) func_type -> . PR_VOID
    (7) type -> . PR_INT
    (8) type -> . PR_FLOAT
    (9) type -> . PR_BOOL
    (10) type -> . PR_STRING

    PR_VOID         shift and go to state 32
    PR_INT          shift and go to state 17
    PR_FLOAT        shift and go to state 18
    PR_BOOL         shift and go to state 19
    PR_STRING       shift and go to state 20

    func_type                      shift and go to state 30
    type                           shift and go to state 31

state 14

    (29) more_vars -> vars more_vars .

    PR_FUNCTION     reduce using rule 29 (more_vars -> vars more_vars .)
    PR_MAIN         reduce using rule 29 (more_vars -> vars more_vars .)
    PR_REPEAT       reduce using rule 29 (more_vars -> vars more_vars .)
    PR_RETURN       reduce using rule 29 (more_vars -> vars more_vars .)
    PR_READ         reduce using rule 29 (more_vars -> vars more_vars .)
    PR_PRINT        reduce using rule 29 (more_vars -> vars more_vars .)
    ID              reduce using rule 29 (more_vars -> vars more_vars .)
    PR_IF           reduce using rule 29 (more_vars -> vars more_vars .)
    PR_calculaRegresion reduce using rule 29 (more_vars -> vars more_vars .)
    PR_prediceResultado reduce using rule 29 (more_vars -> vars more_vars .)
    PR_calculaModa  reduce using rule 29 (more_vars -> vars more_vars .)
    PR_calculaMediana reduce using rule 29 (more_vars -> vars more_vars .)
    PR_calculaMedia reduce using rule 29 (more_vars -> vars more_vars .)
    PR_calculaPoisson reduce using rule 29 (more_vars -> vars more_vars .)
    PR_calculaBinomial reduce using rule 29 (more_vars -> vars more_vars .)
    PR_calculaNormal reduce using rule 29 (more_vars -> vars more_vars .)
    }               reduce using rule 29 (more_vars -> vars more_vars .)


state 15

    (2) vars -> PR_VAR ids .

    PR_VAR          reduce using rule 2 (vars -> PR_VAR ids .)
    PR_FUNCTION     reduce using rule 2 (vars -> PR_VAR ids .)
    PR_MAIN         reduce using rule 2 (vars -> PR_VAR ids .)
    PR_REPEAT       reduce using rule 2 (vars -> PR_VAR ids .)
    PR_RETURN       reduce using rule 2 (vars -> PR_VAR ids .)
    PR_READ         reduce using rule 2 (vars -> PR_VAR ids .)
    PR_PRINT        reduce using rule 2 (vars -> PR_VAR ids .)
    ID              reduce using rule 2 (vars -> PR_VAR ids .)
    PR_IF           reduce using rule 2 (vars -> PR_VAR ids .)
    PR_calculaRegresion reduce using rule 2 (vars -> PR_VAR ids .)
    PR_prediceResultado reduce using rule 2 (vars -> PR_VAR ids .)
    PR_calculaModa  reduce using rule 2 (vars -> PR_VAR ids .)
    PR_calculaMediana reduce using rule 2 (vars -> PR_VAR ids .)
    PR_calculaMedia reduce using rule 2 (vars -> PR_VAR ids .)
    PR_calculaPoisson reduce using rule 2 (vars -> PR_VAR ids .)
    PR_calculaBinomial reduce using rule 2 (vars -> PR_VAR ids .)
    PR_calculaNormal reduce using rule 2 (vars -> PR_VAR ids .)
    }               reduce using rule 2 (vars -> PR_VAR ids .)


state 16

    (3) ids -> type . ID index

    ID              shift and go to state 33


state 17

    (7) type -> PR_INT .

    ID              reduce using rule 7 (type -> PR_INT .)


state 18

    (8) type -> PR_FLOAT .

    ID              reduce using rule 8 (type -> PR_FLOAT .)


state 19

    (9) type -> PR_BOOL .

    ID              reduce using rule 9 (type -> PR_BOOL .)


state 20

    (10) type -> PR_STRING .

    ID              reduce using rule 10 (type -> PR_STRING .)


state 21

    (1) programa -> PR_PROGRAM { more_vars more_funcs main . }

    }               shift and go to state 34


state 22

    (99) main -> PR_MAIN . { more_vars more_bloques }

    {               shift and go to state 35


state 23

    (32) more_funcs -> func more_funcs .

    PR_MAIN         reduce using rule 32 (more_funcs -> func more_funcs .)


state 24

    (11) func -> func1 func2 .

    PR_FUNCTION     reduce using rule 11 (func -> func1 func2 .)
    PR_MAIN         reduce using rule 11 (func -> func1 func2 .)


state 25

    (15) func2 -> more_vars . more_bloques }
    (34) more_bloques -> . bloque
    (35) more_bloques -> . bloque more_bloques
    (36) more_bloques -> . empty
    (21) bloque -> . assignation
    (22) bloque -> . loop
    (23) bloque -> . cond
    (24) bloque -> . return
    (25) bloque -> . lecture
    (26) bloque -> . writing
    (27) bloque -> . call
    (100) empty -> .
    (37) assignation -> . assignTo = mega_exp
    (42) loop -> . PR_REPEAT ( mega_exp ) { more_bloques }
    (43) cond -> . cond1 cond2
    (50) return -> . PR_RETURN mega_exp
    (51) lecture -> . PR_READ ARR ID index
    (52) writing -> . PR_PRINT ( mega_exp )
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (38) assignTo -> . ID other_index
    (44) cond1 -> . PR_IF ( mega_exp ) {
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

    }               reduce using rule 100 (empty -> .)
    PR_REPEAT       shift and go to state 47
    PR_RETURN       shift and go to state 49
    PR_READ         shift and go to state 50
    PR_PRINT        shift and go to state 52
    ID              shift and go to state 51
    PR_IF           shift and go to state 55
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

    more_bloques                   shift and go to state 36
    bloque                         shift and go to state 37
    empty                          shift and go to state 38
    assignation                    shift and go to state 39
    loop                           shift and go to state 40
    cond                           shift and go to state 41
    return                         shift and go to state 42
    lecture                        shift and go to state 43
    writing                        shift and go to state 44
    call                           shift and go to state 45
    assignTo                       shift and go to state 46
    cond1                          shift and go to state 48
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 26

    (12) func1 -> func1_1 func1_2 .

    PR_VAR          reduce using rule 12 (func1 -> func1_1 func1_2 .)
    PR_REPEAT       reduce using rule 12 (func1 -> func1_1 func1_2 .)
    PR_RETURN       reduce using rule 12 (func1 -> func1_1 func1_2 .)
    PR_READ         reduce using rule 12 (func1 -> func1_1 func1_2 .)
    PR_PRINT        reduce using rule 12 (func1 -> func1_1 func1_2 .)
    ID              reduce using rule 12 (func1 -> func1_1 func1_2 .)
    PR_IF           reduce using rule 12 (func1 -> func1_1 func1_2 .)
    PR_calculaRegresion reduce using rule 12 (func1 -> func1_1 func1_2 .)
    PR_prediceResultado reduce using rule 12 (func1 -> func1_1 func1_2 .)
    PR_calculaModa  reduce using rule 12 (func1 -> func1_1 func1_2 .)
    PR_calculaMediana reduce using rule 12 (func1 -> func1_1 func1_2 .)
    PR_calculaMedia reduce using rule 12 (func1 -> func1_1 func1_2 .)
    PR_calculaPoisson reduce using rule 12 (func1 -> func1_1 func1_2 .)
    PR_calculaBinomial reduce using rule 12 (func1 -> func1_1 func1_2 .)
    PR_calculaNormal reduce using rule 12 (func1 -> func1_1 func1_2 .)
    }               reduce using rule 12 (func1 -> func1_1 func1_2 .)


state 27

    (14) func1_2 -> more_ids . ) {

    )               shift and go to state 64


state 28

    (16) more_ids -> ids .
    (17) more_ids -> ids . more_ids
    (16) more_ids -> . ids
    (17) more_ids -> . ids more_ids
    (18) more_ids -> . empty
    (3) ids -> . type ID index
    (100) empty -> .
    (7) type -> . PR_INT
    (8) type -> . PR_FLOAT
    (9) type -> . PR_BOOL
    (10) type -> . PR_STRING

  ! reduce/reduce conflict for ) resolved using rule 16 (more_ids -> ids .)
    )               reduce using rule 16 (more_ids -> ids .)
    PR_INT          shift and go to state 17
    PR_FLOAT        shift and go to state 18
    PR_BOOL         shift and go to state 19
    PR_STRING       shift and go to state 20

  ! )               [ reduce using rule 100 (empty -> .) ]

    ids                            shift and go to state 28
    more_ids                       shift and go to state 65
    empty                          shift and go to state 29
    type                           shift and go to state 16

state 29

    (18) more_ids -> empty .

    )               reduce using rule 18 (more_ids -> empty .)


state 30

    (13) func1_1 -> PR_FUNCTION func_type . ID (

    ID              shift and go to state 66


state 31

    (19) func_type -> type .

    ID              reduce using rule 19 (func_type -> type .)


state 32

    (20) func_type -> PR_VOID .

    ID              reduce using rule 20 (func_type -> PR_VOID .)


state 33

    (3) ids -> type ID . index
    (4) index -> . [ CTEI ]
    (5) index -> . [ CTEI ] [ CTEI ]
    (6) index -> . empty
    (100) empty -> .

    [               shift and go to state 68
    PR_VAR          reduce using rule 100 (empty -> .)
    PR_FUNCTION     reduce using rule 100 (empty -> .)
    PR_MAIN         reduce using rule 100 (empty -> .)
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    PR_calculaRegresion reduce using rule 100 (empty -> .)
    PR_prediceResultado reduce using rule 100 (empty -> .)
    PR_calculaModa  reduce using rule 100 (empty -> .)
    PR_calculaMediana reduce using rule 100 (empty -> .)
    PR_calculaMedia reduce using rule 100 (empty -> .)
    PR_calculaPoisson reduce using rule 100 (empty -> .)
    PR_calculaBinomial reduce using rule 100 (empty -> .)
    PR_calculaNormal reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)
    PR_INT          reduce using rule 100 (empty -> .)
    PR_FLOAT        reduce using rule 100 (empty -> .)
    PR_BOOL         reduce using rule 100 (empty -> .)
    PR_STRING       reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)

    index                          shift and go to state 67
    empty                          shift and go to state 69

state 34

    (1) programa -> PR_PROGRAM { more_vars more_funcs main } .

    $end            reduce using rule 1 (programa -> PR_PROGRAM { more_vars more_funcs main } .)


state 35

    (99) main -> PR_MAIN { . more_vars more_bloques }
    (28) more_vars -> . vars
    (29) more_vars -> . vars more_vars
    (30) more_vars -> . empty
    (2) vars -> . PR_VAR ids
    (100) empty -> .

    PR_VAR          shift and go to state 7
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    PR_calculaRegresion reduce using rule 100 (empty -> .)
    PR_prediceResultado reduce using rule 100 (empty -> .)
    PR_calculaModa  reduce using rule 100 (empty -> .)
    PR_calculaMediana reduce using rule 100 (empty -> .)
    PR_calculaMedia reduce using rule 100 (empty -> .)
    PR_calculaPoisson reduce using rule 100 (empty -> .)
    PR_calculaBinomial reduce using rule 100 (empty -> .)
    PR_calculaNormal reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)

    more_vars                      shift and go to state 70
    vars                           shift and go to state 5
    empty                          shift and go to state 6

state 36

    (15) func2 -> more_vars more_bloques . }

    }               shift and go to state 71


state 37

    (34) more_bloques -> bloque .
    (35) more_bloques -> bloque . more_bloques
    (34) more_bloques -> . bloque
    (35) more_bloques -> . bloque more_bloques
    (36) more_bloques -> . empty
    (21) bloque -> . assignation
    (22) bloque -> . loop
    (23) bloque -> . cond
    (24) bloque -> . return
    (25) bloque -> . lecture
    (26) bloque -> . writing
    (27) bloque -> . call
    (100) empty -> .
    (37) assignation -> . assignTo = mega_exp
    (42) loop -> . PR_REPEAT ( mega_exp ) { more_bloques }
    (43) cond -> . cond1 cond2
    (50) return -> . PR_RETURN mega_exp
    (51) lecture -> . PR_READ ARR ID index
    (52) writing -> . PR_PRINT ( mega_exp )
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (38) assignTo -> . ID other_index
    (44) cond1 -> . PR_IF ( mega_exp ) {
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! reduce/reduce conflict for } resolved using rule 34 (more_bloques -> bloque .)
    }               reduce using rule 34 (more_bloques -> bloque .)
    PR_REPEAT       shift and go to state 47
    PR_RETURN       shift and go to state 49
    PR_READ         shift and go to state 50
    PR_PRINT        shift and go to state 52
    ID              shift and go to state 51
    PR_IF           shift and go to state 55
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! }               [ reduce using rule 100 (empty -> .) ]

    bloque                         shift and go to state 37
    more_bloques                   shift and go to state 72
    empty                          shift and go to state 38
    assignation                    shift and go to state 39
    loop                           shift and go to state 40
    cond                           shift and go to state 41
    return                         shift and go to state 42
    lecture                        shift and go to state 43
    writing                        shift and go to state 44
    call                           shift and go to state 45
    assignTo                       shift and go to state 46
    cond1                          shift and go to state 48
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 38

    (36) more_bloques -> empty .

    }               reduce using rule 36 (more_bloques -> empty .)


state 39

    (21) bloque -> assignation .

    PR_REPEAT       reduce using rule 21 (bloque -> assignation .)
    PR_RETURN       reduce using rule 21 (bloque -> assignation .)
    PR_READ         reduce using rule 21 (bloque -> assignation .)
    PR_PRINT        reduce using rule 21 (bloque -> assignation .)
    ID              reduce using rule 21 (bloque -> assignation .)
    PR_IF           reduce using rule 21 (bloque -> assignation .)
    PR_calculaRegresion reduce using rule 21 (bloque -> assignation .)
    PR_prediceResultado reduce using rule 21 (bloque -> assignation .)
    PR_calculaModa  reduce using rule 21 (bloque -> assignation .)
    PR_calculaMediana reduce using rule 21 (bloque -> assignation .)
    PR_calculaMedia reduce using rule 21 (bloque -> assignation .)
    PR_calculaPoisson reduce using rule 21 (bloque -> assignation .)
    PR_calculaBinomial reduce using rule 21 (bloque -> assignation .)
    PR_calculaNormal reduce using rule 21 (bloque -> assignation .)
    }               reduce using rule 21 (bloque -> assignation .)


state 40

    (22) bloque -> loop .

    PR_REPEAT       reduce using rule 22 (bloque -> loop .)
    PR_RETURN       reduce using rule 22 (bloque -> loop .)
    PR_READ         reduce using rule 22 (bloque -> loop .)
    PR_PRINT        reduce using rule 22 (bloque -> loop .)
    ID              reduce using rule 22 (bloque -> loop .)
    PR_IF           reduce using rule 22 (bloque -> loop .)
    PR_calculaRegresion reduce using rule 22 (bloque -> loop .)
    PR_prediceResultado reduce using rule 22 (bloque -> loop .)
    PR_calculaModa  reduce using rule 22 (bloque -> loop .)
    PR_calculaMediana reduce using rule 22 (bloque -> loop .)
    PR_calculaMedia reduce using rule 22 (bloque -> loop .)
    PR_calculaPoisson reduce using rule 22 (bloque -> loop .)
    PR_calculaBinomial reduce using rule 22 (bloque -> loop .)
    PR_calculaNormal reduce using rule 22 (bloque -> loop .)
    }               reduce using rule 22 (bloque -> loop .)


state 41

    (23) bloque -> cond .

    PR_REPEAT       reduce using rule 23 (bloque -> cond .)
    PR_RETURN       reduce using rule 23 (bloque -> cond .)
    PR_READ         reduce using rule 23 (bloque -> cond .)
    PR_PRINT        reduce using rule 23 (bloque -> cond .)
    ID              reduce using rule 23 (bloque -> cond .)
    PR_IF           reduce using rule 23 (bloque -> cond .)
    PR_calculaRegresion reduce using rule 23 (bloque -> cond .)
    PR_prediceResultado reduce using rule 23 (bloque -> cond .)
    PR_calculaModa  reduce using rule 23 (bloque -> cond .)
    PR_calculaMediana reduce using rule 23 (bloque -> cond .)
    PR_calculaMedia reduce using rule 23 (bloque -> cond .)
    PR_calculaPoisson reduce using rule 23 (bloque -> cond .)
    PR_calculaBinomial reduce using rule 23 (bloque -> cond .)
    PR_calculaNormal reduce using rule 23 (bloque -> cond .)
    }               reduce using rule 23 (bloque -> cond .)


state 42

    (24) bloque -> return .

    PR_REPEAT       reduce using rule 24 (bloque -> return .)
    PR_RETURN       reduce using rule 24 (bloque -> return .)
    PR_READ         reduce using rule 24 (bloque -> return .)
    PR_PRINT        reduce using rule 24 (bloque -> return .)
    ID              reduce using rule 24 (bloque -> return .)
    PR_IF           reduce using rule 24 (bloque -> return .)
    PR_calculaRegresion reduce using rule 24 (bloque -> return .)
    PR_prediceResultado reduce using rule 24 (bloque -> return .)
    PR_calculaModa  reduce using rule 24 (bloque -> return .)
    PR_calculaMediana reduce using rule 24 (bloque -> return .)
    PR_calculaMedia reduce using rule 24 (bloque -> return .)
    PR_calculaPoisson reduce using rule 24 (bloque -> return .)
    PR_calculaBinomial reduce using rule 24 (bloque -> return .)
    PR_calculaNormal reduce using rule 24 (bloque -> return .)
    }               reduce using rule 24 (bloque -> return .)


state 43

    (25) bloque -> lecture .

    PR_REPEAT       reduce using rule 25 (bloque -> lecture .)
    PR_RETURN       reduce using rule 25 (bloque -> lecture .)
    PR_READ         reduce using rule 25 (bloque -> lecture .)
    PR_PRINT        reduce using rule 25 (bloque -> lecture .)
    ID              reduce using rule 25 (bloque -> lecture .)
    PR_IF           reduce using rule 25 (bloque -> lecture .)
    PR_calculaRegresion reduce using rule 25 (bloque -> lecture .)
    PR_prediceResultado reduce using rule 25 (bloque -> lecture .)
    PR_calculaModa  reduce using rule 25 (bloque -> lecture .)
    PR_calculaMediana reduce using rule 25 (bloque -> lecture .)
    PR_calculaMedia reduce using rule 25 (bloque -> lecture .)
    PR_calculaPoisson reduce using rule 25 (bloque -> lecture .)
    PR_calculaBinomial reduce using rule 25 (bloque -> lecture .)
    PR_calculaNormal reduce using rule 25 (bloque -> lecture .)
    }               reduce using rule 25 (bloque -> lecture .)


state 44

    (26) bloque -> writing .

    PR_REPEAT       reduce using rule 26 (bloque -> writing .)
    PR_RETURN       reduce using rule 26 (bloque -> writing .)
    PR_READ         reduce using rule 26 (bloque -> writing .)
    PR_PRINT        reduce using rule 26 (bloque -> writing .)
    ID              reduce using rule 26 (bloque -> writing .)
    PR_IF           reduce using rule 26 (bloque -> writing .)
    PR_calculaRegresion reduce using rule 26 (bloque -> writing .)
    PR_prediceResultado reduce using rule 26 (bloque -> writing .)
    PR_calculaModa  reduce using rule 26 (bloque -> writing .)
    PR_calculaMediana reduce using rule 26 (bloque -> writing .)
    PR_calculaMedia reduce using rule 26 (bloque -> writing .)
    PR_calculaPoisson reduce using rule 26 (bloque -> writing .)
    PR_calculaBinomial reduce using rule 26 (bloque -> writing .)
    PR_calculaNormal reduce using rule 26 (bloque -> writing .)
    }               reduce using rule 26 (bloque -> writing .)


state 45

    (27) bloque -> call .

    PR_REPEAT       reduce using rule 27 (bloque -> call .)
    PR_RETURN       reduce using rule 27 (bloque -> call .)
    PR_READ         reduce using rule 27 (bloque -> call .)
    PR_PRINT        reduce using rule 27 (bloque -> call .)
    ID              reduce using rule 27 (bloque -> call .)
    PR_IF           reduce using rule 27 (bloque -> call .)
    PR_calculaRegresion reduce using rule 27 (bloque -> call .)
    PR_prediceResultado reduce using rule 27 (bloque -> call .)
    PR_calculaModa  reduce using rule 27 (bloque -> call .)
    PR_calculaMediana reduce using rule 27 (bloque -> call .)
    PR_calculaMedia reduce using rule 27 (bloque -> call .)
    PR_calculaPoisson reduce using rule 27 (bloque -> call .)
    PR_calculaBinomial reduce using rule 27 (bloque -> call .)
    PR_calculaNormal reduce using rule 27 (bloque -> call .)
    }               reduce using rule 27 (bloque -> call .)


state 46

    (37) assignation -> assignTo . = mega_exp

    =               shift and go to state 73


state 47

    (42) loop -> PR_REPEAT . ( mega_exp ) { more_bloques }

    (               shift and go to state 74


state 48

    (43) cond -> cond1 . cond2
    (45) cond2 -> . more_bloques } maybe_else
    (34) more_bloques -> . bloque
    (35) more_bloques -> . bloque more_bloques
    (36) more_bloques -> . empty
    (21) bloque -> . assignation
    (22) bloque -> . loop
    (23) bloque -> . cond
    (24) bloque -> . return
    (25) bloque -> . lecture
    (26) bloque -> . writing
    (27) bloque -> . call
    (100) empty -> .
    (37) assignation -> . assignTo = mega_exp
    (42) loop -> . PR_REPEAT ( mega_exp ) { more_bloques }
    (43) cond -> . cond1 cond2
    (50) return -> . PR_RETURN mega_exp
    (51) lecture -> . PR_READ ARR ID index
    (52) writing -> . PR_PRINT ( mega_exp )
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (38) assignTo -> . ID other_index
    (44) cond1 -> . PR_IF ( mega_exp ) {
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

    }               reduce using rule 100 (empty -> .)
    PR_REPEAT       shift and go to state 47
    PR_RETURN       shift and go to state 49
    PR_READ         shift and go to state 50
    PR_PRINT        shift and go to state 52
    ID              shift and go to state 51
    PR_IF           shift and go to state 55
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

    cond1                          shift and go to state 48
    cond2                          shift and go to state 75
    more_bloques                   shift and go to state 76
    bloque                         shift and go to state 37
    empty                          shift and go to state 38
    assignation                    shift and go to state 39
    loop                           shift and go to state 40
    cond                           shift and go to state 41
    return                         shift and go to state 42
    lecture                        shift and go to state 43
    writing                        shift and go to state 44
    call                           shift and go to state 45
    assignTo                       shift and go to state 46
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 49

    (50) return -> PR_RETURN . mega_exp
    (65) mega_exp -> . opt_not super_exp
    (66) mega_exp -> . opt_not super_exp log_op mega_exp
    (70) opt_not -> . PR_NOT
    (71) opt_not -> . empty
    (100) empty -> .

  ! shift/reduce conflict for PR_NOT resolved as shift
    PR_NOT          shift and go to state 79
    (               reduce using rule 100 (empty -> .)
    +               reduce using rule 100 (empty -> .)
    -               reduce using rule 100 (empty -> .)
    CTEI            reduce using rule 100 (empty -> .)
    CTEF            reduce using rule 100 (empty -> .)
    CTES            reduce using rule 100 (empty -> .)
    PR_TRUE         reduce using rule 100 (empty -> .)
    PR_FALSE        reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    PR_calculaRegresion reduce using rule 100 (empty -> .)
    PR_prediceResultado reduce using rule 100 (empty -> .)
    PR_calculaModa  reduce using rule 100 (empty -> .)
    PR_calculaMediana reduce using rule 100 (empty -> .)
    PR_calculaMedia reduce using rule 100 (empty -> .)
    PR_calculaPoisson reduce using rule 100 (empty -> .)
    PR_calculaBinomial reduce using rule 100 (empty -> .)
    PR_calculaNormal reduce using rule 100 (empty -> .)
    PR_AND          reduce using rule 100 (empty -> .)
    PR_OR           reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    LE              reduce using rule 100 (empty -> .)
    GE              reduce using rule 100 (empty -> .)
    EQ              reduce using rule 100 (empty -> .)
    NEQ             reduce using rule 100 (empty -> .)
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)

  ! PR_NOT          [ reduce using rule 100 (empty -> .) ]

    mega_exp                       shift and go to state 77
    opt_not                        shift and go to state 78
    empty                          shift and go to state 80

state 50

    (51) lecture -> PR_READ . ARR ID index

    ARR             shift and go to state 81


state 51

    (38) assignTo -> ID . other_index
    (63) call_1 -> ID . (
    (39) other_index -> . [ exp ]
    (40) other_index -> . [ exp ] [ exp ]
    (41) other_index -> . empty
    (100) empty -> .

    (               shift and go to state 83
    [               shift and go to state 84
    =               reduce using rule 100 (empty -> .)

    other_index                    shift and go to state 82
    empty                          shift and go to state 85

state 52

    (52) writing -> PR_PRINT . ( mega_exp )

    (               shift and go to state 86


state 53

    (61) call -> call_1 . call_2
    (64) call_2 -> . exp )
    (80) exp -> . termino
    (81) exp -> . termino + exp
    (82) exp -> . termino - exp
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]

    call_1                         shift and go to state 53
    call_2                         shift and go to state 87
    exp                            shift and go to state 88
    termino                        shift and go to state 89
    factor                         shift and go to state 92
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    func_pred                      shift and go to state 54

state 54

    (62) call -> func_pred .

    PR_REPEAT       reduce using rule 62 (call -> func_pred .)
    PR_RETURN       reduce using rule 62 (call -> func_pred .)
    PR_READ         reduce using rule 62 (call -> func_pred .)
    PR_PRINT        reduce using rule 62 (call -> func_pred .)
    ID              reduce using rule 62 (call -> func_pred .)
    PR_IF           reduce using rule 62 (call -> func_pred .)
    PR_calculaRegresion reduce using rule 62 (call -> func_pred .)
    PR_prediceResultado reduce using rule 62 (call -> func_pred .)
    PR_calculaModa  reduce using rule 62 (call -> func_pred .)
    PR_calculaMediana reduce using rule 62 (call -> func_pred .)
    PR_calculaMedia reduce using rule 62 (call -> func_pred .)
    PR_calculaPoisson reduce using rule 62 (call -> func_pred .)
    PR_calculaBinomial reduce using rule 62 (call -> func_pred .)
    PR_calculaNormal reduce using rule 62 (call -> func_pred .)
    }               reduce using rule 62 (call -> func_pred .)
    *               reduce using rule 62 (call -> func_pred .)
    /               reduce using rule 62 (call -> func_pred .)
    +               reduce using rule 62 (call -> func_pred .)
    -               reduce using rule 62 (call -> func_pred .)
    )               reduce using rule 62 (call -> func_pred .)
    <               reduce using rule 62 (call -> func_pred .)
    >               reduce using rule 62 (call -> func_pred .)
    LE              reduce using rule 62 (call -> func_pred .)
    GE              reduce using rule 62 (call -> func_pred .)
    EQ              reduce using rule 62 (call -> func_pred .)
    NEQ             reduce using rule 62 (call -> func_pred .)
    PR_AND          reduce using rule 62 (call -> func_pred .)
    PR_OR           reduce using rule 62 (call -> func_pred .)
    PR_NOT          reduce using rule 62 (call -> func_pred .)
    ]               reduce using rule 62 (call -> func_pred .)


state 55

    (44) cond1 -> PR_IF . ( mega_exp ) {

    (               shift and go to state 104


state 56

    (53) func_pred -> PR_calculaRegresion . ( exp )

    (               shift and go to state 105


state 57

    (54) func_pred -> PR_prediceResultado . ( exp )

    (               shift and go to state 106


state 58

    (55) func_pred -> PR_calculaModa . ( exp )

    (               shift and go to state 107


state 59

    (56) func_pred -> PR_calculaMediana . ( exp )

    (               shift and go to state 108


state 60

    (57) func_pred -> PR_calculaMedia . ( exp )

    (               shift and go to state 109


state 61

    (58) func_pred -> PR_calculaPoisson . ( exp )

    (               shift and go to state 110


state 62

    (59) func_pred -> PR_calculaBinomial . ( exp )

    (               shift and go to state 111


state 63

    (60) func_pred -> PR_calculaNormal . ( exp )

    (               shift and go to state 112


state 64

    (14) func1_2 -> more_ids ) . {

    {               shift and go to state 113


state 65

    (17) more_ids -> ids more_ids .

    )               reduce using rule 17 (more_ids -> ids more_ids .)


state 66

    (13) func1_1 -> PR_FUNCTION func_type ID . (

    (               shift and go to state 114


state 67

    (3) ids -> type ID index .

    PR_VAR          reduce using rule 3 (ids -> type ID index .)
    PR_FUNCTION     reduce using rule 3 (ids -> type ID index .)
    PR_MAIN         reduce using rule 3 (ids -> type ID index .)
    PR_REPEAT       reduce using rule 3 (ids -> type ID index .)
    PR_RETURN       reduce using rule 3 (ids -> type ID index .)
    PR_READ         reduce using rule 3 (ids -> type ID index .)
    PR_PRINT        reduce using rule 3 (ids -> type ID index .)
    ID              reduce using rule 3 (ids -> type ID index .)
    PR_IF           reduce using rule 3 (ids -> type ID index .)
    PR_calculaRegresion reduce using rule 3 (ids -> type ID index .)
    PR_prediceResultado reduce using rule 3 (ids -> type ID index .)
    PR_calculaModa  reduce using rule 3 (ids -> type ID index .)
    PR_calculaMediana reduce using rule 3 (ids -> type ID index .)
    PR_calculaMedia reduce using rule 3 (ids -> type ID index .)
    PR_calculaPoisson reduce using rule 3 (ids -> type ID index .)
    PR_calculaBinomial reduce using rule 3 (ids -> type ID index .)
    PR_calculaNormal reduce using rule 3 (ids -> type ID index .)
    }               reduce using rule 3 (ids -> type ID index .)
    PR_INT          reduce using rule 3 (ids -> type ID index .)
    PR_FLOAT        reduce using rule 3 (ids -> type ID index .)
    PR_BOOL         reduce using rule 3 (ids -> type ID index .)
    PR_STRING       reduce using rule 3 (ids -> type ID index .)
    )               reduce using rule 3 (ids -> type ID index .)


state 68

    (4) index -> [ . CTEI ]
    (5) index -> [ . CTEI ] [ CTEI ]

    CTEI            shift and go to state 115


state 69

    (6) index -> empty .

    PR_VAR          reduce using rule 6 (index -> empty .)
    PR_FUNCTION     reduce using rule 6 (index -> empty .)
    PR_MAIN         reduce using rule 6 (index -> empty .)
    PR_REPEAT       reduce using rule 6 (index -> empty .)
    PR_RETURN       reduce using rule 6 (index -> empty .)
    PR_READ         reduce using rule 6 (index -> empty .)
    PR_PRINT        reduce using rule 6 (index -> empty .)
    ID              reduce using rule 6 (index -> empty .)
    PR_IF           reduce using rule 6 (index -> empty .)
    PR_calculaRegresion reduce using rule 6 (index -> empty .)
    PR_prediceResultado reduce using rule 6 (index -> empty .)
    PR_calculaModa  reduce using rule 6 (index -> empty .)
    PR_calculaMediana reduce using rule 6 (index -> empty .)
    PR_calculaMedia reduce using rule 6 (index -> empty .)
    PR_calculaPoisson reduce using rule 6 (index -> empty .)
    PR_calculaBinomial reduce using rule 6 (index -> empty .)
    PR_calculaNormal reduce using rule 6 (index -> empty .)
    }               reduce using rule 6 (index -> empty .)
    PR_INT          reduce using rule 6 (index -> empty .)
    PR_FLOAT        reduce using rule 6 (index -> empty .)
    PR_BOOL         reduce using rule 6 (index -> empty .)
    PR_STRING       reduce using rule 6 (index -> empty .)
    )               reduce using rule 6 (index -> empty .)


state 70

    (99) main -> PR_MAIN { more_vars . more_bloques }
    (34) more_bloques -> . bloque
    (35) more_bloques -> . bloque more_bloques
    (36) more_bloques -> . empty
    (21) bloque -> . assignation
    (22) bloque -> . loop
    (23) bloque -> . cond
    (24) bloque -> . return
    (25) bloque -> . lecture
    (26) bloque -> . writing
    (27) bloque -> . call
    (100) empty -> .
    (37) assignation -> . assignTo = mega_exp
    (42) loop -> . PR_REPEAT ( mega_exp ) { more_bloques }
    (43) cond -> . cond1 cond2
    (50) return -> . PR_RETURN mega_exp
    (51) lecture -> . PR_READ ARR ID index
    (52) writing -> . PR_PRINT ( mega_exp )
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (38) assignTo -> . ID other_index
    (44) cond1 -> . PR_IF ( mega_exp ) {
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

    }               reduce using rule 100 (empty -> .)
    PR_REPEAT       shift and go to state 47
    PR_RETURN       shift and go to state 49
    PR_READ         shift and go to state 50
    PR_PRINT        shift and go to state 52
    ID              shift and go to state 51
    PR_IF           shift and go to state 55
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

    more_bloques                   shift and go to state 116
    bloque                         shift and go to state 37
    empty                          shift and go to state 38
    assignation                    shift and go to state 39
    loop                           shift and go to state 40
    cond                           shift and go to state 41
    return                         shift and go to state 42
    lecture                        shift and go to state 43
    writing                        shift and go to state 44
    call                           shift and go to state 45
    assignTo                       shift and go to state 46
    cond1                          shift and go to state 48
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 71

    (15) func2 -> more_vars more_bloques } .

    PR_FUNCTION     reduce using rule 15 (func2 -> more_vars more_bloques } .)
    PR_MAIN         reduce using rule 15 (func2 -> more_vars more_bloques } .)


state 72

    (35) more_bloques -> bloque more_bloques .

    }               reduce using rule 35 (more_bloques -> bloque more_bloques .)


state 73

    (37) assignation -> assignTo = . mega_exp
    (65) mega_exp -> . opt_not super_exp
    (66) mega_exp -> . opt_not super_exp log_op mega_exp
    (70) opt_not -> . PR_NOT
    (71) opt_not -> . empty
    (100) empty -> .

  ! shift/reduce conflict for PR_NOT resolved as shift
    PR_NOT          shift and go to state 79
    (               reduce using rule 100 (empty -> .)
    +               reduce using rule 100 (empty -> .)
    -               reduce using rule 100 (empty -> .)
    CTEI            reduce using rule 100 (empty -> .)
    CTEF            reduce using rule 100 (empty -> .)
    CTES            reduce using rule 100 (empty -> .)
    PR_TRUE         reduce using rule 100 (empty -> .)
    PR_FALSE        reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    PR_calculaRegresion reduce using rule 100 (empty -> .)
    PR_prediceResultado reduce using rule 100 (empty -> .)
    PR_calculaModa  reduce using rule 100 (empty -> .)
    PR_calculaMediana reduce using rule 100 (empty -> .)
    PR_calculaMedia reduce using rule 100 (empty -> .)
    PR_calculaPoisson reduce using rule 100 (empty -> .)
    PR_calculaBinomial reduce using rule 100 (empty -> .)
    PR_calculaNormal reduce using rule 100 (empty -> .)
    PR_AND          reduce using rule 100 (empty -> .)
    PR_OR           reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    LE              reduce using rule 100 (empty -> .)
    GE              reduce using rule 100 (empty -> .)
    EQ              reduce using rule 100 (empty -> .)
    NEQ             reduce using rule 100 (empty -> .)
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)

  ! PR_NOT          [ reduce using rule 100 (empty -> .) ]

    mega_exp                       shift and go to state 117
    opt_not                        shift and go to state 78
    empty                          shift and go to state 80

state 74

    (42) loop -> PR_REPEAT ( . mega_exp ) { more_bloques }
    (65) mega_exp -> . opt_not super_exp
    (66) mega_exp -> . opt_not super_exp log_op mega_exp
    (70) opt_not -> . PR_NOT
    (71) opt_not -> . empty
    (100) empty -> .

  ! shift/reduce conflict for PR_NOT resolved as shift
    PR_NOT          shift and go to state 79
    (               reduce using rule 100 (empty -> .)
    +               reduce using rule 100 (empty -> .)
    -               reduce using rule 100 (empty -> .)
    CTEI            reduce using rule 100 (empty -> .)
    CTEF            reduce using rule 100 (empty -> .)
    CTES            reduce using rule 100 (empty -> .)
    PR_TRUE         reduce using rule 100 (empty -> .)
    PR_FALSE        reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    PR_calculaRegresion reduce using rule 100 (empty -> .)
    PR_prediceResultado reduce using rule 100 (empty -> .)
    PR_calculaModa  reduce using rule 100 (empty -> .)
    PR_calculaMediana reduce using rule 100 (empty -> .)
    PR_calculaMedia reduce using rule 100 (empty -> .)
    PR_calculaPoisson reduce using rule 100 (empty -> .)
    PR_calculaBinomial reduce using rule 100 (empty -> .)
    PR_calculaNormal reduce using rule 100 (empty -> .)
    PR_AND          reduce using rule 100 (empty -> .)
    PR_OR           reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    LE              reduce using rule 100 (empty -> .)
    GE              reduce using rule 100 (empty -> .)
    EQ              reduce using rule 100 (empty -> .)
    NEQ             reduce using rule 100 (empty -> .)
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)

  ! PR_NOT          [ reduce using rule 100 (empty -> .) ]

    mega_exp                       shift and go to state 118
    opt_not                        shift and go to state 78
    empty                          shift and go to state 80

state 75

    (43) cond -> cond1 cond2 .

    PR_REPEAT       reduce using rule 43 (cond -> cond1 cond2 .)
    PR_RETURN       reduce using rule 43 (cond -> cond1 cond2 .)
    PR_READ         reduce using rule 43 (cond -> cond1 cond2 .)
    PR_PRINT        reduce using rule 43 (cond -> cond1 cond2 .)
    ID              reduce using rule 43 (cond -> cond1 cond2 .)
    PR_IF           reduce using rule 43 (cond -> cond1 cond2 .)
    PR_calculaRegresion reduce using rule 43 (cond -> cond1 cond2 .)
    PR_prediceResultado reduce using rule 43 (cond -> cond1 cond2 .)
    PR_calculaModa  reduce using rule 43 (cond -> cond1 cond2 .)
    PR_calculaMediana reduce using rule 43 (cond -> cond1 cond2 .)
    PR_calculaMedia reduce using rule 43 (cond -> cond1 cond2 .)
    PR_calculaPoisson reduce using rule 43 (cond -> cond1 cond2 .)
    PR_calculaBinomial reduce using rule 43 (cond -> cond1 cond2 .)
    PR_calculaNormal reduce using rule 43 (cond -> cond1 cond2 .)
    }               reduce using rule 43 (cond -> cond1 cond2 .)


state 76

    (45) cond2 -> more_bloques . } maybe_else

    }               shift and go to state 119


state 77

    (50) return -> PR_RETURN mega_exp .

    PR_REPEAT       reduce using rule 50 (return -> PR_RETURN mega_exp .)
    PR_RETURN       reduce using rule 50 (return -> PR_RETURN mega_exp .)
    PR_READ         reduce using rule 50 (return -> PR_RETURN mega_exp .)
    PR_PRINT        reduce using rule 50 (return -> PR_RETURN mega_exp .)
    ID              reduce using rule 50 (return -> PR_RETURN mega_exp .)
    PR_IF           reduce using rule 50 (return -> PR_RETURN mega_exp .)
    PR_calculaRegresion reduce using rule 50 (return -> PR_RETURN mega_exp .)
    PR_prediceResultado reduce using rule 50 (return -> PR_RETURN mega_exp .)
    PR_calculaModa  reduce using rule 50 (return -> PR_RETURN mega_exp .)
    PR_calculaMediana reduce using rule 50 (return -> PR_RETURN mega_exp .)
    PR_calculaMedia reduce using rule 50 (return -> PR_RETURN mega_exp .)
    PR_calculaPoisson reduce using rule 50 (return -> PR_RETURN mega_exp .)
    PR_calculaBinomial reduce using rule 50 (return -> PR_RETURN mega_exp .)
    PR_calculaNormal reduce using rule 50 (return -> PR_RETURN mega_exp .)
    }               reduce using rule 50 (return -> PR_RETURN mega_exp .)


state 78

    (65) mega_exp -> opt_not . super_exp
    (66) mega_exp -> opt_not . super_exp log_op mega_exp
    (72) super_exp -> . exp
    (73) super_exp -> . exp rel_op super_exp
    (80) exp -> . termino
    (81) exp -> . termino + exp
    (82) exp -> . termino - exp
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_calculaRegresion resolved as shift
  ! shift/reduce conflict for PR_prediceResultado resolved as shift
  ! shift/reduce conflict for PR_calculaModa resolved as shift
  ! shift/reduce conflict for PR_calculaMediana resolved as shift
  ! shift/reduce conflict for PR_calculaMedia resolved as shift
  ! shift/reduce conflict for PR_calculaPoisson resolved as shift
  ! shift/reduce conflict for PR_calculaBinomial resolved as shift
  ! shift/reduce conflict for PR_calculaNormal resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    LE              reduce using rule 100 (empty -> .)
    GE              reduce using rule 100 (empty -> .)
    EQ              reduce using rule 100 (empty -> .)
    NEQ             reduce using rule 100 (empty -> .)
    PR_AND          reduce using rule 100 (empty -> .)
    PR_OR           reduce using rule 100 (empty -> .)
    PR_NOT          reduce using rule 100 (empty -> .)
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaRegresion [ reduce using rule 100 (empty -> .) ]
  ! PR_prediceResultado [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaModa  [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMediana [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMedia [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaPoisson [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaBinomial [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaNormal [ reduce using rule 100 (empty -> .) ]

    super_exp                      shift and go to state 120
    exp                            shift and go to state 121
    termino                        shift and go to state 89
    factor                         shift and go to state 92
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 79

    (70) opt_not -> PR_NOT .

    (               reduce using rule 70 (opt_not -> PR_NOT .)
    +               reduce using rule 70 (opt_not -> PR_NOT .)
    -               reduce using rule 70 (opt_not -> PR_NOT .)
    CTEI            reduce using rule 70 (opt_not -> PR_NOT .)
    CTEF            reduce using rule 70 (opt_not -> PR_NOT .)
    CTES            reduce using rule 70 (opt_not -> PR_NOT .)
    PR_TRUE         reduce using rule 70 (opt_not -> PR_NOT .)
    PR_FALSE        reduce using rule 70 (opt_not -> PR_NOT .)
    ID              reduce using rule 70 (opt_not -> PR_NOT .)
    PR_calculaRegresion reduce using rule 70 (opt_not -> PR_NOT .)
    PR_prediceResultado reduce using rule 70 (opt_not -> PR_NOT .)
    PR_calculaModa  reduce using rule 70 (opt_not -> PR_NOT .)
    PR_calculaMediana reduce using rule 70 (opt_not -> PR_NOT .)
    PR_calculaMedia reduce using rule 70 (opt_not -> PR_NOT .)
    PR_calculaPoisson reduce using rule 70 (opt_not -> PR_NOT .)
    PR_calculaBinomial reduce using rule 70 (opt_not -> PR_NOT .)
    PR_calculaNormal reduce using rule 70 (opt_not -> PR_NOT .)
    PR_AND          reduce using rule 70 (opt_not -> PR_NOT .)
    PR_OR           reduce using rule 70 (opt_not -> PR_NOT .)
    PR_NOT          reduce using rule 70 (opt_not -> PR_NOT .)
    <               reduce using rule 70 (opt_not -> PR_NOT .)
    >               reduce using rule 70 (opt_not -> PR_NOT .)
    LE              reduce using rule 70 (opt_not -> PR_NOT .)
    GE              reduce using rule 70 (opt_not -> PR_NOT .)
    EQ              reduce using rule 70 (opt_not -> PR_NOT .)
    NEQ             reduce using rule 70 (opt_not -> PR_NOT .)
    *               reduce using rule 70 (opt_not -> PR_NOT .)
    /               reduce using rule 70 (opt_not -> PR_NOT .)
    PR_REPEAT       reduce using rule 70 (opt_not -> PR_NOT .)
    PR_RETURN       reduce using rule 70 (opt_not -> PR_NOT .)
    PR_READ         reduce using rule 70 (opt_not -> PR_NOT .)
    PR_PRINT        reduce using rule 70 (opt_not -> PR_NOT .)
    PR_IF           reduce using rule 70 (opt_not -> PR_NOT .)
    }               reduce using rule 70 (opt_not -> PR_NOT .)
    )               reduce using rule 70 (opt_not -> PR_NOT .)


state 80

    (71) opt_not -> empty .

    (               reduce using rule 71 (opt_not -> empty .)
    +               reduce using rule 71 (opt_not -> empty .)
    -               reduce using rule 71 (opt_not -> empty .)
    CTEI            reduce using rule 71 (opt_not -> empty .)
    CTEF            reduce using rule 71 (opt_not -> empty .)
    CTES            reduce using rule 71 (opt_not -> empty .)
    PR_TRUE         reduce using rule 71 (opt_not -> empty .)
    PR_FALSE        reduce using rule 71 (opt_not -> empty .)
    ID              reduce using rule 71 (opt_not -> empty .)
    PR_calculaRegresion reduce using rule 71 (opt_not -> empty .)
    PR_prediceResultado reduce using rule 71 (opt_not -> empty .)
    PR_calculaModa  reduce using rule 71 (opt_not -> empty .)
    PR_calculaMediana reduce using rule 71 (opt_not -> empty .)
    PR_calculaMedia reduce using rule 71 (opt_not -> empty .)
    PR_calculaPoisson reduce using rule 71 (opt_not -> empty .)
    PR_calculaBinomial reduce using rule 71 (opt_not -> empty .)
    PR_calculaNormal reduce using rule 71 (opt_not -> empty .)
    PR_AND          reduce using rule 71 (opt_not -> empty .)
    PR_OR           reduce using rule 71 (opt_not -> empty .)
    PR_NOT          reduce using rule 71 (opt_not -> empty .)
    <               reduce using rule 71 (opt_not -> empty .)
    >               reduce using rule 71 (opt_not -> empty .)
    LE              reduce using rule 71 (opt_not -> empty .)
    GE              reduce using rule 71 (opt_not -> empty .)
    EQ              reduce using rule 71 (opt_not -> empty .)
    NEQ             reduce using rule 71 (opt_not -> empty .)
    *               reduce using rule 71 (opt_not -> empty .)
    /               reduce using rule 71 (opt_not -> empty .)
    PR_REPEAT       reduce using rule 71 (opt_not -> empty .)
    PR_RETURN       reduce using rule 71 (opt_not -> empty .)
    PR_READ         reduce using rule 71 (opt_not -> empty .)
    PR_PRINT        reduce using rule 71 (opt_not -> empty .)
    PR_IF           reduce using rule 71 (opt_not -> empty .)
    }               reduce using rule 71 (opt_not -> empty .)
    )               reduce using rule 71 (opt_not -> empty .)


state 81

    (51) lecture -> PR_READ ARR . ID index

    ID              shift and go to state 122


state 82

    (38) assignTo -> ID other_index .

    =               reduce using rule 38 (assignTo -> ID other_index .)


state 83

    (63) call_1 -> ID ( .

    (               reduce using rule 63 (call_1 -> ID ( .)
    +               reduce using rule 63 (call_1 -> ID ( .)
    -               reduce using rule 63 (call_1 -> ID ( .)
    CTEI            reduce using rule 63 (call_1 -> ID ( .)
    CTEF            reduce using rule 63 (call_1 -> ID ( .)
    CTES            reduce using rule 63 (call_1 -> ID ( .)
    PR_TRUE         reduce using rule 63 (call_1 -> ID ( .)
    PR_FALSE        reduce using rule 63 (call_1 -> ID ( .)
    ID              reduce using rule 63 (call_1 -> ID ( .)
    PR_calculaRegresion reduce using rule 63 (call_1 -> ID ( .)
    PR_prediceResultado reduce using rule 63 (call_1 -> ID ( .)
    PR_calculaModa  reduce using rule 63 (call_1 -> ID ( .)
    PR_calculaMediana reduce using rule 63 (call_1 -> ID ( .)
    PR_calculaMedia reduce using rule 63 (call_1 -> ID ( .)
    PR_calculaPoisson reduce using rule 63 (call_1 -> ID ( .)
    PR_calculaBinomial reduce using rule 63 (call_1 -> ID ( .)
    PR_calculaNormal reduce using rule 63 (call_1 -> ID ( .)
    )               reduce using rule 63 (call_1 -> ID ( .)
    *               reduce using rule 63 (call_1 -> ID ( .)
    /               reduce using rule 63 (call_1 -> ID ( .)


state 84

    (39) other_index -> [ . exp ]
    (40) other_index -> [ . exp ] [ exp ]
    (80) exp -> . termino
    (81) exp -> . termino + exp
    (82) exp -> . termino - exp
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    ]               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]

    exp                            shift and go to state 123
    termino                        shift and go to state 89
    factor                         shift and go to state 92
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 85

    (41) other_index -> empty .

    =               reduce using rule 41 (other_index -> empty .)
    *               reduce using rule 41 (other_index -> empty .)
    /               reduce using rule 41 (other_index -> empty .)
    +               reduce using rule 41 (other_index -> empty .)
    -               reduce using rule 41 (other_index -> empty .)
    )               reduce using rule 41 (other_index -> empty .)
    <               reduce using rule 41 (other_index -> empty .)
    >               reduce using rule 41 (other_index -> empty .)
    LE              reduce using rule 41 (other_index -> empty .)
    GE              reduce using rule 41 (other_index -> empty .)
    EQ              reduce using rule 41 (other_index -> empty .)
    NEQ             reduce using rule 41 (other_index -> empty .)
    PR_AND          reduce using rule 41 (other_index -> empty .)
    PR_OR           reduce using rule 41 (other_index -> empty .)
    PR_NOT          reduce using rule 41 (other_index -> empty .)
    PR_REPEAT       reduce using rule 41 (other_index -> empty .)
    PR_RETURN       reduce using rule 41 (other_index -> empty .)
    PR_READ         reduce using rule 41 (other_index -> empty .)
    PR_PRINT        reduce using rule 41 (other_index -> empty .)
    ID              reduce using rule 41 (other_index -> empty .)
    PR_IF           reduce using rule 41 (other_index -> empty .)
    PR_calculaRegresion reduce using rule 41 (other_index -> empty .)
    PR_prediceResultado reduce using rule 41 (other_index -> empty .)
    PR_calculaModa  reduce using rule 41 (other_index -> empty .)
    PR_calculaMediana reduce using rule 41 (other_index -> empty .)
    PR_calculaMedia reduce using rule 41 (other_index -> empty .)
    PR_calculaPoisson reduce using rule 41 (other_index -> empty .)
    PR_calculaBinomial reduce using rule 41 (other_index -> empty .)
    PR_calculaNormal reduce using rule 41 (other_index -> empty .)
    }               reduce using rule 41 (other_index -> empty .)
    ]               reduce using rule 41 (other_index -> empty .)


state 86

    (52) writing -> PR_PRINT ( . mega_exp )
    (65) mega_exp -> . opt_not super_exp
    (66) mega_exp -> . opt_not super_exp log_op mega_exp
    (70) opt_not -> . PR_NOT
    (71) opt_not -> . empty
    (100) empty -> .

  ! shift/reduce conflict for PR_NOT resolved as shift
    PR_NOT          shift and go to state 79
    (               reduce using rule 100 (empty -> .)
    +               reduce using rule 100 (empty -> .)
    -               reduce using rule 100 (empty -> .)
    CTEI            reduce using rule 100 (empty -> .)
    CTEF            reduce using rule 100 (empty -> .)
    CTES            reduce using rule 100 (empty -> .)
    PR_TRUE         reduce using rule 100 (empty -> .)
    PR_FALSE        reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    PR_calculaRegresion reduce using rule 100 (empty -> .)
    PR_prediceResultado reduce using rule 100 (empty -> .)
    PR_calculaModa  reduce using rule 100 (empty -> .)
    PR_calculaMediana reduce using rule 100 (empty -> .)
    PR_calculaMedia reduce using rule 100 (empty -> .)
    PR_calculaPoisson reduce using rule 100 (empty -> .)
    PR_calculaBinomial reduce using rule 100 (empty -> .)
    PR_calculaNormal reduce using rule 100 (empty -> .)
    PR_AND          reduce using rule 100 (empty -> .)
    PR_OR           reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    LE              reduce using rule 100 (empty -> .)
    GE              reduce using rule 100 (empty -> .)
    EQ              reduce using rule 100 (empty -> .)
    NEQ             reduce using rule 100 (empty -> .)
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)

  ! PR_NOT          [ reduce using rule 100 (empty -> .) ]

    mega_exp                       shift and go to state 124
    opt_not                        shift and go to state 78
    empty                          shift and go to state 80

state 87

    (61) call -> call_1 call_2 .

    PR_REPEAT       reduce using rule 61 (call -> call_1 call_2 .)
    PR_RETURN       reduce using rule 61 (call -> call_1 call_2 .)
    PR_READ         reduce using rule 61 (call -> call_1 call_2 .)
    PR_PRINT        reduce using rule 61 (call -> call_1 call_2 .)
    ID              reduce using rule 61 (call -> call_1 call_2 .)
    PR_IF           reduce using rule 61 (call -> call_1 call_2 .)
    PR_calculaRegresion reduce using rule 61 (call -> call_1 call_2 .)
    PR_prediceResultado reduce using rule 61 (call -> call_1 call_2 .)
    PR_calculaModa  reduce using rule 61 (call -> call_1 call_2 .)
    PR_calculaMediana reduce using rule 61 (call -> call_1 call_2 .)
    PR_calculaMedia reduce using rule 61 (call -> call_1 call_2 .)
    PR_calculaPoisson reduce using rule 61 (call -> call_1 call_2 .)
    PR_calculaBinomial reduce using rule 61 (call -> call_1 call_2 .)
    PR_calculaNormal reduce using rule 61 (call -> call_1 call_2 .)
    }               reduce using rule 61 (call -> call_1 call_2 .)
    *               reduce using rule 61 (call -> call_1 call_2 .)
    /               reduce using rule 61 (call -> call_1 call_2 .)
    +               reduce using rule 61 (call -> call_1 call_2 .)
    -               reduce using rule 61 (call -> call_1 call_2 .)
    )               reduce using rule 61 (call -> call_1 call_2 .)
    <               reduce using rule 61 (call -> call_1 call_2 .)
    >               reduce using rule 61 (call -> call_1 call_2 .)
    LE              reduce using rule 61 (call -> call_1 call_2 .)
    GE              reduce using rule 61 (call -> call_1 call_2 .)
    EQ              reduce using rule 61 (call -> call_1 call_2 .)
    NEQ             reduce using rule 61 (call -> call_1 call_2 .)
    PR_AND          reduce using rule 61 (call -> call_1 call_2 .)
    PR_OR           reduce using rule 61 (call -> call_1 call_2 .)
    PR_NOT          reduce using rule 61 (call -> call_1 call_2 .)
    ]               reduce using rule 61 (call -> call_1 call_2 .)


state 88

    (64) call_2 -> exp . )

    )               shift and go to state 125


state 89

    (80) exp -> termino .
    (81) exp -> termino . + exp
    (82) exp -> termino . - exp

    )               reduce using rule 80 (exp -> termino .)
    <               reduce using rule 80 (exp -> termino .)
    >               reduce using rule 80 (exp -> termino .)
    LE              reduce using rule 80 (exp -> termino .)
    GE              reduce using rule 80 (exp -> termino .)
    EQ              reduce using rule 80 (exp -> termino .)
    NEQ             reduce using rule 80 (exp -> termino .)
    PR_AND          reduce using rule 80 (exp -> termino .)
    PR_OR           reduce using rule 80 (exp -> termino .)
    PR_NOT          reduce using rule 80 (exp -> termino .)
    PR_REPEAT       reduce using rule 80 (exp -> termino .)
    PR_RETURN       reduce using rule 80 (exp -> termino .)
    PR_READ         reduce using rule 80 (exp -> termino .)
    PR_PRINT        reduce using rule 80 (exp -> termino .)
    ID              reduce using rule 80 (exp -> termino .)
    PR_IF           reduce using rule 80 (exp -> termino .)
    PR_calculaRegresion reduce using rule 80 (exp -> termino .)
    PR_prediceResultado reduce using rule 80 (exp -> termino .)
    PR_calculaModa  reduce using rule 80 (exp -> termino .)
    PR_calculaMediana reduce using rule 80 (exp -> termino .)
    PR_calculaMedia reduce using rule 80 (exp -> termino .)
    PR_calculaPoisson reduce using rule 80 (exp -> termino .)
    PR_calculaBinomial reduce using rule 80 (exp -> termino .)
    PR_calculaNormal reduce using rule 80 (exp -> termino .)
    }               reduce using rule 80 (exp -> termino .)
    ]               reduce using rule 80 (exp -> termino .)
    +               shift and go to state 126
    -               shift and go to state 127


state 90

    (87) factor -> + . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_calculaRegresion resolved as shift
  ! shift/reduce conflict for PR_prediceResultado resolved as shift
  ! shift/reduce conflict for PR_calculaModa resolved as shift
  ! shift/reduce conflict for PR_calculaMediana resolved as shift
  ! shift/reduce conflict for PR_calculaMedia resolved as shift
  ! shift/reduce conflict for PR_calculaPoisson resolved as shift
  ! shift/reduce conflict for PR_calculaBinomial resolved as shift
  ! shift/reduce conflict for PR_calculaNormal resolved as shift
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    +               reduce using rule 100 (empty -> .)
    -               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    LE              reduce using rule 100 (empty -> .)
    GE              reduce using rule 100 (empty -> .)
    EQ              reduce using rule 100 (empty -> .)
    NEQ             reduce using rule 100 (empty -> .)
    PR_AND          reduce using rule 100 (empty -> .)
    PR_OR           reduce using rule 100 (empty -> .)
    PR_NOT          reduce using rule 100 (empty -> .)
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)
    ]               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaRegresion [ reduce using rule 100 (empty -> .) ]
  ! PR_prediceResultado [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaModa  [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMediana [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMedia [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaPoisson [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaBinomial [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaNormal [ reduce using rule 100 (empty -> .) ]

    var_cte                        shift and go to state 128
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 91

    (88) factor -> - . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_calculaRegresion resolved as shift
  ! shift/reduce conflict for PR_prediceResultado resolved as shift
  ! shift/reduce conflict for PR_calculaModa resolved as shift
  ! shift/reduce conflict for PR_calculaMediana resolved as shift
  ! shift/reduce conflict for PR_calculaMedia resolved as shift
  ! shift/reduce conflict for PR_calculaPoisson resolved as shift
  ! shift/reduce conflict for PR_calculaBinomial resolved as shift
  ! shift/reduce conflict for PR_calculaNormal resolved as shift
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    +               reduce using rule 100 (empty -> .)
    -               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    LE              reduce using rule 100 (empty -> .)
    GE              reduce using rule 100 (empty -> .)
    EQ              reduce using rule 100 (empty -> .)
    NEQ             reduce using rule 100 (empty -> .)
    PR_AND          reduce using rule 100 (empty -> .)
    PR_OR           reduce using rule 100 (empty -> .)
    PR_NOT          reduce using rule 100 (empty -> .)
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)
    ]               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaRegresion [ reduce using rule 100 (empty -> .) ]
  ! PR_prediceResultado [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaModa  [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMediana [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMedia [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaPoisson [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaBinomial [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaNormal [ reduce using rule 100 (empty -> .) ]

    var_cte                        shift and go to state 129
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 92

    (83) termino -> factor .
    (84) termino -> factor . * termino
    (85) termino -> factor . / termino

    +               reduce using rule 83 (termino -> factor .)
    -               reduce using rule 83 (termino -> factor .)
    )               reduce using rule 83 (termino -> factor .)
    <               reduce using rule 83 (termino -> factor .)
    >               reduce using rule 83 (termino -> factor .)
    LE              reduce using rule 83 (termino -> factor .)
    GE              reduce using rule 83 (termino -> factor .)
    EQ              reduce using rule 83 (termino -> factor .)
    NEQ             reduce using rule 83 (termino -> factor .)
    PR_AND          reduce using rule 83 (termino -> factor .)
    PR_OR           reduce using rule 83 (termino -> factor .)
    PR_NOT          reduce using rule 83 (termino -> factor .)
    PR_REPEAT       reduce using rule 83 (termino -> factor .)
    PR_RETURN       reduce using rule 83 (termino -> factor .)
    PR_READ         reduce using rule 83 (termino -> factor .)
    PR_PRINT        reduce using rule 83 (termino -> factor .)
    ID              reduce using rule 83 (termino -> factor .)
    PR_IF           reduce using rule 83 (termino -> factor .)
    PR_calculaRegresion reduce using rule 83 (termino -> factor .)
    PR_prediceResultado reduce using rule 83 (termino -> factor .)
    PR_calculaModa  reduce using rule 83 (termino -> factor .)
    PR_calculaMediana reduce using rule 83 (termino -> factor .)
    PR_calculaMedia reduce using rule 83 (termino -> factor .)
    PR_calculaPoisson reduce using rule 83 (termino -> factor .)
    PR_calculaBinomial reduce using rule 83 (termino -> factor .)
    PR_calculaNormal reduce using rule 83 (termino -> factor .)
    }               reduce using rule 83 (termino -> factor .)
    ]               reduce using rule 83 (termino -> factor .)
    *               shift and go to state 130
    /               shift and go to state 131


state 93

    (86) factor -> ( . super_exp )
    (72) super_exp -> . exp
    (73) super_exp -> . exp rel_op super_exp
    (80) exp -> . termino
    (81) exp -> . termino + exp
    (82) exp -> . termino - exp
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    LE              reduce using rule 100 (empty -> .)
    GE              reduce using rule 100 (empty -> .)
    EQ              reduce using rule 100 (empty -> .)
    NEQ             reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]

    super_exp                      shift and go to state 132
    exp                            shift and go to state 121
    termino                        shift and go to state 89
    factor                         shift and go to state 92
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 94

    (89) factor -> var_cte .

    *               reduce using rule 89 (factor -> var_cte .)
    /               reduce using rule 89 (factor -> var_cte .)
    +               reduce using rule 89 (factor -> var_cte .)
    -               reduce using rule 89 (factor -> var_cte .)
    )               reduce using rule 89 (factor -> var_cte .)
    <               reduce using rule 89 (factor -> var_cte .)
    >               reduce using rule 89 (factor -> var_cte .)
    LE              reduce using rule 89 (factor -> var_cte .)
    GE              reduce using rule 89 (factor -> var_cte .)
    EQ              reduce using rule 89 (factor -> var_cte .)
    NEQ             reduce using rule 89 (factor -> var_cte .)
    PR_AND          reduce using rule 89 (factor -> var_cte .)
    PR_OR           reduce using rule 89 (factor -> var_cte .)
    PR_NOT          reduce using rule 89 (factor -> var_cte .)
    PR_REPEAT       reduce using rule 89 (factor -> var_cte .)
    PR_RETURN       reduce using rule 89 (factor -> var_cte .)
    PR_READ         reduce using rule 89 (factor -> var_cte .)
    PR_PRINT        reduce using rule 89 (factor -> var_cte .)
    ID              reduce using rule 89 (factor -> var_cte .)
    PR_IF           reduce using rule 89 (factor -> var_cte .)
    PR_calculaRegresion reduce using rule 89 (factor -> var_cte .)
    PR_prediceResultado reduce using rule 89 (factor -> var_cte .)
    PR_calculaModa  reduce using rule 89 (factor -> var_cte .)
    PR_calculaMediana reduce using rule 89 (factor -> var_cte .)
    PR_calculaMedia reduce using rule 89 (factor -> var_cte .)
    PR_calculaPoisson reduce using rule 89 (factor -> var_cte .)
    PR_calculaBinomial reduce using rule 89 (factor -> var_cte .)
    PR_calculaNormal reduce using rule 89 (factor -> var_cte .)
    }               reduce using rule 89 (factor -> var_cte .)
    ]               reduce using rule 89 (factor -> var_cte .)


state 95

    (90) var_cte -> other .

    *               reduce using rule 90 (var_cte -> other .)
    /               reduce using rule 90 (var_cte -> other .)
    +               reduce using rule 90 (var_cte -> other .)
    -               reduce using rule 90 (var_cte -> other .)
    )               reduce using rule 90 (var_cte -> other .)
    <               reduce using rule 90 (var_cte -> other .)
    >               reduce using rule 90 (var_cte -> other .)
    LE              reduce using rule 90 (var_cte -> other .)
    GE              reduce using rule 90 (var_cte -> other .)
    EQ              reduce using rule 90 (var_cte -> other .)
    NEQ             reduce using rule 90 (var_cte -> other .)
    PR_AND          reduce using rule 90 (var_cte -> other .)
    PR_OR           reduce using rule 90 (var_cte -> other .)
    PR_NOT          reduce using rule 90 (var_cte -> other .)
    PR_REPEAT       reduce using rule 90 (var_cte -> other .)
    PR_RETURN       reduce using rule 90 (var_cte -> other .)
    PR_READ         reduce using rule 90 (var_cte -> other .)
    PR_PRINT        reduce using rule 90 (var_cte -> other .)
    ID              reduce using rule 90 (var_cte -> other .)
    PR_IF           reduce using rule 90 (var_cte -> other .)
    PR_calculaRegresion reduce using rule 90 (var_cte -> other .)
    PR_prediceResultado reduce using rule 90 (var_cte -> other .)
    PR_calculaModa  reduce using rule 90 (var_cte -> other .)
    PR_calculaMediana reduce using rule 90 (var_cte -> other .)
    PR_calculaMedia reduce using rule 90 (var_cte -> other .)
    PR_calculaPoisson reduce using rule 90 (var_cte -> other .)
    PR_calculaBinomial reduce using rule 90 (var_cte -> other .)
    PR_calculaNormal reduce using rule 90 (var_cte -> other .)
    }               reduce using rule 90 (var_cte -> other .)
    ]               reduce using rule 90 (var_cte -> other .)


state 96

    (91) var_cte -> CTEI .

    *               reduce using rule 91 (var_cte -> CTEI .)
    /               reduce using rule 91 (var_cte -> CTEI .)
    +               reduce using rule 91 (var_cte -> CTEI .)
    -               reduce using rule 91 (var_cte -> CTEI .)
    )               reduce using rule 91 (var_cte -> CTEI .)
    <               reduce using rule 91 (var_cte -> CTEI .)
    >               reduce using rule 91 (var_cte -> CTEI .)
    LE              reduce using rule 91 (var_cte -> CTEI .)
    GE              reduce using rule 91 (var_cte -> CTEI .)
    EQ              reduce using rule 91 (var_cte -> CTEI .)
    NEQ             reduce using rule 91 (var_cte -> CTEI .)
    PR_AND          reduce using rule 91 (var_cte -> CTEI .)
    PR_OR           reduce using rule 91 (var_cte -> CTEI .)
    PR_NOT          reduce using rule 91 (var_cte -> CTEI .)
    PR_REPEAT       reduce using rule 91 (var_cte -> CTEI .)
    PR_RETURN       reduce using rule 91 (var_cte -> CTEI .)
    PR_READ         reduce using rule 91 (var_cte -> CTEI .)
    PR_PRINT        reduce using rule 91 (var_cte -> CTEI .)
    ID              reduce using rule 91 (var_cte -> CTEI .)
    PR_IF           reduce using rule 91 (var_cte -> CTEI .)
    PR_calculaRegresion reduce using rule 91 (var_cte -> CTEI .)
    PR_prediceResultado reduce using rule 91 (var_cte -> CTEI .)
    PR_calculaModa  reduce using rule 91 (var_cte -> CTEI .)
    PR_calculaMediana reduce using rule 91 (var_cte -> CTEI .)
    PR_calculaMedia reduce using rule 91 (var_cte -> CTEI .)
    PR_calculaPoisson reduce using rule 91 (var_cte -> CTEI .)
    PR_calculaBinomial reduce using rule 91 (var_cte -> CTEI .)
    PR_calculaNormal reduce using rule 91 (var_cte -> CTEI .)
    }               reduce using rule 91 (var_cte -> CTEI .)
    ]               reduce using rule 91 (var_cte -> CTEI .)


state 97

    (92) var_cte -> CTEF .

    *               reduce using rule 92 (var_cte -> CTEF .)
    /               reduce using rule 92 (var_cte -> CTEF .)
    +               reduce using rule 92 (var_cte -> CTEF .)
    -               reduce using rule 92 (var_cte -> CTEF .)
    )               reduce using rule 92 (var_cte -> CTEF .)
    <               reduce using rule 92 (var_cte -> CTEF .)
    >               reduce using rule 92 (var_cte -> CTEF .)
    LE              reduce using rule 92 (var_cte -> CTEF .)
    GE              reduce using rule 92 (var_cte -> CTEF .)
    EQ              reduce using rule 92 (var_cte -> CTEF .)
    NEQ             reduce using rule 92 (var_cte -> CTEF .)
    PR_AND          reduce using rule 92 (var_cte -> CTEF .)
    PR_OR           reduce using rule 92 (var_cte -> CTEF .)
    PR_NOT          reduce using rule 92 (var_cte -> CTEF .)
    PR_REPEAT       reduce using rule 92 (var_cte -> CTEF .)
    PR_RETURN       reduce using rule 92 (var_cte -> CTEF .)
    PR_READ         reduce using rule 92 (var_cte -> CTEF .)
    PR_PRINT        reduce using rule 92 (var_cte -> CTEF .)
    ID              reduce using rule 92 (var_cte -> CTEF .)
    PR_IF           reduce using rule 92 (var_cte -> CTEF .)
    PR_calculaRegresion reduce using rule 92 (var_cte -> CTEF .)
    PR_prediceResultado reduce using rule 92 (var_cte -> CTEF .)
    PR_calculaModa  reduce using rule 92 (var_cte -> CTEF .)
    PR_calculaMediana reduce using rule 92 (var_cte -> CTEF .)
    PR_calculaMedia reduce using rule 92 (var_cte -> CTEF .)
    PR_calculaPoisson reduce using rule 92 (var_cte -> CTEF .)
    PR_calculaBinomial reduce using rule 92 (var_cte -> CTEF .)
    PR_calculaNormal reduce using rule 92 (var_cte -> CTEF .)
    }               reduce using rule 92 (var_cte -> CTEF .)
    ]               reduce using rule 92 (var_cte -> CTEF .)


state 98

    (93) var_cte -> CTES .

    *               reduce using rule 93 (var_cte -> CTES .)
    /               reduce using rule 93 (var_cte -> CTES .)
    +               reduce using rule 93 (var_cte -> CTES .)
    -               reduce using rule 93 (var_cte -> CTES .)
    )               reduce using rule 93 (var_cte -> CTES .)
    <               reduce using rule 93 (var_cte -> CTES .)
    >               reduce using rule 93 (var_cte -> CTES .)
    LE              reduce using rule 93 (var_cte -> CTES .)
    GE              reduce using rule 93 (var_cte -> CTES .)
    EQ              reduce using rule 93 (var_cte -> CTES .)
    NEQ             reduce using rule 93 (var_cte -> CTES .)
    PR_AND          reduce using rule 93 (var_cte -> CTES .)
    PR_OR           reduce using rule 93 (var_cte -> CTES .)
    PR_NOT          reduce using rule 93 (var_cte -> CTES .)
    PR_REPEAT       reduce using rule 93 (var_cte -> CTES .)
    PR_RETURN       reduce using rule 93 (var_cte -> CTES .)
    PR_READ         reduce using rule 93 (var_cte -> CTES .)
    PR_PRINT        reduce using rule 93 (var_cte -> CTES .)
    ID              reduce using rule 93 (var_cte -> CTES .)
    PR_IF           reduce using rule 93 (var_cte -> CTES .)
    PR_calculaRegresion reduce using rule 93 (var_cte -> CTES .)
    PR_prediceResultado reduce using rule 93 (var_cte -> CTES .)
    PR_calculaModa  reduce using rule 93 (var_cte -> CTES .)
    PR_calculaMediana reduce using rule 93 (var_cte -> CTES .)
    PR_calculaMedia reduce using rule 93 (var_cte -> CTES .)
    PR_calculaPoisson reduce using rule 93 (var_cte -> CTES .)
    PR_calculaBinomial reduce using rule 93 (var_cte -> CTES .)
    PR_calculaNormal reduce using rule 93 (var_cte -> CTES .)
    }               reduce using rule 93 (var_cte -> CTES .)
    ]               reduce using rule 93 (var_cte -> CTES .)


state 99

    (94) var_cte -> PR_TRUE .

    *               reduce using rule 94 (var_cte -> PR_TRUE .)
    /               reduce using rule 94 (var_cte -> PR_TRUE .)
    +               reduce using rule 94 (var_cte -> PR_TRUE .)
    -               reduce using rule 94 (var_cte -> PR_TRUE .)
    )               reduce using rule 94 (var_cte -> PR_TRUE .)
    <               reduce using rule 94 (var_cte -> PR_TRUE .)
    >               reduce using rule 94 (var_cte -> PR_TRUE .)
    LE              reduce using rule 94 (var_cte -> PR_TRUE .)
    GE              reduce using rule 94 (var_cte -> PR_TRUE .)
    EQ              reduce using rule 94 (var_cte -> PR_TRUE .)
    NEQ             reduce using rule 94 (var_cte -> PR_TRUE .)
    PR_AND          reduce using rule 94 (var_cte -> PR_TRUE .)
    PR_OR           reduce using rule 94 (var_cte -> PR_TRUE .)
    PR_NOT          reduce using rule 94 (var_cte -> PR_TRUE .)
    PR_REPEAT       reduce using rule 94 (var_cte -> PR_TRUE .)
    PR_RETURN       reduce using rule 94 (var_cte -> PR_TRUE .)
    PR_READ         reduce using rule 94 (var_cte -> PR_TRUE .)
    PR_PRINT        reduce using rule 94 (var_cte -> PR_TRUE .)
    ID              reduce using rule 94 (var_cte -> PR_TRUE .)
    PR_IF           reduce using rule 94 (var_cte -> PR_TRUE .)
    PR_calculaRegresion reduce using rule 94 (var_cte -> PR_TRUE .)
    PR_prediceResultado reduce using rule 94 (var_cte -> PR_TRUE .)
    PR_calculaModa  reduce using rule 94 (var_cte -> PR_TRUE .)
    PR_calculaMediana reduce using rule 94 (var_cte -> PR_TRUE .)
    PR_calculaMedia reduce using rule 94 (var_cte -> PR_TRUE .)
    PR_calculaPoisson reduce using rule 94 (var_cte -> PR_TRUE .)
    PR_calculaBinomial reduce using rule 94 (var_cte -> PR_TRUE .)
    PR_calculaNormal reduce using rule 94 (var_cte -> PR_TRUE .)
    }               reduce using rule 94 (var_cte -> PR_TRUE .)
    ]               reduce using rule 94 (var_cte -> PR_TRUE .)


state 100

    (95) var_cte -> PR_FALSE .

    *               reduce using rule 95 (var_cte -> PR_FALSE .)
    /               reduce using rule 95 (var_cte -> PR_FALSE .)
    +               reduce using rule 95 (var_cte -> PR_FALSE .)
    -               reduce using rule 95 (var_cte -> PR_FALSE .)
    )               reduce using rule 95 (var_cte -> PR_FALSE .)
    <               reduce using rule 95 (var_cte -> PR_FALSE .)
    >               reduce using rule 95 (var_cte -> PR_FALSE .)
    LE              reduce using rule 95 (var_cte -> PR_FALSE .)
    GE              reduce using rule 95 (var_cte -> PR_FALSE .)
    EQ              reduce using rule 95 (var_cte -> PR_FALSE .)
    NEQ             reduce using rule 95 (var_cte -> PR_FALSE .)
    PR_AND          reduce using rule 95 (var_cte -> PR_FALSE .)
    PR_OR           reduce using rule 95 (var_cte -> PR_FALSE .)
    PR_NOT          reduce using rule 95 (var_cte -> PR_FALSE .)
    PR_REPEAT       reduce using rule 95 (var_cte -> PR_FALSE .)
    PR_RETURN       reduce using rule 95 (var_cte -> PR_FALSE .)
    PR_READ         reduce using rule 95 (var_cte -> PR_FALSE .)
    PR_PRINT        reduce using rule 95 (var_cte -> PR_FALSE .)
    ID              reduce using rule 95 (var_cte -> PR_FALSE .)
    PR_IF           reduce using rule 95 (var_cte -> PR_FALSE .)
    PR_calculaRegresion reduce using rule 95 (var_cte -> PR_FALSE .)
    PR_prediceResultado reduce using rule 95 (var_cte -> PR_FALSE .)
    PR_calculaModa  reduce using rule 95 (var_cte -> PR_FALSE .)
    PR_calculaMediana reduce using rule 95 (var_cte -> PR_FALSE .)
    PR_calculaMedia reduce using rule 95 (var_cte -> PR_FALSE .)
    PR_calculaPoisson reduce using rule 95 (var_cte -> PR_FALSE .)
    PR_calculaBinomial reduce using rule 95 (var_cte -> PR_FALSE .)
    PR_calculaNormal reduce using rule 95 (var_cte -> PR_FALSE .)
    }               reduce using rule 95 (var_cte -> PR_FALSE .)
    ]               reduce using rule 95 (var_cte -> PR_FALSE .)


state 101

    (96) other -> ID . other_index
    (63) call_1 -> ID . (
    (39) other_index -> . [ exp ]
    (40) other_index -> . [ exp ] [ exp ]
    (41) other_index -> . empty
    (100) empty -> .

    (               shift and go to state 83
    [               shift and go to state 84
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    +               reduce using rule 100 (empty -> .)
    -               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    LE              reduce using rule 100 (empty -> .)
    GE              reduce using rule 100 (empty -> .)
    EQ              reduce using rule 100 (empty -> .)
    NEQ             reduce using rule 100 (empty -> .)
    PR_AND          reduce using rule 100 (empty -> .)
    PR_OR           reduce using rule 100 (empty -> .)
    PR_NOT          reduce using rule 100 (empty -> .)
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    PR_calculaRegresion reduce using rule 100 (empty -> .)
    PR_prediceResultado reduce using rule 100 (empty -> .)
    PR_calculaModa  reduce using rule 100 (empty -> .)
    PR_calculaMediana reduce using rule 100 (empty -> .)
    PR_calculaMedia reduce using rule 100 (empty -> .)
    PR_calculaPoisson reduce using rule 100 (empty -> .)
    PR_calculaBinomial reduce using rule 100 (empty -> .)
    PR_calculaNormal reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)
    ]               reduce using rule 100 (empty -> .)

    other_index                    shift and go to state 133
    empty                          shift and go to state 85

state 102

    (97) other -> call .

    *               reduce using rule 97 (other -> call .)
    /               reduce using rule 97 (other -> call .)
    +               reduce using rule 97 (other -> call .)
    -               reduce using rule 97 (other -> call .)
    )               reduce using rule 97 (other -> call .)
    <               reduce using rule 97 (other -> call .)
    >               reduce using rule 97 (other -> call .)
    LE              reduce using rule 97 (other -> call .)
    GE              reduce using rule 97 (other -> call .)
    EQ              reduce using rule 97 (other -> call .)
    NEQ             reduce using rule 97 (other -> call .)
    PR_AND          reduce using rule 97 (other -> call .)
    PR_OR           reduce using rule 97 (other -> call .)
    PR_NOT          reduce using rule 97 (other -> call .)
    PR_REPEAT       reduce using rule 97 (other -> call .)
    PR_RETURN       reduce using rule 97 (other -> call .)
    PR_READ         reduce using rule 97 (other -> call .)
    PR_PRINT        reduce using rule 97 (other -> call .)
    ID              reduce using rule 97 (other -> call .)
    PR_IF           reduce using rule 97 (other -> call .)
    PR_calculaRegresion reduce using rule 97 (other -> call .)
    PR_prediceResultado reduce using rule 97 (other -> call .)
    PR_calculaModa  reduce using rule 97 (other -> call .)
    PR_calculaMediana reduce using rule 97 (other -> call .)
    PR_calculaMedia reduce using rule 97 (other -> call .)
    PR_calculaPoisson reduce using rule 97 (other -> call .)
    PR_calculaBinomial reduce using rule 97 (other -> call .)
    PR_calculaNormal reduce using rule 97 (other -> call .)
    }               reduce using rule 97 (other -> call .)
    ]               reduce using rule 97 (other -> call .)


state 103

    (98) other -> empty .

    *               reduce using rule 98 (other -> empty .)
    /               reduce using rule 98 (other -> empty .)
    +               reduce using rule 98 (other -> empty .)
    -               reduce using rule 98 (other -> empty .)
    )               reduce using rule 98 (other -> empty .)
    <               reduce using rule 98 (other -> empty .)
    >               reduce using rule 98 (other -> empty .)
    LE              reduce using rule 98 (other -> empty .)
    GE              reduce using rule 98 (other -> empty .)
    EQ              reduce using rule 98 (other -> empty .)
    NEQ             reduce using rule 98 (other -> empty .)
    PR_AND          reduce using rule 98 (other -> empty .)
    PR_OR           reduce using rule 98 (other -> empty .)
    PR_NOT          reduce using rule 98 (other -> empty .)
    PR_REPEAT       reduce using rule 98 (other -> empty .)
    PR_RETURN       reduce using rule 98 (other -> empty .)
    PR_READ         reduce using rule 98 (other -> empty .)
    PR_PRINT        reduce using rule 98 (other -> empty .)
    ID              reduce using rule 98 (other -> empty .)
    PR_IF           reduce using rule 98 (other -> empty .)
    PR_calculaRegresion reduce using rule 98 (other -> empty .)
    PR_prediceResultado reduce using rule 98 (other -> empty .)
    PR_calculaModa  reduce using rule 98 (other -> empty .)
    PR_calculaMediana reduce using rule 98 (other -> empty .)
    PR_calculaMedia reduce using rule 98 (other -> empty .)
    PR_calculaPoisson reduce using rule 98 (other -> empty .)
    PR_calculaBinomial reduce using rule 98 (other -> empty .)
    PR_calculaNormal reduce using rule 98 (other -> empty .)
    }               reduce using rule 98 (other -> empty .)
    ]               reduce using rule 98 (other -> empty .)


state 104

    (44) cond1 -> PR_IF ( . mega_exp ) {
    (65) mega_exp -> . opt_not super_exp
    (66) mega_exp -> . opt_not super_exp log_op mega_exp
    (70) opt_not -> . PR_NOT
    (71) opt_not -> . empty
    (100) empty -> .

  ! shift/reduce conflict for PR_NOT resolved as shift
    PR_NOT          shift and go to state 79
    (               reduce using rule 100 (empty -> .)
    +               reduce using rule 100 (empty -> .)
    -               reduce using rule 100 (empty -> .)
    CTEI            reduce using rule 100 (empty -> .)
    CTEF            reduce using rule 100 (empty -> .)
    CTES            reduce using rule 100 (empty -> .)
    PR_TRUE         reduce using rule 100 (empty -> .)
    PR_FALSE        reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    PR_calculaRegresion reduce using rule 100 (empty -> .)
    PR_prediceResultado reduce using rule 100 (empty -> .)
    PR_calculaModa  reduce using rule 100 (empty -> .)
    PR_calculaMediana reduce using rule 100 (empty -> .)
    PR_calculaMedia reduce using rule 100 (empty -> .)
    PR_calculaPoisson reduce using rule 100 (empty -> .)
    PR_calculaBinomial reduce using rule 100 (empty -> .)
    PR_calculaNormal reduce using rule 100 (empty -> .)
    PR_AND          reduce using rule 100 (empty -> .)
    PR_OR           reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    LE              reduce using rule 100 (empty -> .)
    GE              reduce using rule 100 (empty -> .)
    EQ              reduce using rule 100 (empty -> .)
    NEQ             reduce using rule 100 (empty -> .)
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)

  ! PR_NOT          [ reduce using rule 100 (empty -> .) ]

    mega_exp                       shift and go to state 134
    opt_not                        shift and go to state 78
    empty                          shift and go to state 80

state 105

    (53) func_pred -> PR_calculaRegresion ( . exp )
    (80) exp -> . termino
    (81) exp -> . termino + exp
    (82) exp -> . termino - exp
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]

    exp                            shift and go to state 135
    termino                        shift and go to state 89
    factor                         shift and go to state 92
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 106

    (54) func_pred -> PR_prediceResultado ( . exp )
    (80) exp -> . termino
    (81) exp -> . termino + exp
    (82) exp -> . termino - exp
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]

    exp                            shift and go to state 136
    termino                        shift and go to state 89
    factor                         shift and go to state 92
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 107

    (55) func_pred -> PR_calculaModa ( . exp )
    (80) exp -> . termino
    (81) exp -> . termino + exp
    (82) exp -> . termino - exp
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]

    exp                            shift and go to state 137
    termino                        shift and go to state 89
    factor                         shift and go to state 92
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 108

    (56) func_pred -> PR_calculaMediana ( . exp )
    (80) exp -> . termino
    (81) exp -> . termino + exp
    (82) exp -> . termino - exp
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]

    exp                            shift and go to state 138
    termino                        shift and go to state 89
    factor                         shift and go to state 92
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 109

    (57) func_pred -> PR_calculaMedia ( . exp )
    (80) exp -> . termino
    (81) exp -> . termino + exp
    (82) exp -> . termino - exp
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]

    exp                            shift and go to state 139
    termino                        shift and go to state 89
    factor                         shift and go to state 92
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 110

    (58) func_pred -> PR_calculaPoisson ( . exp )
    (80) exp -> . termino
    (81) exp -> . termino + exp
    (82) exp -> . termino - exp
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]

    exp                            shift and go to state 140
    termino                        shift and go to state 89
    factor                         shift and go to state 92
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 111

    (59) func_pred -> PR_calculaBinomial ( . exp )
    (80) exp -> . termino
    (81) exp -> . termino + exp
    (82) exp -> . termino - exp
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]

    exp                            shift and go to state 141
    termino                        shift and go to state 89
    factor                         shift and go to state 92
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 112

    (60) func_pred -> PR_calculaNormal ( . exp )
    (80) exp -> . termino
    (81) exp -> . termino + exp
    (82) exp -> . termino - exp
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]

    exp                            shift and go to state 142
    termino                        shift and go to state 89
    factor                         shift and go to state 92
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 113

    (14) func1_2 -> more_ids ) { .

    PR_VAR          reduce using rule 14 (func1_2 -> more_ids ) { .)
    PR_REPEAT       reduce using rule 14 (func1_2 -> more_ids ) { .)
    PR_RETURN       reduce using rule 14 (func1_2 -> more_ids ) { .)
    PR_READ         reduce using rule 14 (func1_2 -> more_ids ) { .)
    PR_PRINT        reduce using rule 14 (func1_2 -> more_ids ) { .)
    ID              reduce using rule 14 (func1_2 -> more_ids ) { .)
    PR_IF           reduce using rule 14 (func1_2 -> more_ids ) { .)
    PR_calculaRegresion reduce using rule 14 (func1_2 -> more_ids ) { .)
    PR_prediceResultado reduce using rule 14 (func1_2 -> more_ids ) { .)
    PR_calculaModa  reduce using rule 14 (func1_2 -> more_ids ) { .)
    PR_calculaMediana reduce using rule 14 (func1_2 -> more_ids ) { .)
    PR_calculaMedia reduce using rule 14 (func1_2 -> more_ids ) { .)
    PR_calculaPoisson reduce using rule 14 (func1_2 -> more_ids ) { .)
    PR_calculaBinomial reduce using rule 14 (func1_2 -> more_ids ) { .)
    PR_calculaNormal reduce using rule 14 (func1_2 -> more_ids ) { .)
    }               reduce using rule 14 (func1_2 -> more_ids ) { .)


state 114

    (13) func1_1 -> PR_FUNCTION func_type ID ( .

    PR_INT          reduce using rule 13 (func1_1 -> PR_FUNCTION func_type ID ( .)
    PR_FLOAT        reduce using rule 13 (func1_1 -> PR_FUNCTION func_type ID ( .)
    PR_BOOL         reduce using rule 13 (func1_1 -> PR_FUNCTION func_type ID ( .)
    PR_STRING       reduce using rule 13 (func1_1 -> PR_FUNCTION func_type ID ( .)
    )               reduce using rule 13 (func1_1 -> PR_FUNCTION func_type ID ( .)


state 115

    (4) index -> [ CTEI . ]
    (5) index -> [ CTEI . ] [ CTEI ]

    ]               shift and go to state 143


state 116

    (99) main -> PR_MAIN { more_vars more_bloques . }

    }               shift and go to state 144


state 117

    (37) assignation -> assignTo = mega_exp .

    PR_REPEAT       reduce using rule 37 (assignation -> assignTo = mega_exp .)
    PR_RETURN       reduce using rule 37 (assignation -> assignTo = mega_exp .)
    PR_READ         reduce using rule 37 (assignation -> assignTo = mega_exp .)
    PR_PRINT        reduce using rule 37 (assignation -> assignTo = mega_exp .)
    ID              reduce using rule 37 (assignation -> assignTo = mega_exp .)
    PR_IF           reduce using rule 37 (assignation -> assignTo = mega_exp .)
    PR_calculaRegresion reduce using rule 37 (assignation -> assignTo = mega_exp .)
    PR_prediceResultado reduce using rule 37 (assignation -> assignTo = mega_exp .)
    PR_calculaModa  reduce using rule 37 (assignation -> assignTo = mega_exp .)
    PR_calculaMediana reduce using rule 37 (assignation -> assignTo = mega_exp .)
    PR_calculaMedia reduce using rule 37 (assignation -> assignTo = mega_exp .)
    PR_calculaPoisson reduce using rule 37 (assignation -> assignTo = mega_exp .)
    PR_calculaBinomial reduce using rule 37 (assignation -> assignTo = mega_exp .)
    PR_calculaNormal reduce using rule 37 (assignation -> assignTo = mega_exp .)
    }               reduce using rule 37 (assignation -> assignTo = mega_exp .)


state 118

    (42) loop -> PR_REPEAT ( mega_exp . ) { more_bloques }

    )               shift and go to state 145


state 119

    (45) cond2 -> more_bloques } . maybe_else
    (46) maybe_else -> . check_else do_else
    (47) maybe_else -> . empty
    (48) check_else -> . PR_ELSE {
    (100) empty -> .

    PR_ELSE         shift and go to state 149
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    PR_calculaRegresion reduce using rule 100 (empty -> .)
    PR_prediceResultado reduce using rule 100 (empty -> .)
    PR_calculaModa  reduce using rule 100 (empty -> .)
    PR_calculaMediana reduce using rule 100 (empty -> .)
    PR_calculaMedia reduce using rule 100 (empty -> .)
    PR_calculaPoisson reduce using rule 100 (empty -> .)
    PR_calculaBinomial reduce using rule 100 (empty -> .)
    PR_calculaNormal reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)

    maybe_else                     shift and go to state 146
    check_else                     shift and go to state 147
    empty                          shift and go to state 148

state 120

    (65) mega_exp -> opt_not super_exp .
    (66) mega_exp -> opt_not super_exp . log_op mega_exp
    (67) log_op -> . PR_AND
    (68) log_op -> . PR_OR
    (69) log_op -> . PR_NOT

    PR_REPEAT       reduce using rule 65 (mega_exp -> opt_not super_exp .)
    PR_RETURN       reduce using rule 65 (mega_exp -> opt_not super_exp .)
    PR_READ         reduce using rule 65 (mega_exp -> opt_not super_exp .)
    PR_PRINT        reduce using rule 65 (mega_exp -> opt_not super_exp .)
    ID              reduce using rule 65 (mega_exp -> opt_not super_exp .)
    PR_IF           reduce using rule 65 (mega_exp -> opt_not super_exp .)
    PR_calculaRegresion reduce using rule 65 (mega_exp -> opt_not super_exp .)
    PR_prediceResultado reduce using rule 65 (mega_exp -> opt_not super_exp .)
    PR_calculaModa  reduce using rule 65 (mega_exp -> opt_not super_exp .)
    PR_calculaMediana reduce using rule 65 (mega_exp -> opt_not super_exp .)
    PR_calculaMedia reduce using rule 65 (mega_exp -> opt_not super_exp .)
    PR_calculaPoisson reduce using rule 65 (mega_exp -> opt_not super_exp .)
    PR_calculaBinomial reduce using rule 65 (mega_exp -> opt_not super_exp .)
    PR_calculaNormal reduce using rule 65 (mega_exp -> opt_not super_exp .)
    }               reduce using rule 65 (mega_exp -> opt_not super_exp .)
    )               reduce using rule 65 (mega_exp -> opt_not super_exp .)
    PR_AND          shift and go to state 151
    PR_OR           shift and go to state 152
    PR_NOT          shift and go to state 153

    log_op                         shift and go to state 150

state 121

    (72) super_exp -> exp .
    (73) super_exp -> exp . rel_op super_exp
    (74) rel_op -> . <
    (75) rel_op -> . >
    (76) rel_op -> . LE
    (77) rel_op -> . GE
    (78) rel_op -> . EQ
    (79) rel_op -> . NEQ

    PR_AND          reduce using rule 72 (super_exp -> exp .)
    PR_OR           reduce using rule 72 (super_exp -> exp .)
    PR_NOT          reduce using rule 72 (super_exp -> exp .)
    PR_REPEAT       reduce using rule 72 (super_exp -> exp .)
    PR_RETURN       reduce using rule 72 (super_exp -> exp .)
    PR_READ         reduce using rule 72 (super_exp -> exp .)
    PR_PRINT        reduce using rule 72 (super_exp -> exp .)
    ID              reduce using rule 72 (super_exp -> exp .)
    PR_IF           reduce using rule 72 (super_exp -> exp .)
    PR_calculaRegresion reduce using rule 72 (super_exp -> exp .)
    PR_prediceResultado reduce using rule 72 (super_exp -> exp .)
    PR_calculaModa  reduce using rule 72 (super_exp -> exp .)
    PR_calculaMediana reduce using rule 72 (super_exp -> exp .)
    PR_calculaMedia reduce using rule 72 (super_exp -> exp .)
    PR_calculaPoisson reduce using rule 72 (super_exp -> exp .)
    PR_calculaBinomial reduce using rule 72 (super_exp -> exp .)
    PR_calculaNormal reduce using rule 72 (super_exp -> exp .)
    }               reduce using rule 72 (super_exp -> exp .)
    )               reduce using rule 72 (super_exp -> exp .)
    <               shift and go to state 155
    >               shift and go to state 156
    LE              shift and go to state 157
    GE              shift and go to state 158
    EQ              shift and go to state 159
    NEQ             shift and go to state 160

    rel_op                         shift and go to state 154

state 122

    (51) lecture -> PR_READ ARR ID . index
    (4) index -> . [ CTEI ]
    (5) index -> . [ CTEI ] [ CTEI ]
    (6) index -> . empty
    (100) empty -> .

    [               shift and go to state 68
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    PR_calculaRegresion reduce using rule 100 (empty -> .)
    PR_prediceResultado reduce using rule 100 (empty -> .)
    PR_calculaModa  reduce using rule 100 (empty -> .)
    PR_calculaMediana reduce using rule 100 (empty -> .)
    PR_calculaMedia reduce using rule 100 (empty -> .)
    PR_calculaPoisson reduce using rule 100 (empty -> .)
    PR_calculaBinomial reduce using rule 100 (empty -> .)
    PR_calculaNormal reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)

    index                          shift and go to state 161
    empty                          shift and go to state 69

state 123

    (39) other_index -> [ exp . ]
    (40) other_index -> [ exp . ] [ exp ]

    ]               shift and go to state 162


state 124

    (52) writing -> PR_PRINT ( mega_exp . )

    )               shift and go to state 163


state 125

    (64) call_2 -> exp ) .

    PR_REPEAT       reduce using rule 64 (call_2 -> exp ) .)
    PR_RETURN       reduce using rule 64 (call_2 -> exp ) .)
    PR_READ         reduce using rule 64 (call_2 -> exp ) .)
    PR_PRINT        reduce using rule 64 (call_2 -> exp ) .)
    ID              reduce using rule 64 (call_2 -> exp ) .)
    PR_IF           reduce using rule 64 (call_2 -> exp ) .)
    PR_calculaRegresion reduce using rule 64 (call_2 -> exp ) .)
    PR_prediceResultado reduce using rule 64 (call_2 -> exp ) .)
    PR_calculaModa  reduce using rule 64 (call_2 -> exp ) .)
    PR_calculaMediana reduce using rule 64 (call_2 -> exp ) .)
    PR_calculaMedia reduce using rule 64 (call_2 -> exp ) .)
    PR_calculaPoisson reduce using rule 64 (call_2 -> exp ) .)
    PR_calculaBinomial reduce using rule 64 (call_2 -> exp ) .)
    PR_calculaNormal reduce using rule 64 (call_2 -> exp ) .)
    }               reduce using rule 64 (call_2 -> exp ) .)
    *               reduce using rule 64 (call_2 -> exp ) .)
    /               reduce using rule 64 (call_2 -> exp ) .)
    +               reduce using rule 64 (call_2 -> exp ) .)
    -               reduce using rule 64 (call_2 -> exp ) .)
    )               reduce using rule 64 (call_2 -> exp ) .)
    <               reduce using rule 64 (call_2 -> exp ) .)
    >               reduce using rule 64 (call_2 -> exp ) .)
    LE              reduce using rule 64 (call_2 -> exp ) .)
    GE              reduce using rule 64 (call_2 -> exp ) .)
    EQ              reduce using rule 64 (call_2 -> exp ) .)
    NEQ             reduce using rule 64 (call_2 -> exp ) .)
    PR_AND          reduce using rule 64 (call_2 -> exp ) .)
    PR_OR           reduce using rule 64 (call_2 -> exp ) .)
    PR_NOT          reduce using rule 64 (call_2 -> exp ) .)
    ]               reduce using rule 64 (call_2 -> exp ) .)


state 126

    (81) exp -> termino + . exp
    (80) exp -> . termino
    (81) exp -> . termino + exp
    (82) exp -> . termino - exp
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_calculaRegresion resolved as shift
  ! shift/reduce conflict for PR_prediceResultado resolved as shift
  ! shift/reduce conflict for PR_calculaModa resolved as shift
  ! shift/reduce conflict for PR_calculaMediana resolved as shift
  ! shift/reduce conflict for PR_calculaMedia resolved as shift
  ! shift/reduce conflict for PR_calculaPoisson resolved as shift
  ! shift/reduce conflict for PR_calculaBinomial resolved as shift
  ! shift/reduce conflict for PR_calculaNormal resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    LE              reduce using rule 100 (empty -> .)
    GE              reduce using rule 100 (empty -> .)
    EQ              reduce using rule 100 (empty -> .)
    NEQ             reduce using rule 100 (empty -> .)
    PR_AND          reduce using rule 100 (empty -> .)
    PR_OR           reduce using rule 100 (empty -> .)
    PR_NOT          reduce using rule 100 (empty -> .)
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)
    ]               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaRegresion [ reduce using rule 100 (empty -> .) ]
  ! PR_prediceResultado [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaModa  [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMediana [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMedia [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaPoisson [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaBinomial [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaNormal [ reduce using rule 100 (empty -> .) ]

    termino                        shift and go to state 89
    exp                            shift and go to state 164
    factor                         shift and go to state 92
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 127

    (82) exp -> termino - . exp
    (80) exp -> . termino
    (81) exp -> . termino + exp
    (82) exp -> . termino - exp
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_calculaRegresion resolved as shift
  ! shift/reduce conflict for PR_prediceResultado resolved as shift
  ! shift/reduce conflict for PR_calculaModa resolved as shift
  ! shift/reduce conflict for PR_calculaMediana resolved as shift
  ! shift/reduce conflict for PR_calculaMedia resolved as shift
  ! shift/reduce conflict for PR_calculaPoisson resolved as shift
  ! shift/reduce conflict for PR_calculaBinomial resolved as shift
  ! shift/reduce conflict for PR_calculaNormal resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    LE              reduce using rule 100 (empty -> .)
    GE              reduce using rule 100 (empty -> .)
    EQ              reduce using rule 100 (empty -> .)
    NEQ             reduce using rule 100 (empty -> .)
    PR_AND          reduce using rule 100 (empty -> .)
    PR_OR           reduce using rule 100 (empty -> .)
    PR_NOT          reduce using rule 100 (empty -> .)
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)
    ]               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaRegresion [ reduce using rule 100 (empty -> .) ]
  ! PR_prediceResultado [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaModa  [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMediana [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMedia [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaPoisson [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaBinomial [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaNormal [ reduce using rule 100 (empty -> .) ]

    termino                        shift and go to state 89
    exp                            shift and go to state 165
    factor                         shift and go to state 92
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 128

    (87) factor -> + var_cte .

    *               reduce using rule 87 (factor -> + var_cte .)
    /               reduce using rule 87 (factor -> + var_cte .)
    +               reduce using rule 87 (factor -> + var_cte .)
    -               reduce using rule 87 (factor -> + var_cte .)
    )               reduce using rule 87 (factor -> + var_cte .)
    <               reduce using rule 87 (factor -> + var_cte .)
    >               reduce using rule 87 (factor -> + var_cte .)
    LE              reduce using rule 87 (factor -> + var_cte .)
    GE              reduce using rule 87 (factor -> + var_cte .)
    EQ              reduce using rule 87 (factor -> + var_cte .)
    NEQ             reduce using rule 87 (factor -> + var_cte .)
    PR_AND          reduce using rule 87 (factor -> + var_cte .)
    PR_OR           reduce using rule 87 (factor -> + var_cte .)
    PR_NOT          reduce using rule 87 (factor -> + var_cte .)
    PR_REPEAT       reduce using rule 87 (factor -> + var_cte .)
    PR_RETURN       reduce using rule 87 (factor -> + var_cte .)
    PR_READ         reduce using rule 87 (factor -> + var_cte .)
    PR_PRINT        reduce using rule 87 (factor -> + var_cte .)
    ID              reduce using rule 87 (factor -> + var_cte .)
    PR_IF           reduce using rule 87 (factor -> + var_cte .)
    PR_calculaRegresion reduce using rule 87 (factor -> + var_cte .)
    PR_prediceResultado reduce using rule 87 (factor -> + var_cte .)
    PR_calculaModa  reduce using rule 87 (factor -> + var_cte .)
    PR_calculaMediana reduce using rule 87 (factor -> + var_cte .)
    PR_calculaMedia reduce using rule 87 (factor -> + var_cte .)
    PR_calculaPoisson reduce using rule 87 (factor -> + var_cte .)
    PR_calculaBinomial reduce using rule 87 (factor -> + var_cte .)
    PR_calculaNormal reduce using rule 87 (factor -> + var_cte .)
    }               reduce using rule 87 (factor -> + var_cte .)
    ]               reduce using rule 87 (factor -> + var_cte .)


state 129

    (88) factor -> - var_cte .

    *               reduce using rule 88 (factor -> - var_cte .)
    /               reduce using rule 88 (factor -> - var_cte .)
    +               reduce using rule 88 (factor -> - var_cte .)
    -               reduce using rule 88 (factor -> - var_cte .)
    )               reduce using rule 88 (factor -> - var_cte .)
    <               reduce using rule 88 (factor -> - var_cte .)
    >               reduce using rule 88 (factor -> - var_cte .)
    LE              reduce using rule 88 (factor -> - var_cte .)
    GE              reduce using rule 88 (factor -> - var_cte .)
    EQ              reduce using rule 88 (factor -> - var_cte .)
    NEQ             reduce using rule 88 (factor -> - var_cte .)
    PR_AND          reduce using rule 88 (factor -> - var_cte .)
    PR_OR           reduce using rule 88 (factor -> - var_cte .)
    PR_NOT          reduce using rule 88 (factor -> - var_cte .)
    PR_REPEAT       reduce using rule 88 (factor -> - var_cte .)
    PR_RETURN       reduce using rule 88 (factor -> - var_cte .)
    PR_READ         reduce using rule 88 (factor -> - var_cte .)
    PR_PRINT        reduce using rule 88 (factor -> - var_cte .)
    ID              reduce using rule 88 (factor -> - var_cte .)
    PR_IF           reduce using rule 88 (factor -> - var_cte .)
    PR_calculaRegresion reduce using rule 88 (factor -> - var_cte .)
    PR_prediceResultado reduce using rule 88 (factor -> - var_cte .)
    PR_calculaModa  reduce using rule 88 (factor -> - var_cte .)
    PR_calculaMediana reduce using rule 88 (factor -> - var_cte .)
    PR_calculaMedia reduce using rule 88 (factor -> - var_cte .)
    PR_calculaPoisson reduce using rule 88 (factor -> - var_cte .)
    PR_calculaBinomial reduce using rule 88 (factor -> - var_cte .)
    PR_calculaNormal reduce using rule 88 (factor -> - var_cte .)
    }               reduce using rule 88 (factor -> - var_cte .)
    ]               reduce using rule 88 (factor -> - var_cte .)


state 130

    (84) termino -> factor * . termino
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_calculaRegresion resolved as shift
  ! shift/reduce conflict for PR_prediceResultado resolved as shift
  ! shift/reduce conflict for PR_calculaModa resolved as shift
  ! shift/reduce conflict for PR_calculaMediana resolved as shift
  ! shift/reduce conflict for PR_calculaMedia resolved as shift
  ! shift/reduce conflict for PR_calculaPoisson resolved as shift
  ! shift/reduce conflict for PR_calculaBinomial resolved as shift
  ! shift/reduce conflict for PR_calculaNormal resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    LE              reduce using rule 100 (empty -> .)
    GE              reduce using rule 100 (empty -> .)
    EQ              reduce using rule 100 (empty -> .)
    NEQ             reduce using rule 100 (empty -> .)
    PR_AND          reduce using rule 100 (empty -> .)
    PR_OR           reduce using rule 100 (empty -> .)
    PR_NOT          reduce using rule 100 (empty -> .)
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)
    ]               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaRegresion [ reduce using rule 100 (empty -> .) ]
  ! PR_prediceResultado [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaModa  [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMediana [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMedia [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaPoisson [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaBinomial [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaNormal [ reduce using rule 100 (empty -> .) ]

    factor                         shift and go to state 92
    termino                        shift and go to state 166
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 131

    (85) termino -> factor / . termino
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_calculaRegresion resolved as shift
  ! shift/reduce conflict for PR_prediceResultado resolved as shift
  ! shift/reduce conflict for PR_calculaModa resolved as shift
  ! shift/reduce conflict for PR_calculaMediana resolved as shift
  ! shift/reduce conflict for PR_calculaMedia resolved as shift
  ! shift/reduce conflict for PR_calculaPoisson resolved as shift
  ! shift/reduce conflict for PR_calculaBinomial resolved as shift
  ! shift/reduce conflict for PR_calculaNormal resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    LE              reduce using rule 100 (empty -> .)
    GE              reduce using rule 100 (empty -> .)
    EQ              reduce using rule 100 (empty -> .)
    NEQ             reduce using rule 100 (empty -> .)
    PR_AND          reduce using rule 100 (empty -> .)
    PR_OR           reduce using rule 100 (empty -> .)
    PR_NOT          reduce using rule 100 (empty -> .)
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)
    ]               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaRegresion [ reduce using rule 100 (empty -> .) ]
  ! PR_prediceResultado [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaModa  [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMediana [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMedia [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaPoisson [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaBinomial [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaNormal [ reduce using rule 100 (empty -> .) ]

    factor                         shift and go to state 92
    termino                        shift and go to state 167
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 132

    (86) factor -> ( super_exp . )

    )               shift and go to state 168


state 133

    (96) other -> ID other_index .

    *               reduce using rule 96 (other -> ID other_index .)
    /               reduce using rule 96 (other -> ID other_index .)
    +               reduce using rule 96 (other -> ID other_index .)
    -               reduce using rule 96 (other -> ID other_index .)
    )               reduce using rule 96 (other -> ID other_index .)
    <               reduce using rule 96 (other -> ID other_index .)
    >               reduce using rule 96 (other -> ID other_index .)
    LE              reduce using rule 96 (other -> ID other_index .)
    GE              reduce using rule 96 (other -> ID other_index .)
    EQ              reduce using rule 96 (other -> ID other_index .)
    NEQ             reduce using rule 96 (other -> ID other_index .)
    PR_AND          reduce using rule 96 (other -> ID other_index .)
    PR_OR           reduce using rule 96 (other -> ID other_index .)
    PR_NOT          reduce using rule 96 (other -> ID other_index .)
    PR_REPEAT       reduce using rule 96 (other -> ID other_index .)
    PR_RETURN       reduce using rule 96 (other -> ID other_index .)
    PR_READ         reduce using rule 96 (other -> ID other_index .)
    PR_PRINT        reduce using rule 96 (other -> ID other_index .)
    ID              reduce using rule 96 (other -> ID other_index .)
    PR_IF           reduce using rule 96 (other -> ID other_index .)
    PR_calculaRegresion reduce using rule 96 (other -> ID other_index .)
    PR_prediceResultado reduce using rule 96 (other -> ID other_index .)
    PR_calculaModa  reduce using rule 96 (other -> ID other_index .)
    PR_calculaMediana reduce using rule 96 (other -> ID other_index .)
    PR_calculaMedia reduce using rule 96 (other -> ID other_index .)
    PR_calculaPoisson reduce using rule 96 (other -> ID other_index .)
    PR_calculaBinomial reduce using rule 96 (other -> ID other_index .)
    PR_calculaNormal reduce using rule 96 (other -> ID other_index .)
    }               reduce using rule 96 (other -> ID other_index .)
    ]               reduce using rule 96 (other -> ID other_index .)


state 134

    (44) cond1 -> PR_IF ( mega_exp . ) {

    )               shift and go to state 169


state 135

    (53) func_pred -> PR_calculaRegresion ( exp . )

    )               shift and go to state 170


state 136

    (54) func_pred -> PR_prediceResultado ( exp . )

    )               shift and go to state 171


state 137

    (55) func_pred -> PR_calculaModa ( exp . )

    )               shift and go to state 172


state 138

    (56) func_pred -> PR_calculaMediana ( exp . )

    )               shift and go to state 173


state 139

    (57) func_pred -> PR_calculaMedia ( exp . )

    )               shift and go to state 174


state 140

    (58) func_pred -> PR_calculaPoisson ( exp . )

    )               shift and go to state 175


state 141

    (59) func_pred -> PR_calculaBinomial ( exp . )

    )               shift and go to state 176


state 142

    (60) func_pred -> PR_calculaNormal ( exp . )

    )               shift and go to state 177


state 143

    (4) index -> [ CTEI ] .
    (5) index -> [ CTEI ] . [ CTEI ]

    PR_VAR          reduce using rule 4 (index -> [ CTEI ] .)
    PR_FUNCTION     reduce using rule 4 (index -> [ CTEI ] .)
    PR_MAIN         reduce using rule 4 (index -> [ CTEI ] .)
    PR_REPEAT       reduce using rule 4 (index -> [ CTEI ] .)
    PR_RETURN       reduce using rule 4 (index -> [ CTEI ] .)
    PR_READ         reduce using rule 4 (index -> [ CTEI ] .)
    PR_PRINT        reduce using rule 4 (index -> [ CTEI ] .)
    ID              reduce using rule 4 (index -> [ CTEI ] .)
    PR_IF           reduce using rule 4 (index -> [ CTEI ] .)
    PR_calculaRegresion reduce using rule 4 (index -> [ CTEI ] .)
    PR_prediceResultado reduce using rule 4 (index -> [ CTEI ] .)
    PR_calculaModa  reduce using rule 4 (index -> [ CTEI ] .)
    PR_calculaMediana reduce using rule 4 (index -> [ CTEI ] .)
    PR_calculaMedia reduce using rule 4 (index -> [ CTEI ] .)
    PR_calculaPoisson reduce using rule 4 (index -> [ CTEI ] .)
    PR_calculaBinomial reduce using rule 4 (index -> [ CTEI ] .)
    PR_calculaNormal reduce using rule 4 (index -> [ CTEI ] .)
    }               reduce using rule 4 (index -> [ CTEI ] .)
    PR_INT          reduce using rule 4 (index -> [ CTEI ] .)
    PR_FLOAT        reduce using rule 4 (index -> [ CTEI ] .)
    PR_BOOL         reduce using rule 4 (index -> [ CTEI ] .)
    PR_STRING       reduce using rule 4 (index -> [ CTEI ] .)
    )               reduce using rule 4 (index -> [ CTEI ] .)
    [               shift and go to state 178


state 144

    (99) main -> PR_MAIN { more_vars more_bloques } .

    }               reduce using rule 99 (main -> PR_MAIN { more_vars more_bloques } .)


state 145

    (42) loop -> PR_REPEAT ( mega_exp ) . { more_bloques }

    {               shift and go to state 179


state 146

    (45) cond2 -> more_bloques } maybe_else .

    PR_REPEAT       reduce using rule 45 (cond2 -> more_bloques } maybe_else .)
    PR_RETURN       reduce using rule 45 (cond2 -> more_bloques } maybe_else .)
    PR_READ         reduce using rule 45 (cond2 -> more_bloques } maybe_else .)
    PR_PRINT        reduce using rule 45 (cond2 -> more_bloques } maybe_else .)
    ID              reduce using rule 45 (cond2 -> more_bloques } maybe_else .)
    PR_IF           reduce using rule 45 (cond2 -> more_bloques } maybe_else .)
    PR_calculaRegresion reduce using rule 45 (cond2 -> more_bloques } maybe_else .)
    PR_prediceResultado reduce using rule 45 (cond2 -> more_bloques } maybe_else .)
    PR_calculaModa  reduce using rule 45 (cond2 -> more_bloques } maybe_else .)
    PR_calculaMediana reduce using rule 45 (cond2 -> more_bloques } maybe_else .)
    PR_calculaMedia reduce using rule 45 (cond2 -> more_bloques } maybe_else .)
    PR_calculaPoisson reduce using rule 45 (cond2 -> more_bloques } maybe_else .)
    PR_calculaBinomial reduce using rule 45 (cond2 -> more_bloques } maybe_else .)
    PR_calculaNormal reduce using rule 45 (cond2 -> more_bloques } maybe_else .)
    }               reduce using rule 45 (cond2 -> more_bloques } maybe_else .)


state 147

    (46) maybe_else -> check_else . do_else
    (49) do_else -> . more_bloques }
    (34) more_bloques -> . bloque
    (35) more_bloques -> . bloque more_bloques
    (36) more_bloques -> . empty
    (21) bloque -> . assignation
    (22) bloque -> . loop
    (23) bloque -> . cond
    (24) bloque -> . return
    (25) bloque -> . lecture
    (26) bloque -> . writing
    (27) bloque -> . call
    (100) empty -> .
    (37) assignation -> . assignTo = mega_exp
    (42) loop -> . PR_REPEAT ( mega_exp ) { more_bloques }
    (43) cond -> . cond1 cond2
    (50) return -> . PR_RETURN mega_exp
    (51) lecture -> . PR_READ ARR ID index
    (52) writing -> . PR_PRINT ( mega_exp )
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (38) assignTo -> . ID other_index
    (44) cond1 -> . PR_IF ( mega_exp ) {
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

    }               reduce using rule 100 (empty -> .)
    PR_REPEAT       shift and go to state 47
    PR_RETURN       shift and go to state 49
    PR_READ         shift and go to state 50
    PR_PRINT        shift and go to state 52
    ID              shift and go to state 51
    PR_IF           shift and go to state 55
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

    do_else                        shift and go to state 180
    more_bloques                   shift and go to state 181
    bloque                         shift and go to state 37
    empty                          shift and go to state 38
    assignation                    shift and go to state 39
    loop                           shift and go to state 40
    cond                           shift and go to state 41
    return                         shift and go to state 42
    lecture                        shift and go to state 43
    writing                        shift and go to state 44
    call                           shift and go to state 45
    assignTo                       shift and go to state 46
    cond1                          shift and go to state 48
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 148

    (47) maybe_else -> empty .

    PR_REPEAT       reduce using rule 47 (maybe_else -> empty .)
    PR_RETURN       reduce using rule 47 (maybe_else -> empty .)
    PR_READ         reduce using rule 47 (maybe_else -> empty .)
    PR_PRINT        reduce using rule 47 (maybe_else -> empty .)
    ID              reduce using rule 47 (maybe_else -> empty .)
    PR_IF           reduce using rule 47 (maybe_else -> empty .)
    PR_calculaRegresion reduce using rule 47 (maybe_else -> empty .)
    PR_prediceResultado reduce using rule 47 (maybe_else -> empty .)
    PR_calculaModa  reduce using rule 47 (maybe_else -> empty .)
    PR_calculaMediana reduce using rule 47 (maybe_else -> empty .)
    PR_calculaMedia reduce using rule 47 (maybe_else -> empty .)
    PR_calculaPoisson reduce using rule 47 (maybe_else -> empty .)
    PR_calculaBinomial reduce using rule 47 (maybe_else -> empty .)
    PR_calculaNormal reduce using rule 47 (maybe_else -> empty .)
    }               reduce using rule 47 (maybe_else -> empty .)


state 149

    (48) check_else -> PR_ELSE . {

    {               shift and go to state 182


state 150

    (66) mega_exp -> opt_not super_exp log_op . mega_exp
    (65) mega_exp -> . opt_not super_exp
    (66) mega_exp -> . opt_not super_exp log_op mega_exp
    (70) opt_not -> . PR_NOT
    (71) opt_not -> . empty
    (100) empty -> .

  ! shift/reduce conflict for PR_NOT resolved as shift
    PR_NOT          shift and go to state 79
    (               reduce using rule 100 (empty -> .)
    +               reduce using rule 100 (empty -> .)
    -               reduce using rule 100 (empty -> .)
    CTEI            reduce using rule 100 (empty -> .)
    CTEF            reduce using rule 100 (empty -> .)
    CTES            reduce using rule 100 (empty -> .)
    PR_TRUE         reduce using rule 100 (empty -> .)
    PR_FALSE        reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    PR_calculaRegresion reduce using rule 100 (empty -> .)
    PR_prediceResultado reduce using rule 100 (empty -> .)
    PR_calculaModa  reduce using rule 100 (empty -> .)
    PR_calculaMediana reduce using rule 100 (empty -> .)
    PR_calculaMedia reduce using rule 100 (empty -> .)
    PR_calculaPoisson reduce using rule 100 (empty -> .)
    PR_calculaBinomial reduce using rule 100 (empty -> .)
    PR_calculaNormal reduce using rule 100 (empty -> .)
    PR_AND          reduce using rule 100 (empty -> .)
    PR_OR           reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    LE              reduce using rule 100 (empty -> .)
    GE              reduce using rule 100 (empty -> .)
    EQ              reduce using rule 100 (empty -> .)
    NEQ             reduce using rule 100 (empty -> .)
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)

  ! PR_NOT          [ reduce using rule 100 (empty -> .) ]

    opt_not                        shift and go to state 78
    mega_exp                       shift and go to state 183
    empty                          shift and go to state 80

state 151

    (67) log_op -> PR_AND .

    PR_NOT          reduce using rule 67 (log_op -> PR_AND .)
    (               reduce using rule 67 (log_op -> PR_AND .)
    +               reduce using rule 67 (log_op -> PR_AND .)
    -               reduce using rule 67 (log_op -> PR_AND .)
    CTEI            reduce using rule 67 (log_op -> PR_AND .)
    CTEF            reduce using rule 67 (log_op -> PR_AND .)
    CTES            reduce using rule 67 (log_op -> PR_AND .)
    PR_TRUE         reduce using rule 67 (log_op -> PR_AND .)
    PR_FALSE        reduce using rule 67 (log_op -> PR_AND .)
    ID              reduce using rule 67 (log_op -> PR_AND .)
    PR_calculaRegresion reduce using rule 67 (log_op -> PR_AND .)
    PR_prediceResultado reduce using rule 67 (log_op -> PR_AND .)
    PR_calculaModa  reduce using rule 67 (log_op -> PR_AND .)
    PR_calculaMediana reduce using rule 67 (log_op -> PR_AND .)
    PR_calculaMedia reduce using rule 67 (log_op -> PR_AND .)
    PR_calculaPoisson reduce using rule 67 (log_op -> PR_AND .)
    PR_calculaBinomial reduce using rule 67 (log_op -> PR_AND .)
    PR_calculaNormal reduce using rule 67 (log_op -> PR_AND .)
    PR_AND          reduce using rule 67 (log_op -> PR_AND .)
    PR_OR           reduce using rule 67 (log_op -> PR_AND .)
    <               reduce using rule 67 (log_op -> PR_AND .)
    >               reduce using rule 67 (log_op -> PR_AND .)
    LE              reduce using rule 67 (log_op -> PR_AND .)
    GE              reduce using rule 67 (log_op -> PR_AND .)
    EQ              reduce using rule 67 (log_op -> PR_AND .)
    NEQ             reduce using rule 67 (log_op -> PR_AND .)
    *               reduce using rule 67 (log_op -> PR_AND .)
    /               reduce using rule 67 (log_op -> PR_AND .)
    PR_REPEAT       reduce using rule 67 (log_op -> PR_AND .)
    PR_RETURN       reduce using rule 67 (log_op -> PR_AND .)
    PR_READ         reduce using rule 67 (log_op -> PR_AND .)
    PR_PRINT        reduce using rule 67 (log_op -> PR_AND .)
    PR_IF           reduce using rule 67 (log_op -> PR_AND .)
    }               reduce using rule 67 (log_op -> PR_AND .)
    )               reduce using rule 67 (log_op -> PR_AND .)


state 152

    (68) log_op -> PR_OR .

    PR_NOT          reduce using rule 68 (log_op -> PR_OR .)
    (               reduce using rule 68 (log_op -> PR_OR .)
    +               reduce using rule 68 (log_op -> PR_OR .)
    -               reduce using rule 68 (log_op -> PR_OR .)
    CTEI            reduce using rule 68 (log_op -> PR_OR .)
    CTEF            reduce using rule 68 (log_op -> PR_OR .)
    CTES            reduce using rule 68 (log_op -> PR_OR .)
    PR_TRUE         reduce using rule 68 (log_op -> PR_OR .)
    PR_FALSE        reduce using rule 68 (log_op -> PR_OR .)
    ID              reduce using rule 68 (log_op -> PR_OR .)
    PR_calculaRegresion reduce using rule 68 (log_op -> PR_OR .)
    PR_prediceResultado reduce using rule 68 (log_op -> PR_OR .)
    PR_calculaModa  reduce using rule 68 (log_op -> PR_OR .)
    PR_calculaMediana reduce using rule 68 (log_op -> PR_OR .)
    PR_calculaMedia reduce using rule 68 (log_op -> PR_OR .)
    PR_calculaPoisson reduce using rule 68 (log_op -> PR_OR .)
    PR_calculaBinomial reduce using rule 68 (log_op -> PR_OR .)
    PR_calculaNormal reduce using rule 68 (log_op -> PR_OR .)
    PR_AND          reduce using rule 68 (log_op -> PR_OR .)
    PR_OR           reduce using rule 68 (log_op -> PR_OR .)
    <               reduce using rule 68 (log_op -> PR_OR .)
    >               reduce using rule 68 (log_op -> PR_OR .)
    LE              reduce using rule 68 (log_op -> PR_OR .)
    GE              reduce using rule 68 (log_op -> PR_OR .)
    EQ              reduce using rule 68 (log_op -> PR_OR .)
    NEQ             reduce using rule 68 (log_op -> PR_OR .)
    *               reduce using rule 68 (log_op -> PR_OR .)
    /               reduce using rule 68 (log_op -> PR_OR .)
    PR_REPEAT       reduce using rule 68 (log_op -> PR_OR .)
    PR_RETURN       reduce using rule 68 (log_op -> PR_OR .)
    PR_READ         reduce using rule 68 (log_op -> PR_OR .)
    PR_PRINT        reduce using rule 68 (log_op -> PR_OR .)
    PR_IF           reduce using rule 68 (log_op -> PR_OR .)
    }               reduce using rule 68 (log_op -> PR_OR .)
    )               reduce using rule 68 (log_op -> PR_OR .)


state 153

    (69) log_op -> PR_NOT .

    PR_NOT          reduce using rule 69 (log_op -> PR_NOT .)
    (               reduce using rule 69 (log_op -> PR_NOT .)
    +               reduce using rule 69 (log_op -> PR_NOT .)
    -               reduce using rule 69 (log_op -> PR_NOT .)
    CTEI            reduce using rule 69 (log_op -> PR_NOT .)
    CTEF            reduce using rule 69 (log_op -> PR_NOT .)
    CTES            reduce using rule 69 (log_op -> PR_NOT .)
    PR_TRUE         reduce using rule 69 (log_op -> PR_NOT .)
    PR_FALSE        reduce using rule 69 (log_op -> PR_NOT .)
    ID              reduce using rule 69 (log_op -> PR_NOT .)
    PR_calculaRegresion reduce using rule 69 (log_op -> PR_NOT .)
    PR_prediceResultado reduce using rule 69 (log_op -> PR_NOT .)
    PR_calculaModa  reduce using rule 69 (log_op -> PR_NOT .)
    PR_calculaMediana reduce using rule 69 (log_op -> PR_NOT .)
    PR_calculaMedia reduce using rule 69 (log_op -> PR_NOT .)
    PR_calculaPoisson reduce using rule 69 (log_op -> PR_NOT .)
    PR_calculaBinomial reduce using rule 69 (log_op -> PR_NOT .)
    PR_calculaNormal reduce using rule 69 (log_op -> PR_NOT .)
    PR_AND          reduce using rule 69 (log_op -> PR_NOT .)
    PR_OR           reduce using rule 69 (log_op -> PR_NOT .)
    <               reduce using rule 69 (log_op -> PR_NOT .)
    >               reduce using rule 69 (log_op -> PR_NOT .)
    LE              reduce using rule 69 (log_op -> PR_NOT .)
    GE              reduce using rule 69 (log_op -> PR_NOT .)
    EQ              reduce using rule 69 (log_op -> PR_NOT .)
    NEQ             reduce using rule 69 (log_op -> PR_NOT .)
    *               reduce using rule 69 (log_op -> PR_NOT .)
    /               reduce using rule 69 (log_op -> PR_NOT .)
    PR_REPEAT       reduce using rule 69 (log_op -> PR_NOT .)
    PR_RETURN       reduce using rule 69 (log_op -> PR_NOT .)
    PR_READ         reduce using rule 69 (log_op -> PR_NOT .)
    PR_PRINT        reduce using rule 69 (log_op -> PR_NOT .)
    PR_IF           reduce using rule 69 (log_op -> PR_NOT .)
    }               reduce using rule 69 (log_op -> PR_NOT .)
    )               reduce using rule 69 (log_op -> PR_NOT .)


state 154

    (73) super_exp -> exp rel_op . super_exp
    (72) super_exp -> . exp
    (73) super_exp -> . exp rel_op super_exp
    (80) exp -> . termino
    (81) exp -> . termino + exp
    (82) exp -> . termino - exp
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_calculaRegresion resolved as shift
  ! shift/reduce conflict for PR_prediceResultado resolved as shift
  ! shift/reduce conflict for PR_calculaModa resolved as shift
  ! shift/reduce conflict for PR_calculaMediana resolved as shift
  ! shift/reduce conflict for PR_calculaMedia resolved as shift
  ! shift/reduce conflict for PR_calculaPoisson resolved as shift
  ! shift/reduce conflict for PR_calculaBinomial resolved as shift
  ! shift/reduce conflict for PR_calculaNormal resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    <               reduce using rule 100 (empty -> .)
    >               reduce using rule 100 (empty -> .)
    LE              reduce using rule 100 (empty -> .)
    GE              reduce using rule 100 (empty -> .)
    EQ              reduce using rule 100 (empty -> .)
    NEQ             reduce using rule 100 (empty -> .)
    PR_AND          reduce using rule 100 (empty -> .)
    PR_OR           reduce using rule 100 (empty -> .)
    PR_NOT          reduce using rule 100 (empty -> .)
    PR_REPEAT       reduce using rule 100 (empty -> .)
    PR_RETURN       reduce using rule 100 (empty -> .)
    PR_READ         reduce using rule 100 (empty -> .)
    PR_PRINT        reduce using rule 100 (empty -> .)
    PR_IF           reduce using rule 100 (empty -> .)
    }               reduce using rule 100 (empty -> .)
    )               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaRegresion [ reduce using rule 100 (empty -> .) ]
  ! PR_prediceResultado [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaModa  [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMediana [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaMedia [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaPoisson [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaBinomial [ reduce using rule 100 (empty -> .) ]
  ! PR_calculaNormal [ reduce using rule 100 (empty -> .) ]

    exp                            shift and go to state 121
    super_exp                      shift and go to state 184
    termino                        shift and go to state 89
    factor                         shift and go to state 92
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 155

    (74) rel_op -> < .

    (               reduce using rule 74 (rel_op -> < .)
    +               reduce using rule 74 (rel_op -> < .)
    -               reduce using rule 74 (rel_op -> < .)
    CTEI            reduce using rule 74 (rel_op -> < .)
    CTEF            reduce using rule 74 (rel_op -> < .)
    CTES            reduce using rule 74 (rel_op -> < .)
    PR_TRUE         reduce using rule 74 (rel_op -> < .)
    PR_FALSE        reduce using rule 74 (rel_op -> < .)
    ID              reduce using rule 74 (rel_op -> < .)
    PR_calculaRegresion reduce using rule 74 (rel_op -> < .)
    PR_prediceResultado reduce using rule 74 (rel_op -> < .)
    PR_calculaModa  reduce using rule 74 (rel_op -> < .)
    PR_calculaMediana reduce using rule 74 (rel_op -> < .)
    PR_calculaMedia reduce using rule 74 (rel_op -> < .)
    PR_calculaPoisson reduce using rule 74 (rel_op -> < .)
    PR_calculaBinomial reduce using rule 74 (rel_op -> < .)
    PR_calculaNormal reduce using rule 74 (rel_op -> < .)
    <               reduce using rule 74 (rel_op -> < .)
    >               reduce using rule 74 (rel_op -> < .)
    LE              reduce using rule 74 (rel_op -> < .)
    GE              reduce using rule 74 (rel_op -> < .)
    EQ              reduce using rule 74 (rel_op -> < .)
    NEQ             reduce using rule 74 (rel_op -> < .)
    *               reduce using rule 74 (rel_op -> < .)
    /               reduce using rule 74 (rel_op -> < .)
    PR_AND          reduce using rule 74 (rel_op -> < .)
    PR_OR           reduce using rule 74 (rel_op -> < .)
    PR_NOT          reduce using rule 74 (rel_op -> < .)
    PR_REPEAT       reduce using rule 74 (rel_op -> < .)
    PR_RETURN       reduce using rule 74 (rel_op -> < .)
    PR_READ         reduce using rule 74 (rel_op -> < .)
    PR_PRINT        reduce using rule 74 (rel_op -> < .)
    PR_IF           reduce using rule 74 (rel_op -> < .)
    }               reduce using rule 74 (rel_op -> < .)
    )               reduce using rule 74 (rel_op -> < .)


state 156

    (75) rel_op -> > .

    (               reduce using rule 75 (rel_op -> > .)
    +               reduce using rule 75 (rel_op -> > .)
    -               reduce using rule 75 (rel_op -> > .)
    CTEI            reduce using rule 75 (rel_op -> > .)
    CTEF            reduce using rule 75 (rel_op -> > .)
    CTES            reduce using rule 75 (rel_op -> > .)
    PR_TRUE         reduce using rule 75 (rel_op -> > .)
    PR_FALSE        reduce using rule 75 (rel_op -> > .)
    ID              reduce using rule 75 (rel_op -> > .)
    PR_calculaRegresion reduce using rule 75 (rel_op -> > .)
    PR_prediceResultado reduce using rule 75 (rel_op -> > .)
    PR_calculaModa  reduce using rule 75 (rel_op -> > .)
    PR_calculaMediana reduce using rule 75 (rel_op -> > .)
    PR_calculaMedia reduce using rule 75 (rel_op -> > .)
    PR_calculaPoisson reduce using rule 75 (rel_op -> > .)
    PR_calculaBinomial reduce using rule 75 (rel_op -> > .)
    PR_calculaNormal reduce using rule 75 (rel_op -> > .)
    <               reduce using rule 75 (rel_op -> > .)
    >               reduce using rule 75 (rel_op -> > .)
    LE              reduce using rule 75 (rel_op -> > .)
    GE              reduce using rule 75 (rel_op -> > .)
    EQ              reduce using rule 75 (rel_op -> > .)
    NEQ             reduce using rule 75 (rel_op -> > .)
    *               reduce using rule 75 (rel_op -> > .)
    /               reduce using rule 75 (rel_op -> > .)
    PR_AND          reduce using rule 75 (rel_op -> > .)
    PR_OR           reduce using rule 75 (rel_op -> > .)
    PR_NOT          reduce using rule 75 (rel_op -> > .)
    PR_REPEAT       reduce using rule 75 (rel_op -> > .)
    PR_RETURN       reduce using rule 75 (rel_op -> > .)
    PR_READ         reduce using rule 75 (rel_op -> > .)
    PR_PRINT        reduce using rule 75 (rel_op -> > .)
    PR_IF           reduce using rule 75 (rel_op -> > .)
    }               reduce using rule 75 (rel_op -> > .)
    )               reduce using rule 75 (rel_op -> > .)


state 157

    (76) rel_op -> LE .

    (               reduce using rule 76 (rel_op -> LE .)
    +               reduce using rule 76 (rel_op -> LE .)
    -               reduce using rule 76 (rel_op -> LE .)
    CTEI            reduce using rule 76 (rel_op -> LE .)
    CTEF            reduce using rule 76 (rel_op -> LE .)
    CTES            reduce using rule 76 (rel_op -> LE .)
    PR_TRUE         reduce using rule 76 (rel_op -> LE .)
    PR_FALSE        reduce using rule 76 (rel_op -> LE .)
    ID              reduce using rule 76 (rel_op -> LE .)
    PR_calculaRegresion reduce using rule 76 (rel_op -> LE .)
    PR_prediceResultado reduce using rule 76 (rel_op -> LE .)
    PR_calculaModa  reduce using rule 76 (rel_op -> LE .)
    PR_calculaMediana reduce using rule 76 (rel_op -> LE .)
    PR_calculaMedia reduce using rule 76 (rel_op -> LE .)
    PR_calculaPoisson reduce using rule 76 (rel_op -> LE .)
    PR_calculaBinomial reduce using rule 76 (rel_op -> LE .)
    PR_calculaNormal reduce using rule 76 (rel_op -> LE .)
    <               reduce using rule 76 (rel_op -> LE .)
    >               reduce using rule 76 (rel_op -> LE .)
    LE              reduce using rule 76 (rel_op -> LE .)
    GE              reduce using rule 76 (rel_op -> LE .)
    EQ              reduce using rule 76 (rel_op -> LE .)
    NEQ             reduce using rule 76 (rel_op -> LE .)
    *               reduce using rule 76 (rel_op -> LE .)
    /               reduce using rule 76 (rel_op -> LE .)
    PR_AND          reduce using rule 76 (rel_op -> LE .)
    PR_OR           reduce using rule 76 (rel_op -> LE .)
    PR_NOT          reduce using rule 76 (rel_op -> LE .)
    PR_REPEAT       reduce using rule 76 (rel_op -> LE .)
    PR_RETURN       reduce using rule 76 (rel_op -> LE .)
    PR_READ         reduce using rule 76 (rel_op -> LE .)
    PR_PRINT        reduce using rule 76 (rel_op -> LE .)
    PR_IF           reduce using rule 76 (rel_op -> LE .)
    }               reduce using rule 76 (rel_op -> LE .)
    )               reduce using rule 76 (rel_op -> LE .)


state 158

    (77) rel_op -> GE .

    (               reduce using rule 77 (rel_op -> GE .)
    +               reduce using rule 77 (rel_op -> GE .)
    -               reduce using rule 77 (rel_op -> GE .)
    CTEI            reduce using rule 77 (rel_op -> GE .)
    CTEF            reduce using rule 77 (rel_op -> GE .)
    CTES            reduce using rule 77 (rel_op -> GE .)
    PR_TRUE         reduce using rule 77 (rel_op -> GE .)
    PR_FALSE        reduce using rule 77 (rel_op -> GE .)
    ID              reduce using rule 77 (rel_op -> GE .)
    PR_calculaRegresion reduce using rule 77 (rel_op -> GE .)
    PR_prediceResultado reduce using rule 77 (rel_op -> GE .)
    PR_calculaModa  reduce using rule 77 (rel_op -> GE .)
    PR_calculaMediana reduce using rule 77 (rel_op -> GE .)
    PR_calculaMedia reduce using rule 77 (rel_op -> GE .)
    PR_calculaPoisson reduce using rule 77 (rel_op -> GE .)
    PR_calculaBinomial reduce using rule 77 (rel_op -> GE .)
    PR_calculaNormal reduce using rule 77 (rel_op -> GE .)
    <               reduce using rule 77 (rel_op -> GE .)
    >               reduce using rule 77 (rel_op -> GE .)
    LE              reduce using rule 77 (rel_op -> GE .)
    GE              reduce using rule 77 (rel_op -> GE .)
    EQ              reduce using rule 77 (rel_op -> GE .)
    NEQ             reduce using rule 77 (rel_op -> GE .)
    *               reduce using rule 77 (rel_op -> GE .)
    /               reduce using rule 77 (rel_op -> GE .)
    PR_AND          reduce using rule 77 (rel_op -> GE .)
    PR_OR           reduce using rule 77 (rel_op -> GE .)
    PR_NOT          reduce using rule 77 (rel_op -> GE .)
    PR_REPEAT       reduce using rule 77 (rel_op -> GE .)
    PR_RETURN       reduce using rule 77 (rel_op -> GE .)
    PR_READ         reduce using rule 77 (rel_op -> GE .)
    PR_PRINT        reduce using rule 77 (rel_op -> GE .)
    PR_IF           reduce using rule 77 (rel_op -> GE .)
    }               reduce using rule 77 (rel_op -> GE .)
    )               reduce using rule 77 (rel_op -> GE .)


state 159

    (78) rel_op -> EQ .

    (               reduce using rule 78 (rel_op -> EQ .)
    +               reduce using rule 78 (rel_op -> EQ .)
    -               reduce using rule 78 (rel_op -> EQ .)
    CTEI            reduce using rule 78 (rel_op -> EQ .)
    CTEF            reduce using rule 78 (rel_op -> EQ .)
    CTES            reduce using rule 78 (rel_op -> EQ .)
    PR_TRUE         reduce using rule 78 (rel_op -> EQ .)
    PR_FALSE        reduce using rule 78 (rel_op -> EQ .)
    ID              reduce using rule 78 (rel_op -> EQ .)
    PR_calculaRegresion reduce using rule 78 (rel_op -> EQ .)
    PR_prediceResultado reduce using rule 78 (rel_op -> EQ .)
    PR_calculaModa  reduce using rule 78 (rel_op -> EQ .)
    PR_calculaMediana reduce using rule 78 (rel_op -> EQ .)
    PR_calculaMedia reduce using rule 78 (rel_op -> EQ .)
    PR_calculaPoisson reduce using rule 78 (rel_op -> EQ .)
    PR_calculaBinomial reduce using rule 78 (rel_op -> EQ .)
    PR_calculaNormal reduce using rule 78 (rel_op -> EQ .)
    <               reduce using rule 78 (rel_op -> EQ .)
    >               reduce using rule 78 (rel_op -> EQ .)
    LE              reduce using rule 78 (rel_op -> EQ .)
    GE              reduce using rule 78 (rel_op -> EQ .)
    EQ              reduce using rule 78 (rel_op -> EQ .)
    NEQ             reduce using rule 78 (rel_op -> EQ .)
    *               reduce using rule 78 (rel_op -> EQ .)
    /               reduce using rule 78 (rel_op -> EQ .)
    PR_AND          reduce using rule 78 (rel_op -> EQ .)
    PR_OR           reduce using rule 78 (rel_op -> EQ .)
    PR_NOT          reduce using rule 78 (rel_op -> EQ .)
    PR_REPEAT       reduce using rule 78 (rel_op -> EQ .)
    PR_RETURN       reduce using rule 78 (rel_op -> EQ .)
    PR_READ         reduce using rule 78 (rel_op -> EQ .)
    PR_PRINT        reduce using rule 78 (rel_op -> EQ .)
    PR_IF           reduce using rule 78 (rel_op -> EQ .)
    }               reduce using rule 78 (rel_op -> EQ .)
    )               reduce using rule 78 (rel_op -> EQ .)


state 160

    (79) rel_op -> NEQ .

    (               reduce using rule 79 (rel_op -> NEQ .)
    +               reduce using rule 79 (rel_op -> NEQ .)
    -               reduce using rule 79 (rel_op -> NEQ .)
    CTEI            reduce using rule 79 (rel_op -> NEQ .)
    CTEF            reduce using rule 79 (rel_op -> NEQ .)
    CTES            reduce using rule 79 (rel_op -> NEQ .)
    PR_TRUE         reduce using rule 79 (rel_op -> NEQ .)
    PR_FALSE        reduce using rule 79 (rel_op -> NEQ .)
    ID              reduce using rule 79 (rel_op -> NEQ .)
    PR_calculaRegresion reduce using rule 79 (rel_op -> NEQ .)
    PR_prediceResultado reduce using rule 79 (rel_op -> NEQ .)
    PR_calculaModa  reduce using rule 79 (rel_op -> NEQ .)
    PR_calculaMediana reduce using rule 79 (rel_op -> NEQ .)
    PR_calculaMedia reduce using rule 79 (rel_op -> NEQ .)
    PR_calculaPoisson reduce using rule 79 (rel_op -> NEQ .)
    PR_calculaBinomial reduce using rule 79 (rel_op -> NEQ .)
    PR_calculaNormal reduce using rule 79 (rel_op -> NEQ .)
    <               reduce using rule 79 (rel_op -> NEQ .)
    >               reduce using rule 79 (rel_op -> NEQ .)
    LE              reduce using rule 79 (rel_op -> NEQ .)
    GE              reduce using rule 79 (rel_op -> NEQ .)
    EQ              reduce using rule 79 (rel_op -> NEQ .)
    NEQ             reduce using rule 79 (rel_op -> NEQ .)
    *               reduce using rule 79 (rel_op -> NEQ .)
    /               reduce using rule 79 (rel_op -> NEQ .)
    PR_AND          reduce using rule 79 (rel_op -> NEQ .)
    PR_OR           reduce using rule 79 (rel_op -> NEQ .)
    PR_NOT          reduce using rule 79 (rel_op -> NEQ .)
    PR_REPEAT       reduce using rule 79 (rel_op -> NEQ .)
    PR_RETURN       reduce using rule 79 (rel_op -> NEQ .)
    PR_READ         reduce using rule 79 (rel_op -> NEQ .)
    PR_PRINT        reduce using rule 79 (rel_op -> NEQ .)
    PR_IF           reduce using rule 79 (rel_op -> NEQ .)
    }               reduce using rule 79 (rel_op -> NEQ .)
    )               reduce using rule 79 (rel_op -> NEQ .)


state 161

    (51) lecture -> PR_READ ARR ID index .

    PR_REPEAT       reduce using rule 51 (lecture -> PR_READ ARR ID index .)
    PR_RETURN       reduce using rule 51 (lecture -> PR_READ ARR ID index .)
    PR_READ         reduce using rule 51 (lecture -> PR_READ ARR ID index .)
    PR_PRINT        reduce using rule 51 (lecture -> PR_READ ARR ID index .)
    ID              reduce using rule 51 (lecture -> PR_READ ARR ID index .)
    PR_IF           reduce using rule 51 (lecture -> PR_READ ARR ID index .)
    PR_calculaRegresion reduce using rule 51 (lecture -> PR_READ ARR ID index .)
    PR_prediceResultado reduce using rule 51 (lecture -> PR_READ ARR ID index .)
    PR_calculaModa  reduce using rule 51 (lecture -> PR_READ ARR ID index .)
    PR_calculaMediana reduce using rule 51 (lecture -> PR_READ ARR ID index .)
    PR_calculaMedia reduce using rule 51 (lecture -> PR_READ ARR ID index .)
    PR_calculaPoisson reduce using rule 51 (lecture -> PR_READ ARR ID index .)
    PR_calculaBinomial reduce using rule 51 (lecture -> PR_READ ARR ID index .)
    PR_calculaNormal reduce using rule 51 (lecture -> PR_READ ARR ID index .)
    }               reduce using rule 51 (lecture -> PR_READ ARR ID index .)


state 162

    (39) other_index -> [ exp ] .
    (40) other_index -> [ exp ] . [ exp ]

    =               reduce using rule 39 (other_index -> [ exp ] .)
    *               reduce using rule 39 (other_index -> [ exp ] .)
    /               reduce using rule 39 (other_index -> [ exp ] .)
    +               reduce using rule 39 (other_index -> [ exp ] .)
    -               reduce using rule 39 (other_index -> [ exp ] .)
    )               reduce using rule 39 (other_index -> [ exp ] .)
    <               reduce using rule 39 (other_index -> [ exp ] .)
    >               reduce using rule 39 (other_index -> [ exp ] .)
    LE              reduce using rule 39 (other_index -> [ exp ] .)
    GE              reduce using rule 39 (other_index -> [ exp ] .)
    EQ              reduce using rule 39 (other_index -> [ exp ] .)
    NEQ             reduce using rule 39 (other_index -> [ exp ] .)
    PR_AND          reduce using rule 39 (other_index -> [ exp ] .)
    PR_OR           reduce using rule 39 (other_index -> [ exp ] .)
    PR_NOT          reduce using rule 39 (other_index -> [ exp ] .)
    PR_REPEAT       reduce using rule 39 (other_index -> [ exp ] .)
    PR_RETURN       reduce using rule 39 (other_index -> [ exp ] .)
    PR_READ         reduce using rule 39 (other_index -> [ exp ] .)
    PR_PRINT        reduce using rule 39 (other_index -> [ exp ] .)
    ID              reduce using rule 39 (other_index -> [ exp ] .)
    PR_IF           reduce using rule 39 (other_index -> [ exp ] .)
    PR_calculaRegresion reduce using rule 39 (other_index -> [ exp ] .)
    PR_prediceResultado reduce using rule 39 (other_index -> [ exp ] .)
    PR_calculaModa  reduce using rule 39 (other_index -> [ exp ] .)
    PR_calculaMediana reduce using rule 39 (other_index -> [ exp ] .)
    PR_calculaMedia reduce using rule 39 (other_index -> [ exp ] .)
    PR_calculaPoisson reduce using rule 39 (other_index -> [ exp ] .)
    PR_calculaBinomial reduce using rule 39 (other_index -> [ exp ] .)
    PR_calculaNormal reduce using rule 39 (other_index -> [ exp ] .)
    }               reduce using rule 39 (other_index -> [ exp ] .)
    ]               reduce using rule 39 (other_index -> [ exp ] .)
    [               shift and go to state 185


state 163

    (52) writing -> PR_PRINT ( mega_exp ) .

    PR_REPEAT       reduce using rule 52 (writing -> PR_PRINT ( mega_exp ) .)
    PR_RETURN       reduce using rule 52 (writing -> PR_PRINT ( mega_exp ) .)
    PR_READ         reduce using rule 52 (writing -> PR_PRINT ( mega_exp ) .)
    PR_PRINT        reduce using rule 52 (writing -> PR_PRINT ( mega_exp ) .)
    ID              reduce using rule 52 (writing -> PR_PRINT ( mega_exp ) .)
    PR_IF           reduce using rule 52 (writing -> PR_PRINT ( mega_exp ) .)
    PR_calculaRegresion reduce using rule 52 (writing -> PR_PRINT ( mega_exp ) .)
    PR_prediceResultado reduce using rule 52 (writing -> PR_PRINT ( mega_exp ) .)
    PR_calculaModa  reduce using rule 52 (writing -> PR_PRINT ( mega_exp ) .)
    PR_calculaMediana reduce using rule 52 (writing -> PR_PRINT ( mega_exp ) .)
    PR_calculaMedia reduce using rule 52 (writing -> PR_PRINT ( mega_exp ) .)
    PR_calculaPoisson reduce using rule 52 (writing -> PR_PRINT ( mega_exp ) .)
    PR_calculaBinomial reduce using rule 52 (writing -> PR_PRINT ( mega_exp ) .)
    PR_calculaNormal reduce using rule 52 (writing -> PR_PRINT ( mega_exp ) .)
    }               reduce using rule 52 (writing -> PR_PRINT ( mega_exp ) .)


state 164

    (81) exp -> termino + exp .

    )               reduce using rule 81 (exp -> termino + exp .)
    <               reduce using rule 81 (exp -> termino + exp .)
    >               reduce using rule 81 (exp -> termino + exp .)
    LE              reduce using rule 81 (exp -> termino + exp .)
    GE              reduce using rule 81 (exp -> termino + exp .)
    EQ              reduce using rule 81 (exp -> termino + exp .)
    NEQ             reduce using rule 81 (exp -> termino + exp .)
    PR_AND          reduce using rule 81 (exp -> termino + exp .)
    PR_OR           reduce using rule 81 (exp -> termino + exp .)
    PR_NOT          reduce using rule 81 (exp -> termino + exp .)
    PR_REPEAT       reduce using rule 81 (exp -> termino + exp .)
    PR_RETURN       reduce using rule 81 (exp -> termino + exp .)
    PR_READ         reduce using rule 81 (exp -> termino + exp .)
    PR_PRINT        reduce using rule 81 (exp -> termino + exp .)
    ID              reduce using rule 81 (exp -> termino + exp .)
    PR_IF           reduce using rule 81 (exp -> termino + exp .)
    PR_calculaRegresion reduce using rule 81 (exp -> termino + exp .)
    PR_prediceResultado reduce using rule 81 (exp -> termino + exp .)
    PR_calculaModa  reduce using rule 81 (exp -> termino + exp .)
    PR_calculaMediana reduce using rule 81 (exp -> termino + exp .)
    PR_calculaMedia reduce using rule 81 (exp -> termino + exp .)
    PR_calculaPoisson reduce using rule 81 (exp -> termino + exp .)
    PR_calculaBinomial reduce using rule 81 (exp -> termino + exp .)
    PR_calculaNormal reduce using rule 81 (exp -> termino + exp .)
    }               reduce using rule 81 (exp -> termino + exp .)
    ]               reduce using rule 81 (exp -> termino + exp .)


state 165

    (82) exp -> termino - exp .

    )               reduce using rule 82 (exp -> termino - exp .)
    <               reduce using rule 82 (exp -> termino - exp .)
    >               reduce using rule 82 (exp -> termino - exp .)
    LE              reduce using rule 82 (exp -> termino - exp .)
    GE              reduce using rule 82 (exp -> termino - exp .)
    EQ              reduce using rule 82 (exp -> termino - exp .)
    NEQ             reduce using rule 82 (exp -> termino - exp .)
    PR_AND          reduce using rule 82 (exp -> termino - exp .)
    PR_OR           reduce using rule 82 (exp -> termino - exp .)
    PR_NOT          reduce using rule 82 (exp -> termino - exp .)
    PR_REPEAT       reduce using rule 82 (exp -> termino - exp .)
    PR_RETURN       reduce using rule 82 (exp -> termino - exp .)
    PR_READ         reduce using rule 82 (exp -> termino - exp .)
    PR_PRINT        reduce using rule 82 (exp -> termino - exp .)
    ID              reduce using rule 82 (exp -> termino - exp .)
    PR_IF           reduce using rule 82 (exp -> termino - exp .)
    PR_calculaRegresion reduce using rule 82 (exp -> termino - exp .)
    PR_prediceResultado reduce using rule 82 (exp -> termino - exp .)
    PR_calculaModa  reduce using rule 82 (exp -> termino - exp .)
    PR_calculaMediana reduce using rule 82 (exp -> termino - exp .)
    PR_calculaMedia reduce using rule 82 (exp -> termino - exp .)
    PR_calculaPoisson reduce using rule 82 (exp -> termino - exp .)
    PR_calculaBinomial reduce using rule 82 (exp -> termino - exp .)
    PR_calculaNormal reduce using rule 82 (exp -> termino - exp .)
    }               reduce using rule 82 (exp -> termino - exp .)
    ]               reduce using rule 82 (exp -> termino - exp .)


state 166

    (84) termino -> factor * termino .

    +               reduce using rule 84 (termino -> factor * termino .)
    -               reduce using rule 84 (termino -> factor * termino .)
    )               reduce using rule 84 (termino -> factor * termino .)
    <               reduce using rule 84 (termino -> factor * termino .)
    >               reduce using rule 84 (termino -> factor * termino .)
    LE              reduce using rule 84 (termino -> factor * termino .)
    GE              reduce using rule 84 (termino -> factor * termino .)
    EQ              reduce using rule 84 (termino -> factor * termino .)
    NEQ             reduce using rule 84 (termino -> factor * termino .)
    PR_AND          reduce using rule 84 (termino -> factor * termino .)
    PR_OR           reduce using rule 84 (termino -> factor * termino .)
    PR_NOT          reduce using rule 84 (termino -> factor * termino .)
    PR_REPEAT       reduce using rule 84 (termino -> factor * termino .)
    PR_RETURN       reduce using rule 84 (termino -> factor * termino .)
    PR_READ         reduce using rule 84 (termino -> factor * termino .)
    PR_PRINT        reduce using rule 84 (termino -> factor * termino .)
    ID              reduce using rule 84 (termino -> factor * termino .)
    PR_IF           reduce using rule 84 (termino -> factor * termino .)
    PR_calculaRegresion reduce using rule 84 (termino -> factor * termino .)
    PR_prediceResultado reduce using rule 84 (termino -> factor * termino .)
    PR_calculaModa  reduce using rule 84 (termino -> factor * termino .)
    PR_calculaMediana reduce using rule 84 (termino -> factor * termino .)
    PR_calculaMedia reduce using rule 84 (termino -> factor * termino .)
    PR_calculaPoisson reduce using rule 84 (termino -> factor * termino .)
    PR_calculaBinomial reduce using rule 84 (termino -> factor * termino .)
    PR_calculaNormal reduce using rule 84 (termino -> factor * termino .)
    }               reduce using rule 84 (termino -> factor * termino .)
    ]               reduce using rule 84 (termino -> factor * termino .)


state 167

    (85) termino -> factor / termino .

    +               reduce using rule 85 (termino -> factor / termino .)
    -               reduce using rule 85 (termino -> factor / termino .)
    )               reduce using rule 85 (termino -> factor / termino .)
    <               reduce using rule 85 (termino -> factor / termino .)
    >               reduce using rule 85 (termino -> factor / termino .)
    LE              reduce using rule 85 (termino -> factor / termino .)
    GE              reduce using rule 85 (termino -> factor / termino .)
    EQ              reduce using rule 85 (termino -> factor / termino .)
    NEQ             reduce using rule 85 (termino -> factor / termino .)
    PR_AND          reduce using rule 85 (termino -> factor / termino .)
    PR_OR           reduce using rule 85 (termino -> factor / termino .)
    PR_NOT          reduce using rule 85 (termino -> factor / termino .)
    PR_REPEAT       reduce using rule 85 (termino -> factor / termino .)
    PR_RETURN       reduce using rule 85 (termino -> factor / termino .)
    PR_READ         reduce using rule 85 (termino -> factor / termino .)
    PR_PRINT        reduce using rule 85 (termino -> factor / termino .)
    ID              reduce using rule 85 (termino -> factor / termino .)
    PR_IF           reduce using rule 85 (termino -> factor / termino .)
    PR_calculaRegresion reduce using rule 85 (termino -> factor / termino .)
    PR_prediceResultado reduce using rule 85 (termino -> factor / termino .)
    PR_calculaModa  reduce using rule 85 (termino -> factor / termino .)
    PR_calculaMediana reduce using rule 85 (termino -> factor / termino .)
    PR_calculaMedia reduce using rule 85 (termino -> factor / termino .)
    PR_calculaPoisson reduce using rule 85 (termino -> factor / termino .)
    PR_calculaBinomial reduce using rule 85 (termino -> factor / termino .)
    PR_calculaNormal reduce using rule 85 (termino -> factor / termino .)
    }               reduce using rule 85 (termino -> factor / termino .)
    ]               reduce using rule 85 (termino -> factor / termino .)


state 168

    (86) factor -> ( super_exp ) .

    *               reduce using rule 86 (factor -> ( super_exp ) .)
    /               reduce using rule 86 (factor -> ( super_exp ) .)
    +               reduce using rule 86 (factor -> ( super_exp ) .)
    -               reduce using rule 86 (factor -> ( super_exp ) .)
    )               reduce using rule 86 (factor -> ( super_exp ) .)
    <               reduce using rule 86 (factor -> ( super_exp ) .)
    >               reduce using rule 86 (factor -> ( super_exp ) .)
    LE              reduce using rule 86 (factor -> ( super_exp ) .)
    GE              reduce using rule 86 (factor -> ( super_exp ) .)
    EQ              reduce using rule 86 (factor -> ( super_exp ) .)
    NEQ             reduce using rule 86 (factor -> ( super_exp ) .)
    PR_AND          reduce using rule 86 (factor -> ( super_exp ) .)
    PR_OR           reduce using rule 86 (factor -> ( super_exp ) .)
    PR_NOT          reduce using rule 86 (factor -> ( super_exp ) .)
    PR_REPEAT       reduce using rule 86 (factor -> ( super_exp ) .)
    PR_RETURN       reduce using rule 86 (factor -> ( super_exp ) .)
    PR_READ         reduce using rule 86 (factor -> ( super_exp ) .)
    PR_PRINT        reduce using rule 86 (factor -> ( super_exp ) .)
    ID              reduce using rule 86 (factor -> ( super_exp ) .)
    PR_IF           reduce using rule 86 (factor -> ( super_exp ) .)
    PR_calculaRegresion reduce using rule 86 (factor -> ( super_exp ) .)
    PR_prediceResultado reduce using rule 86 (factor -> ( super_exp ) .)
    PR_calculaModa  reduce using rule 86 (factor -> ( super_exp ) .)
    PR_calculaMediana reduce using rule 86 (factor -> ( super_exp ) .)
    PR_calculaMedia reduce using rule 86 (factor -> ( super_exp ) .)
    PR_calculaPoisson reduce using rule 86 (factor -> ( super_exp ) .)
    PR_calculaBinomial reduce using rule 86 (factor -> ( super_exp ) .)
    PR_calculaNormal reduce using rule 86 (factor -> ( super_exp ) .)
    }               reduce using rule 86 (factor -> ( super_exp ) .)
    ]               reduce using rule 86 (factor -> ( super_exp ) .)


state 169

    (44) cond1 -> PR_IF ( mega_exp ) . {

    {               shift and go to state 186


state 170

    (53) func_pred -> PR_calculaRegresion ( exp ) .

    PR_REPEAT       reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    PR_RETURN       reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    PR_READ         reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    PR_PRINT        reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    ID              reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    PR_IF           reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    PR_calculaRegresion reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    PR_prediceResultado reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    PR_calculaModa  reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    PR_calculaMediana reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    PR_calculaMedia reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    PR_calculaPoisson reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    PR_calculaBinomial reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    PR_calculaNormal reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    }               reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    *               reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    /               reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    +               reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    -               reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    )               reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    <               reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    >               reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    LE              reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    GE              reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    EQ              reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    NEQ             reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    PR_AND          reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    PR_OR           reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    PR_NOT          reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)
    ]               reduce using rule 53 (func_pred -> PR_calculaRegresion ( exp ) .)


state 171

    (54) func_pred -> PR_prediceResultado ( exp ) .

    PR_REPEAT       reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    PR_RETURN       reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    PR_READ         reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    PR_PRINT        reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    ID              reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    PR_IF           reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    PR_calculaRegresion reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    PR_prediceResultado reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    PR_calculaModa  reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    PR_calculaMediana reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    PR_calculaMedia reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    PR_calculaPoisson reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    PR_calculaBinomial reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    PR_calculaNormal reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    }               reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    *               reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    /               reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    +               reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    -               reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    )               reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    <               reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    >               reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    LE              reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    GE              reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    EQ              reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    NEQ             reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    PR_AND          reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    PR_OR           reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    PR_NOT          reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)
    ]               reduce using rule 54 (func_pred -> PR_prediceResultado ( exp ) .)


state 172

    (55) func_pred -> PR_calculaModa ( exp ) .

    PR_REPEAT       reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    PR_RETURN       reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    PR_READ         reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    PR_PRINT        reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    ID              reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    PR_IF           reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    PR_calculaRegresion reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    PR_prediceResultado reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    PR_calculaModa  reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    PR_calculaMediana reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    PR_calculaMedia reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    PR_calculaPoisson reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    PR_calculaBinomial reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    PR_calculaNormal reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    }               reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    *               reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    /               reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    +               reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    -               reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    )               reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    <               reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    >               reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    LE              reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    GE              reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    EQ              reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    NEQ             reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    PR_AND          reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    PR_OR           reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    PR_NOT          reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)
    ]               reduce using rule 55 (func_pred -> PR_calculaModa ( exp ) .)


state 173

    (56) func_pred -> PR_calculaMediana ( exp ) .

    PR_REPEAT       reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    PR_RETURN       reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    PR_READ         reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    PR_PRINT        reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    ID              reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    PR_IF           reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    PR_calculaRegresion reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    PR_prediceResultado reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    PR_calculaModa  reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    PR_calculaMediana reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    PR_calculaMedia reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    PR_calculaPoisson reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    PR_calculaBinomial reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    PR_calculaNormal reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    }               reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    *               reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    /               reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    +               reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    -               reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    )               reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    <               reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    >               reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    LE              reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    GE              reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    EQ              reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    NEQ             reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    PR_AND          reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    PR_OR           reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    PR_NOT          reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)
    ]               reduce using rule 56 (func_pred -> PR_calculaMediana ( exp ) .)


state 174

    (57) func_pred -> PR_calculaMedia ( exp ) .

    PR_REPEAT       reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    PR_RETURN       reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    PR_READ         reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    PR_PRINT        reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    ID              reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    PR_IF           reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    PR_calculaRegresion reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    PR_prediceResultado reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    PR_calculaModa  reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    PR_calculaMediana reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    PR_calculaMedia reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    PR_calculaPoisson reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    PR_calculaBinomial reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    PR_calculaNormal reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    }               reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    *               reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    /               reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    +               reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    -               reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    )               reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    <               reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    >               reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    LE              reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    GE              reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    EQ              reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    NEQ             reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    PR_AND          reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    PR_OR           reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    PR_NOT          reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)
    ]               reduce using rule 57 (func_pred -> PR_calculaMedia ( exp ) .)


state 175

    (58) func_pred -> PR_calculaPoisson ( exp ) .

    PR_REPEAT       reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    PR_RETURN       reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    PR_READ         reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    PR_PRINT        reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    ID              reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    PR_IF           reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    PR_calculaRegresion reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    PR_prediceResultado reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    PR_calculaModa  reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    PR_calculaMediana reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    PR_calculaMedia reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    PR_calculaPoisson reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    PR_calculaBinomial reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    PR_calculaNormal reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    }               reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    *               reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    /               reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    +               reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    -               reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    )               reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    <               reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    >               reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    LE              reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    GE              reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    EQ              reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    NEQ             reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    PR_AND          reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    PR_OR           reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    PR_NOT          reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)
    ]               reduce using rule 58 (func_pred -> PR_calculaPoisson ( exp ) .)


state 176

    (59) func_pred -> PR_calculaBinomial ( exp ) .

    PR_REPEAT       reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    PR_RETURN       reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    PR_READ         reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    PR_PRINT        reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    ID              reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    PR_IF           reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    PR_calculaRegresion reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    PR_prediceResultado reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    PR_calculaModa  reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    PR_calculaMediana reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    PR_calculaMedia reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    PR_calculaPoisson reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    PR_calculaBinomial reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    PR_calculaNormal reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    }               reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    *               reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    /               reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    +               reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    -               reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    )               reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    <               reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    >               reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    LE              reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    GE              reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    EQ              reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    NEQ             reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    PR_AND          reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    PR_OR           reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    PR_NOT          reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)
    ]               reduce using rule 59 (func_pred -> PR_calculaBinomial ( exp ) .)


state 177

    (60) func_pred -> PR_calculaNormal ( exp ) .

    PR_REPEAT       reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    PR_RETURN       reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    PR_READ         reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    PR_PRINT        reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    ID              reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    PR_IF           reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    PR_calculaRegresion reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    PR_prediceResultado reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    PR_calculaModa  reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    PR_calculaMediana reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    PR_calculaMedia reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    PR_calculaPoisson reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    PR_calculaBinomial reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    PR_calculaNormal reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    }               reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    *               reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    /               reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    +               reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    -               reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    )               reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    <               reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    >               reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    LE              reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    GE              reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    EQ              reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    NEQ             reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    PR_AND          reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    PR_OR           reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    PR_NOT          reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)
    ]               reduce using rule 60 (func_pred -> PR_calculaNormal ( exp ) .)


state 178

    (5) index -> [ CTEI ] [ . CTEI ]

    CTEI            shift and go to state 187


state 179

    (42) loop -> PR_REPEAT ( mega_exp ) { . more_bloques }
    (34) more_bloques -> . bloque
    (35) more_bloques -> . bloque more_bloques
    (36) more_bloques -> . empty
    (21) bloque -> . assignation
    (22) bloque -> . loop
    (23) bloque -> . cond
    (24) bloque -> . return
    (25) bloque -> . lecture
    (26) bloque -> . writing
    (27) bloque -> . call
    (100) empty -> .
    (37) assignation -> . assignTo = mega_exp
    (42) loop -> . PR_REPEAT ( mega_exp ) { more_bloques }
    (43) cond -> . cond1 cond2
    (50) return -> . PR_RETURN mega_exp
    (51) lecture -> . PR_READ ARR ID index
    (52) writing -> . PR_PRINT ( mega_exp )
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (38) assignTo -> . ID other_index
    (44) cond1 -> . PR_IF ( mega_exp ) {
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

    }               reduce using rule 100 (empty -> .)
    PR_REPEAT       shift and go to state 47
    PR_RETURN       shift and go to state 49
    PR_READ         shift and go to state 50
    PR_PRINT        shift and go to state 52
    ID              shift and go to state 51
    PR_IF           shift and go to state 55
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

    more_bloques                   shift and go to state 188
    bloque                         shift and go to state 37
    empty                          shift and go to state 38
    assignation                    shift and go to state 39
    loop                           shift and go to state 40
    cond                           shift and go to state 41
    return                         shift and go to state 42
    lecture                        shift and go to state 43
    writing                        shift and go to state 44
    call                           shift and go to state 45
    assignTo                       shift and go to state 46
    cond1                          shift and go to state 48
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 180

    (46) maybe_else -> check_else do_else .

    PR_REPEAT       reduce using rule 46 (maybe_else -> check_else do_else .)
    PR_RETURN       reduce using rule 46 (maybe_else -> check_else do_else .)
    PR_READ         reduce using rule 46 (maybe_else -> check_else do_else .)
    PR_PRINT        reduce using rule 46 (maybe_else -> check_else do_else .)
    ID              reduce using rule 46 (maybe_else -> check_else do_else .)
    PR_IF           reduce using rule 46 (maybe_else -> check_else do_else .)
    PR_calculaRegresion reduce using rule 46 (maybe_else -> check_else do_else .)
    PR_prediceResultado reduce using rule 46 (maybe_else -> check_else do_else .)
    PR_calculaModa  reduce using rule 46 (maybe_else -> check_else do_else .)
    PR_calculaMediana reduce using rule 46 (maybe_else -> check_else do_else .)
    PR_calculaMedia reduce using rule 46 (maybe_else -> check_else do_else .)
    PR_calculaPoisson reduce using rule 46 (maybe_else -> check_else do_else .)
    PR_calculaBinomial reduce using rule 46 (maybe_else -> check_else do_else .)
    PR_calculaNormal reduce using rule 46 (maybe_else -> check_else do_else .)
    }               reduce using rule 46 (maybe_else -> check_else do_else .)


state 181

    (49) do_else -> more_bloques . }

    }               shift and go to state 189


state 182

    (48) check_else -> PR_ELSE { .

    PR_REPEAT       reduce using rule 48 (check_else -> PR_ELSE { .)
    PR_RETURN       reduce using rule 48 (check_else -> PR_ELSE { .)
    PR_READ         reduce using rule 48 (check_else -> PR_ELSE { .)
    PR_PRINT        reduce using rule 48 (check_else -> PR_ELSE { .)
    ID              reduce using rule 48 (check_else -> PR_ELSE { .)
    PR_IF           reduce using rule 48 (check_else -> PR_ELSE { .)
    PR_calculaRegresion reduce using rule 48 (check_else -> PR_ELSE { .)
    PR_prediceResultado reduce using rule 48 (check_else -> PR_ELSE { .)
    PR_calculaModa  reduce using rule 48 (check_else -> PR_ELSE { .)
    PR_calculaMediana reduce using rule 48 (check_else -> PR_ELSE { .)
    PR_calculaMedia reduce using rule 48 (check_else -> PR_ELSE { .)
    PR_calculaPoisson reduce using rule 48 (check_else -> PR_ELSE { .)
    PR_calculaBinomial reduce using rule 48 (check_else -> PR_ELSE { .)
    PR_calculaNormal reduce using rule 48 (check_else -> PR_ELSE { .)
    }               reduce using rule 48 (check_else -> PR_ELSE { .)


state 183

    (66) mega_exp -> opt_not super_exp log_op mega_exp .

    PR_REPEAT       reduce using rule 66 (mega_exp -> opt_not super_exp log_op mega_exp .)
    PR_RETURN       reduce using rule 66 (mega_exp -> opt_not super_exp log_op mega_exp .)
    PR_READ         reduce using rule 66 (mega_exp -> opt_not super_exp log_op mega_exp .)
    PR_PRINT        reduce using rule 66 (mega_exp -> opt_not super_exp log_op mega_exp .)
    ID              reduce using rule 66 (mega_exp -> opt_not super_exp log_op mega_exp .)
    PR_IF           reduce using rule 66 (mega_exp -> opt_not super_exp log_op mega_exp .)
    PR_calculaRegresion reduce using rule 66 (mega_exp -> opt_not super_exp log_op mega_exp .)
    PR_prediceResultado reduce using rule 66 (mega_exp -> opt_not super_exp log_op mega_exp .)
    PR_calculaModa  reduce using rule 66 (mega_exp -> opt_not super_exp log_op mega_exp .)
    PR_calculaMediana reduce using rule 66 (mega_exp -> opt_not super_exp log_op mega_exp .)
    PR_calculaMedia reduce using rule 66 (mega_exp -> opt_not super_exp log_op mega_exp .)
    PR_calculaPoisson reduce using rule 66 (mega_exp -> opt_not super_exp log_op mega_exp .)
    PR_calculaBinomial reduce using rule 66 (mega_exp -> opt_not super_exp log_op mega_exp .)
    PR_calculaNormal reduce using rule 66 (mega_exp -> opt_not super_exp log_op mega_exp .)
    }               reduce using rule 66 (mega_exp -> opt_not super_exp log_op mega_exp .)
    )               reduce using rule 66 (mega_exp -> opt_not super_exp log_op mega_exp .)


state 184

    (73) super_exp -> exp rel_op super_exp .

    PR_AND          reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    PR_OR           reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    PR_NOT          reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    PR_REPEAT       reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    PR_RETURN       reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    PR_READ         reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    PR_PRINT        reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    ID              reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    PR_IF           reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    PR_calculaRegresion reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    PR_prediceResultado reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    PR_calculaModa  reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    PR_calculaMediana reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    PR_calculaMedia reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    PR_calculaPoisson reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    PR_calculaBinomial reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    PR_calculaNormal reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    }               reduce using rule 73 (super_exp -> exp rel_op super_exp .)
    )               reduce using rule 73 (super_exp -> exp rel_op super_exp .)


state 185

    (40) other_index -> [ exp ] [ . exp ]
    (80) exp -> . termino
    (81) exp -> . termino + exp
    (82) exp -> . termino - exp
    (83) termino -> . factor
    (84) termino -> . factor * termino
    (85) termino -> . factor / termino
    (86) factor -> . ( super_exp )
    (87) factor -> . + var_cte
    (88) factor -> . - var_cte
    (89) factor -> . var_cte
    (90) var_cte -> . other
    (91) var_cte -> . CTEI
    (92) var_cte -> . CTEF
    (93) var_cte -> . CTES
    (94) var_cte -> . PR_TRUE
    (95) var_cte -> . PR_FALSE
    (96) other -> . ID other_index
    (97) other -> . call
    (98) other -> . empty
    (61) call -> . call_1 call_2
    (62) call -> . func_pred
    (100) empty -> .
    (63) call_1 -> . ID (
    (53) func_pred -> . PR_calculaRegresion ( exp )
    (54) func_pred -> . PR_prediceResultado ( exp )
    (55) func_pred -> . PR_calculaModa ( exp )
    (56) func_pred -> . PR_calculaMediana ( exp )
    (57) func_pred -> . PR_calculaMedia ( exp )
    (58) func_pred -> . PR_calculaPoisson ( exp )
    (59) func_pred -> . PR_calculaBinomial ( exp )
    (60) func_pred -> . PR_calculaNormal ( exp )

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    (               shift and go to state 93
    +               shift and go to state 90
    -               shift and go to state 91
    CTEI            shift and go to state 96
    CTEF            shift and go to state 97
    CTES            shift and go to state 98
    PR_TRUE         shift and go to state 99
    PR_FALSE        shift and go to state 100
    ID              shift and go to state 101
    *               reduce using rule 100 (empty -> .)
    /               reduce using rule 100 (empty -> .)
    ]               reduce using rule 100 (empty -> .)
    PR_calculaRegresion shift and go to state 56
    PR_prediceResultado shift and go to state 57
    PR_calculaModa  shift and go to state 58
    PR_calculaMediana shift and go to state 59
    PR_calculaMedia shift and go to state 60
    PR_calculaPoisson shift and go to state 61
    PR_calculaBinomial shift and go to state 62
    PR_calculaNormal shift and go to state 63

  ! +               [ reduce using rule 100 (empty -> .) ]
  ! -               [ reduce using rule 100 (empty -> .) ]

    exp                            shift and go to state 190
    termino                        shift and go to state 89
    factor                         shift and go to state 92
    var_cte                        shift and go to state 94
    other                          shift and go to state 95
    call                           shift and go to state 102
    empty                          shift and go to state 103
    call_1                         shift and go to state 53
    func_pred                      shift and go to state 54

state 186

    (44) cond1 -> PR_IF ( mega_exp ) { .

    PR_REPEAT       reduce using rule 44 (cond1 -> PR_IF ( mega_exp ) { .)
    PR_RETURN       reduce using rule 44 (cond1 -> PR_IF ( mega_exp ) { .)
    PR_READ         reduce using rule 44 (cond1 -> PR_IF ( mega_exp ) { .)
    PR_PRINT        reduce using rule 44 (cond1 -> PR_IF ( mega_exp ) { .)
    ID              reduce using rule 44 (cond1 -> PR_IF ( mega_exp ) { .)
    PR_IF           reduce using rule 44 (cond1 -> PR_IF ( mega_exp ) { .)
    PR_calculaRegresion reduce using rule 44 (cond1 -> PR_IF ( mega_exp ) { .)
    PR_prediceResultado reduce using rule 44 (cond1 -> PR_IF ( mega_exp ) { .)
    PR_calculaModa  reduce using rule 44 (cond1 -> PR_IF ( mega_exp ) { .)
    PR_calculaMediana reduce using rule 44 (cond1 -> PR_IF ( mega_exp ) { .)
    PR_calculaMedia reduce using rule 44 (cond1 -> PR_IF ( mega_exp ) { .)
    PR_calculaPoisson reduce using rule 44 (cond1 -> PR_IF ( mega_exp ) { .)
    PR_calculaBinomial reduce using rule 44 (cond1 -> PR_IF ( mega_exp ) { .)
    PR_calculaNormal reduce using rule 44 (cond1 -> PR_IF ( mega_exp ) { .)
    }               reduce using rule 44 (cond1 -> PR_IF ( mega_exp ) { .)


state 187

    (5) index -> [ CTEI ] [ CTEI . ]

    ]               shift and go to state 191


state 188

    (42) loop -> PR_REPEAT ( mega_exp ) { more_bloques . }

    }               shift and go to state 192


state 189

    (49) do_else -> more_bloques } .

    PR_REPEAT       reduce using rule 49 (do_else -> more_bloques } .)
    PR_RETURN       reduce using rule 49 (do_else -> more_bloques } .)
    PR_READ         reduce using rule 49 (do_else -> more_bloques } .)
    PR_PRINT        reduce using rule 49 (do_else -> more_bloques } .)
    ID              reduce using rule 49 (do_else -> more_bloques } .)
    PR_IF           reduce using rule 49 (do_else -> more_bloques } .)
    PR_calculaRegresion reduce using rule 49 (do_else -> more_bloques } .)
    PR_prediceResultado reduce using rule 49 (do_else -> more_bloques } .)
    PR_calculaModa  reduce using rule 49 (do_else -> more_bloques } .)
    PR_calculaMediana reduce using rule 49 (do_else -> more_bloques } .)
    PR_calculaMedia reduce using rule 49 (do_else -> more_bloques } .)
    PR_calculaPoisson reduce using rule 49 (do_else -> more_bloques } .)
    PR_calculaBinomial reduce using rule 49 (do_else -> more_bloques } .)
    PR_calculaNormal reduce using rule 49 (do_else -> more_bloques } .)
    }               reduce using rule 49 (do_else -> more_bloques } .)


state 190

    (40) other_index -> [ exp ] [ exp . ]

    ]               shift and go to state 193


state 191

    (5) index -> [ CTEI ] [ CTEI ] .

    PR_VAR          reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_FUNCTION     reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_MAIN         reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_REPEAT       reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_RETURN       reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_READ         reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_PRINT        reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    ID              reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_IF           reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_calculaRegresion reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_prediceResultado reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_calculaModa  reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_calculaMediana reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_calculaMedia reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_calculaPoisson reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_calculaBinomial reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_calculaNormal reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    }               reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_INT          reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_FLOAT        reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_BOOL         reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    PR_STRING       reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)
    )               reduce using rule 5 (index -> [ CTEI ] [ CTEI ] .)


state 192

    (42) loop -> PR_REPEAT ( mega_exp ) { more_bloques } .

    PR_REPEAT       reduce using rule 42 (loop -> PR_REPEAT ( mega_exp ) { more_bloques } .)
    PR_RETURN       reduce using rule 42 (loop -> PR_REPEAT ( mega_exp ) { more_bloques } .)
    PR_READ         reduce using rule 42 (loop -> PR_REPEAT ( mega_exp ) { more_bloques } .)
    PR_PRINT        reduce using rule 42 (loop -> PR_REPEAT ( mega_exp ) { more_bloques } .)
    ID              reduce using rule 42 (loop -> PR_REPEAT ( mega_exp ) { more_bloques } .)
    PR_IF           reduce using rule 42 (loop -> PR_REPEAT ( mega_exp ) { more_bloques } .)
    PR_calculaRegresion reduce using rule 42 (loop -> PR_REPEAT ( mega_exp ) { more_bloques } .)
    PR_prediceResultado reduce using rule 42 (loop -> PR_REPEAT ( mega_exp ) { more_bloques } .)
    PR_calculaModa  reduce using rule 42 (loop -> PR_REPEAT ( mega_exp ) { more_bloques } .)
    PR_calculaMediana reduce using rule 42 (loop -> PR_REPEAT ( mega_exp ) { more_bloques } .)
    PR_calculaMedia reduce using rule 42 (loop -> PR_REPEAT ( mega_exp ) { more_bloques } .)
    PR_calculaPoisson reduce using rule 42 (loop -> PR_REPEAT ( mega_exp ) { more_bloques } .)
    PR_calculaBinomial reduce using rule 42 (loop -> PR_REPEAT ( mega_exp ) { more_bloques } .)
    PR_calculaNormal reduce using rule 42 (loop -> PR_REPEAT ( mega_exp ) { more_bloques } .)
    }               reduce using rule 42 (loop -> PR_REPEAT ( mega_exp ) { more_bloques } .)


state 193

    (40) other_index -> [ exp ] [ exp ] .

    =               reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    *               reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    /               reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    +               reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    -               reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    )               reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    <               reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    >               reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    LE              reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    GE              reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    EQ              reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    NEQ             reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    PR_AND          reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    PR_OR           reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    PR_NOT          reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    PR_REPEAT       reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    PR_RETURN       reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    PR_READ         reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    PR_PRINT        reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    ID              reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    PR_IF           reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    PR_calculaRegresion reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    PR_prediceResultado reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    PR_calculaModa  reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    PR_calculaMediana reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    PR_calculaMedia reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    PR_calculaPoisson reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    PR_calculaBinomial reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    PR_calculaNormal reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    }               reduce using rule 40 (other_index -> [ exp ] [ exp ] .)
    ]               reduce using rule 40 (other_index -> [ exp ] [ exp ] .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PR_NOT in state 49 resolved as shift
WARNING: shift/reduce conflict for + in state 53 resolved as shift
WARNING: shift/reduce conflict for - in state 53 resolved as shift
WARNING: shift/reduce conflict for PR_NOT in state 73 resolved as shift
WARNING: shift/reduce conflict for PR_NOT in state 74 resolved as shift
WARNING: shift/reduce conflict for + in state 78 resolved as shift
WARNING: shift/reduce conflict for - in state 78 resolved as shift
WARNING: shift/reduce conflict for ID in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_calculaRegresion in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_prediceResultado in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_calculaModa in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_calculaMediana in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_calculaMedia in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_calculaPoisson in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_calculaBinomial in state 78 resolved as shift
WARNING: shift/reduce conflict for PR_calculaNormal in state 78 resolved as shift
WARNING: shift/reduce conflict for + in state 84 resolved as shift
WARNING: shift/reduce conflict for - in state 84 resolved as shift
WARNING: shift/reduce conflict for PR_NOT in state 86 resolved as shift
WARNING: shift/reduce conflict for ID in state 90 resolved as shift
WARNING: shift/reduce conflict for PR_calculaRegresion in state 90 resolved as shift
WARNING: shift/reduce conflict for PR_prediceResultado in state 90 resolved as shift
WARNING: shift/reduce conflict for PR_calculaModa in state 90 resolved as shift
WARNING: shift/reduce conflict for PR_calculaMediana in state 90 resolved as shift
WARNING: shift/reduce conflict for PR_calculaMedia in state 90 resolved as shift
WARNING: shift/reduce conflict for PR_calculaPoisson in state 90 resolved as shift
WARNING: shift/reduce conflict for PR_calculaBinomial in state 90 resolved as shift
WARNING: shift/reduce conflict for PR_calculaNormal in state 90 resolved as shift
WARNING: shift/reduce conflict for ID in state 91 resolved as shift
WARNING: shift/reduce conflict for PR_calculaRegresion in state 91 resolved as shift
WARNING: shift/reduce conflict for PR_prediceResultado in state 91 resolved as shift
WARNING: shift/reduce conflict for PR_calculaModa in state 91 resolved as shift
WARNING: shift/reduce conflict for PR_calculaMediana in state 91 resolved as shift
WARNING: shift/reduce conflict for PR_calculaMedia in state 91 resolved as shift
WARNING: shift/reduce conflict for PR_calculaPoisson in state 91 resolved as shift
WARNING: shift/reduce conflict for PR_calculaBinomial in state 91 resolved as shift
WARNING: shift/reduce conflict for PR_calculaNormal in state 91 resolved as shift
WARNING: shift/reduce conflict for + in state 93 resolved as shift
WARNING: shift/reduce conflict for - in state 93 resolved as shift
WARNING: shift/reduce conflict for PR_NOT in state 104 resolved as shift
WARNING: shift/reduce conflict for + in state 105 resolved as shift
WARNING: shift/reduce conflict for - in state 105 resolved as shift
WARNING: shift/reduce conflict for + in state 106 resolved as shift
WARNING: shift/reduce conflict for - in state 106 resolved as shift
WARNING: shift/reduce conflict for + in state 107 resolved as shift
WARNING: shift/reduce conflict for - in state 107 resolved as shift
WARNING: shift/reduce conflict for + in state 108 resolved as shift
WARNING: shift/reduce conflict for - in state 108 resolved as shift
WARNING: shift/reduce conflict for + in state 109 resolved as shift
WARNING: shift/reduce conflict for - in state 109 resolved as shift
WARNING: shift/reduce conflict for + in state 110 resolved as shift
WARNING: shift/reduce conflict for - in state 110 resolved as shift
WARNING: shift/reduce conflict for + in state 111 resolved as shift
WARNING: shift/reduce conflict for - in state 111 resolved as shift
WARNING: shift/reduce conflict for + in state 112 resolved as shift
WARNING: shift/reduce conflict for - in state 112 resolved as shift
WARNING: shift/reduce conflict for + in state 126 resolved as shift
WARNING: shift/reduce conflict for - in state 126 resolved as shift
WARNING: shift/reduce conflict for ID in state 126 resolved as shift
WARNING: shift/reduce conflict for PR_calculaRegresion in state 126 resolved as shift
WARNING: shift/reduce conflict for PR_prediceResultado in state 126 resolved as shift
WARNING: shift/reduce conflict for PR_calculaModa in state 126 resolved as shift
WARNING: shift/reduce conflict for PR_calculaMediana in state 126 resolved as shift
WARNING: shift/reduce conflict for PR_calculaMedia in state 126 resolved as shift
WARNING: shift/reduce conflict for PR_calculaPoisson in state 126 resolved as shift
WARNING: shift/reduce conflict for PR_calculaBinomial in state 126 resolved as shift
WARNING: shift/reduce conflict for PR_calculaNormal in state 126 resolved as shift
WARNING: shift/reduce conflict for + in state 127 resolved as shift
WARNING: shift/reduce conflict for - in state 127 resolved as shift
WARNING: shift/reduce conflict for ID in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_calculaRegresion in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_prediceResultado in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_calculaModa in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_calculaMediana in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_calculaMedia in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_calculaPoisson in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_calculaBinomial in state 127 resolved as shift
WARNING: shift/reduce conflict for PR_calculaNormal in state 127 resolved as shift
WARNING: shift/reduce conflict for + in state 130 resolved as shift
WARNING: shift/reduce conflict for - in state 130 resolved as shift
WARNING: shift/reduce conflict for ID in state 130 resolved as shift
WARNING: shift/reduce conflict for PR_calculaRegresion in state 130 resolved as shift
WARNING: shift/reduce conflict for PR_prediceResultado in state 130 resolved as shift
WARNING: shift/reduce conflict for PR_calculaModa in state 130 resolved as shift
WARNING: shift/reduce conflict for PR_calculaMediana in state 130 resolved as shift
WARNING: shift/reduce conflict for PR_calculaMedia in state 130 resolved as shift
WARNING: shift/reduce conflict for PR_calculaPoisson in state 130 resolved as shift
WARNING: shift/reduce conflict for PR_calculaBinomial in state 130 resolved as shift
WARNING: shift/reduce conflict for PR_calculaNormal in state 130 resolved as shift
WARNING: shift/reduce conflict for + in state 131 resolved as shift
WARNING: shift/reduce conflict for - in state 131 resolved as shift
WARNING: shift/reduce conflict for ID in state 131 resolved as shift
WARNING: shift/reduce conflict for PR_calculaRegresion in state 131 resolved as shift
WARNING: shift/reduce conflict for PR_prediceResultado in state 131 resolved as shift
WARNING: shift/reduce conflict for PR_calculaModa in state 131 resolved as shift
WARNING: shift/reduce conflict for PR_calculaMediana in state 131 resolved as shift
WARNING: shift/reduce conflict for PR_calculaMedia in state 131 resolved as shift
WARNING: shift/reduce conflict for PR_calculaPoisson in state 131 resolved as shift
WARNING: shift/reduce conflict for PR_calculaBinomial in state 131 resolved as shift
WARNING: shift/reduce conflict for PR_calculaNormal in state 131 resolved as shift
WARNING: shift/reduce conflict for PR_NOT in state 150 resolved as shift
WARNING: shift/reduce conflict for + in state 154 resolved as shift
WARNING: shift/reduce conflict for - in state 154 resolved as shift
WARNING: shift/reduce conflict for ID in state 154 resolved as shift
WARNING: shift/reduce conflict for PR_calculaRegresion in state 154 resolved as shift
WARNING: shift/reduce conflict for PR_prediceResultado in state 154 resolved as shift
WARNING: shift/reduce conflict for PR_calculaModa in state 154 resolved as shift
WARNING: shift/reduce conflict for PR_calculaMediana in state 154 resolved as shift
WARNING: shift/reduce conflict for PR_calculaMedia in state 154 resolved as shift
WARNING: shift/reduce conflict for PR_calculaPoisson in state 154 resolved as shift
WARNING: shift/reduce conflict for PR_calculaBinomial in state 154 resolved as shift
WARNING: shift/reduce conflict for PR_calculaNormal in state 154 resolved as shift
WARNING: shift/reduce conflict for + in state 185 resolved as shift
WARNING: shift/reduce conflict for - in state 185 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (more_vars -> vars)
WARNING: rejected rule (empty -> <empty>) in state 5
WARNING: reduce/reduce conflict in state 9 resolved using rule (more_funcs -> func)
WARNING: rejected rule (empty -> <empty>) in state 9
WARNING: reduce/reduce conflict in state 28 resolved using rule (more_ids -> ids)
WARNING: rejected rule (empty -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 37 resolved using rule (more_bloques -> bloque)
WARNING: rejected rule (empty -> <empty>) in state 37
