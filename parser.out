Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PR_calculaBinomial
    PR_calculaMedia
    PR_calculaMediana
    PR_calculaModa
    PR_calculaNormal
    PR_calculaPoisson
    PR_calculaRegresion
    PR_prediceResultado
    TO_DIGIT

Grammar

Rule 0     S' -> prog
Rule 1     prog -> PR_program TO_LLAABRE declare mainBlock TO_LLACIERRA
Rule 2     val -> TO_INT
Rule 3     val -> TO_FLOAT
Rule 4     val -> PR_true
Rule 5     val -> PR_false
Rule 6     val -> ID
Rule 7     val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
Rule 8     declare -> decVar decFunc
Rule 9     decVar -> var decVar
Rule 10    decVar -> empty
Rule 11    decFunc -> func decFunc
Rule 12    decFunc -> empty
Rule 13    var -> var1 arrayCreate
Rule 14    var1 -> PR_var tipo ID
Rule 15    arrayCreate -> firstCreate moreDimCreate TO_CORCIERRA
Rule 16    arrayCreate -> empty
Rule 17    firstCreate -> TO_CORABRE TO_INT
Rule 18    moreDimCreate -> unaDimCreate moreDimCreate
Rule 19    moreDimCreate -> empty
Rule 20    unaDimCreate -> TO_COMA TO_INT
Rule 21    tipo -> PR_int
Rule 22    tipo -> PR_float
Rule 23    tipo -> PR_bool
Rule 24    assign -> assignTo OP_IGUAL megaExp
Rule 25    assignTo -> ID
Rule 26    assignTo -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
Rule 27    firstIndex -> ID TO_CORABRE exp
Rule 28    moreDimIndex -> unaDim moreDimIndex
Rule 29    moreDimIndex -> empty
Rule 30    unaDim -> TO_COMA exp
Rule 31    func -> func1 func2
Rule 32    func1 -> func11 func12
Rule 33    func11 -> PR_function decideType ID TO_PARABRE
Rule 34    func12 -> params TO_PARCIERRA TO_LLAABRE
Rule 35    func2 -> decVar bloque TO_LLACIERRA
Rule 36    decideType -> tipo
Rule 37    decideType -> PR_void
Rule 38    params -> tipo ID moreParams
Rule 39    params -> empty
Rule 40    moreParams -> TO_COMA tipo ID moreParams
Rule 41    moreParams -> empty
Rule 42    mainBlock -> mainBlock1 bloque TO_LLACIERRA
Rule 43    mainBlock1 -> PR_main TO_LLAABRE
Rule 44    opLogico -> PR_interseccion
Rule 45    opLogico -> PR_union
Rule 46    loop -> loop1 loop2 loop3
Rule 47    loop1 -> PR_loop
Rule 48    loop2 -> TO_PARABRE exp TO_PARCIERRA
Rule 49    loop3 -> TO_LLAABRE bloque TO_LLACIERRA
Rule 50    opRelacional -> OP_DOBLEIGUAL
Rule 51    opRelacional -> OP_DIFDE
Rule 52    opRelacional -> OP_MENORQUE
Rule 53    opRelacional -> OP_MENOROIGUAL
Rule 54    opRelacional -> OP_MAYORQUE
Rule 55    opRelacional -> OP_MAYOROIGUAL
Rule 56    bloque -> estructura bloque
Rule 57    bloque -> PR_end
Rule 58    estructura -> assign
Rule 59    estructura -> loop
Rule 60    estructura -> comparacion
Rule 61    estructura -> return
Rule 62    estructura -> funcCall
Rule 63    estructura -> decVar
Rule 64    estructura -> write
Rule 65    funcCall -> funcCall1 funcCall2
Rule 66    write -> PR_print TO_PARABRE superExp action TO_PARCIERRA
Rule 67    action -> empty
Rule 68    funcCall1 -> ID TO_PARABRE
Rule 69    funcCall2 -> paramVals TO_PARCIERRA
Rule 70    bool -> PR_true
Rule 71    bool -> PR_false
Rule 72    paramVals -> unParam moreParamVals
Rule 73    paramVals -> empty
Rule 74    moreParamVals -> TO_COMA unParam moreParamVals
Rule 75    moreParamVals -> empty
Rule 76    unParam -> ID TO_DOSPTOS megaExp
Rule 77    return -> PR_return megaExp
Rule 78    comparacion -> compara1 compara2
Rule 79    compara1 -> PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE
Rule 80    compara2 -> bloque TO_LLACIERRA maybeElse
Rule 81    maybeElse -> checkElse doElse
Rule 82    maybeElse -> empty
Rule 83    checkElse -> PR_else TO_LLAABRE
Rule 84    doElse -> bloque TO_LLACIERRA
Rule 85    megaExp -> maybeNot superExp anotherMega
Rule 86    maybeNot -> PR_negacion
Rule 87    maybeNot -> empty
Rule 88    anotherMega -> opLogico megaExp
Rule 89    anotherMega -> empty
Rule 90    superExp -> exp maybeRel
Rule 91    maybeRel -> opRelacional exp
Rule 92    maybeRel -> empty
Rule 93    exp -> term anotherExp
Rule 94    anotherExp -> OP_MAS exp
Rule 95    anotherExp -> OP_MENOS exp
Rule 96    anotherExp -> empty
Rule 97    term -> fact anotherTerm
Rule 98    anotherTerm -> OP_MULT term
Rule 99    anotherTerm -> OP_DIV term
Rule 100   anotherTerm -> OP_RESID term
Rule 101   anotherTerm -> empty
Rule 102   fact -> TO_PARABRE megaExp TO_PARCIERRA
Rule 103   fact -> funcCall
Rule 104   fact -> val
Rule 105   empty -> <empty>

Terminals, with rules where they appear

ID                   : 6 14 25 27 33 38 40 68 76
OP_DIFDE             : 51
OP_DIV               : 99
OP_DOBLEIGUAL        : 50
OP_IGUAL             : 24
OP_MAS               : 94
OP_MAYOROIGUAL       : 55
OP_MAYORQUE          : 54
OP_MENOROIGUAL       : 53
OP_MENORQUE          : 52
OP_MENOS             : 95
OP_MULT              : 98
OP_RESID             : 100
PR_arreglo           : 7 26
PR_bool              : 23
PR_calculaBinomial   : 
PR_calculaMedia      : 
PR_calculaMediana    : 
PR_calculaModa       : 
PR_calculaNormal     : 
PR_calculaPoisson    : 
PR_calculaRegresion  : 
PR_else              : 83
PR_end               : 57
PR_false             : 5 71
PR_float             : 22
PR_function          : 33
PR_if                : 79
PR_int               : 21
PR_interseccion      : 44
PR_loop              : 47
PR_main              : 43
PR_negacion          : 86
PR_prediceResultado  : 
PR_print             : 66
PR_program           : 1
PR_return            : 77
PR_true              : 4 70
PR_union             : 45
PR_var               : 14
PR_void              : 37
TO_COMA              : 20 30 40 74
TO_CORABRE           : 17 27
TO_CORCIERRA         : 7 15 26
TO_DIGIT             : 
TO_DOSPTOS           : 76
TO_FLOAT             : 3
TO_INT               : 2 17 20
TO_LLAABRE           : 1 34 43 49 79 83
TO_LLACIERRA         : 1 35 42 49 80 84
TO_PARABRE           : 33 48 66 68 79 102
TO_PARCIERRA         : 34 48 66 69 79 102
error                : 

Nonterminals, with rules where they appear

action               : 66
anotherExp           : 93
anotherMega          : 85
anotherTerm          : 97
arrayCreate          : 13
assign               : 58
assignTo             : 24
bloque               : 35 42 49 56 80 84
bool                 : 
checkElse            : 81
compara1             : 78
compara2             : 78
comparacion          : 60
decFunc              : 8 11
decVar               : 8 9 35 63
decideType           : 33
declare              : 1
doElse               : 81
empty                : 10 12 16 19 29 39 41 67 73 75 82 87 89 92 96 101
estructura           : 56
exp                  : 27 30 48 90 91 94 95
fact                 : 97
firstCreate          : 15
firstIndex           : 7 26
func                 : 11
func1                : 31
func11               : 32
func12               : 32
func2                : 31
funcCall             : 62 103
funcCall1            : 65
funcCall2            : 65
loop                 : 59
loop1                : 46
loop2                : 46
loop3                : 46
mainBlock            : 1
mainBlock1           : 42
maybeElse            : 80
maybeNot             : 85
maybeRel             : 90
megaExp              : 24 76 77 79 88 102
moreDimCreate        : 15 18
moreDimIndex         : 7 26 28
moreParamVals        : 72 74
moreParams           : 38 40
opLogico             : 88
opRelacional         : 91
paramVals            : 69
params               : 34
prog                 : 0
return               : 61
superExp             : 66 85
term                 : 93 98 99 100
tipo                 : 14 36 38 40
unParam              : 72 74
unaDim               : 28
unaDimCreate         : 18
val                  : 104
var                  : 9
var1                 : 13
write                : 64

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . PR_program TO_LLAABRE declare mainBlock TO_LLACIERRA

    PR_program      shift and go to state 2

    prog                           shift and go to state 1

state 1

    (0) S' -> prog .



state 2

    (1) prog -> PR_program . TO_LLAABRE declare mainBlock TO_LLACIERRA

    TO_LLAABRE      shift and go to state 3


state 3

    (1) prog -> PR_program TO_LLAABRE . declare mainBlock TO_LLACIERRA
    (8) declare -> . decVar decFunc
    (9) decVar -> . var decVar
    (10) decVar -> . empty
    (13) var -> . var1 arrayCreate
    (105) empty -> .
    (14) var1 -> . PR_var tipo ID

    PR_function     reduce using rule 105 (empty -> .)
    PR_main         reduce using rule 105 (empty -> .)
    PR_var          shift and go to state 9

    declare                        shift and go to state 4
    decVar                         shift and go to state 5
    var                            shift and go to state 6
    empty                          shift and go to state 7
    var1                           shift and go to state 8

state 4

    (1) prog -> PR_program TO_LLAABRE declare . mainBlock TO_LLACIERRA
    (42) mainBlock -> . mainBlock1 bloque TO_LLACIERRA
    (43) mainBlock1 -> . PR_main TO_LLAABRE

    PR_main         shift and go to state 12

    mainBlock                      shift and go to state 10
    mainBlock1                     shift and go to state 11

state 5

    (8) declare -> decVar . decFunc
    (11) decFunc -> . func decFunc
    (12) decFunc -> . empty
    (31) func -> . func1 func2
    (105) empty -> .
    (32) func1 -> . func11 func12
    (33) func11 -> . PR_function decideType ID TO_PARABRE

    PR_main         reduce using rule 105 (empty -> .)
    PR_function     shift and go to state 18

    decFunc                        shift and go to state 13
    func                           shift and go to state 14
    empty                          shift and go to state 15
    func1                          shift and go to state 16
    func11                         shift and go to state 17

state 6

    (9) decVar -> var . decVar
    (9) decVar -> . var decVar
    (10) decVar -> . empty
    (13) var -> . var1 arrayCreate
    (105) empty -> .
    (14) var1 -> . PR_var tipo ID

  ! shift/reduce conflict for PR_var resolved as shift
    PR_function     reduce using rule 105 (empty -> .)
    PR_main         reduce using rule 105 (empty -> .)
    PR_end          reduce using rule 105 (empty -> .)
    PR_return       reduce using rule 105 (empty -> .)
    PR_print        reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PR_arreglo      reduce using rule 105 (empty -> .)
    PR_loop         reduce using rule 105 (empty -> .)
    PR_if           reduce using rule 105 (empty -> .)
    PR_var          shift and go to state 9

  ! PR_var          [ reduce using rule 105 (empty -> .) ]

    var                            shift and go to state 6
    decVar                         shift and go to state 19
    empty                          shift and go to state 7
    var1                           shift and go to state 8

state 7

    (10) decVar -> empty .

    PR_function     reduce using rule 10 (decVar -> empty .)
    PR_main         reduce using rule 10 (decVar -> empty .)
    PR_end          reduce using rule 10 (decVar -> empty .)
    PR_return       reduce using rule 10 (decVar -> empty .)
    PR_print        reduce using rule 10 (decVar -> empty .)
    ID              reduce using rule 10 (decVar -> empty .)
    PR_arreglo      reduce using rule 10 (decVar -> empty .)
    PR_loop         reduce using rule 10 (decVar -> empty .)
    PR_if           reduce using rule 10 (decVar -> empty .)
    PR_var          reduce using rule 10 (decVar -> empty .)


state 8

    (13) var -> var1 . arrayCreate
    (15) arrayCreate -> . firstCreate moreDimCreate TO_CORCIERRA
    (16) arrayCreate -> . empty
    (17) firstCreate -> . TO_CORABRE TO_INT
    (105) empty -> .

    TO_CORABRE      shift and go to state 23
    PR_var          reduce using rule 105 (empty -> .)
    PR_function     reduce using rule 105 (empty -> .)
    PR_main         reduce using rule 105 (empty -> .)
    PR_end          reduce using rule 105 (empty -> .)
    PR_return       reduce using rule 105 (empty -> .)
    PR_print        reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PR_arreglo      reduce using rule 105 (empty -> .)
    PR_loop         reduce using rule 105 (empty -> .)
    PR_if           reduce using rule 105 (empty -> .)

    arrayCreate                    shift and go to state 20
    firstCreate                    shift and go to state 21
    empty                          shift and go to state 22

state 9

    (14) var1 -> PR_var . tipo ID
    (21) tipo -> . PR_int
    (22) tipo -> . PR_float
    (23) tipo -> . PR_bool

    PR_int          shift and go to state 25
    PR_float        shift and go to state 26
    PR_bool         shift and go to state 27

    tipo                           shift and go to state 24

state 10

    (1) prog -> PR_program TO_LLAABRE declare mainBlock . TO_LLACIERRA

    TO_LLACIERRA    shift and go to state 28


state 11

    (42) mainBlock -> mainBlock1 . bloque TO_LLACIERRA
    (56) bloque -> . estructura bloque
    (57) bloque -> . PR_end
    (58) estructura -> . assign
    (59) estructura -> . loop
    (60) estructura -> . comparacion
    (61) estructura -> . return
    (62) estructura -> . funcCall
    (63) estructura -> . decVar
    (64) estructura -> . write
    (24) assign -> . assignTo OP_IGUAL megaExp
    (46) loop -> . loop1 loop2 loop3
    (78) comparacion -> . compara1 compara2
    (77) return -> . PR_return megaExp
    (65) funcCall -> . funcCall1 funcCall2
    (9) decVar -> . var decVar
    (10) decVar -> . empty
    (66) write -> . PR_print TO_PARABRE superExp action TO_PARCIERRA
    (25) assignTo -> . ID
    (26) assignTo -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (47) loop1 -> . PR_loop
    (79) compara1 -> . PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE
    (68) funcCall1 -> . ID TO_PARABRE
    (13) var -> . var1 arrayCreate
    (105) empty -> .
    (14) var1 -> . PR_var tipo ID

  ! shift/reduce conflict for PR_end resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_print resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_arreglo resolved as shift
  ! shift/reduce conflict for PR_loop resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_var resolved as shift
    PR_end          shift and go to state 31
    PR_return       shift and go to state 42
    PR_print        shift and go to state 44
    ID              shift and go to state 45
    PR_arreglo      shift and go to state 46
    PR_loop         shift and go to state 47
    PR_if           shift and go to state 48
    PR_var          shift and go to state 9

  ! PR_end          [ reduce using rule 105 (empty -> .) ]
  ! PR_return       [ reduce using rule 105 (empty -> .) ]
  ! PR_print        [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! PR_arreglo      [ reduce using rule 105 (empty -> .) ]
  ! PR_loop         [ reduce using rule 105 (empty -> .) ]
  ! PR_if           [ reduce using rule 105 (empty -> .) ]
  ! PR_var          [ reduce using rule 105 (empty -> .) ]

    bloque                         shift and go to state 29
    estructura                     shift and go to state 30
    assign                         shift and go to state 32
    loop                           shift and go to state 33
    comparacion                    shift and go to state 34
    return                         shift and go to state 35
    funcCall                       shift and go to state 36
    decVar                         shift and go to state 37
    write                          shift and go to state 38
    assignTo                       shift and go to state 39
    loop1                          shift and go to state 40
    compara1                       shift and go to state 41
    funcCall1                      shift and go to state 43
    var                            shift and go to state 6
    empty                          shift and go to state 7
    var1                           shift and go to state 8

state 12

    (43) mainBlock1 -> PR_main . TO_LLAABRE

    TO_LLAABRE      shift and go to state 49


state 13

    (8) declare -> decVar decFunc .

    PR_main         reduce using rule 8 (declare -> decVar decFunc .)


state 14

    (11) decFunc -> func . decFunc
    (11) decFunc -> . func decFunc
    (12) decFunc -> . empty
    (31) func -> . func1 func2
    (105) empty -> .
    (32) func1 -> . func11 func12
    (33) func11 -> . PR_function decideType ID TO_PARABRE

    PR_main         reduce using rule 105 (empty -> .)
    PR_function     shift and go to state 18

    func                           shift and go to state 14
    decFunc                        shift and go to state 50
    empty                          shift and go to state 15
    func1                          shift and go to state 16
    func11                         shift and go to state 17

state 15

    (12) decFunc -> empty .

    PR_main         reduce using rule 12 (decFunc -> empty .)


state 16

    (31) func -> func1 . func2
    (35) func2 -> . decVar bloque TO_LLACIERRA
    (9) decVar -> . var decVar
    (10) decVar -> . empty
    (13) var -> . var1 arrayCreate
    (105) empty -> .
    (14) var1 -> . PR_var tipo ID

  ! shift/reduce conflict for PR_var resolved as shift
    PR_end          reduce using rule 105 (empty -> .)
    PR_return       reduce using rule 105 (empty -> .)
    PR_print        reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PR_arreglo      reduce using rule 105 (empty -> .)
    PR_loop         reduce using rule 105 (empty -> .)
    PR_if           reduce using rule 105 (empty -> .)
    PR_var          shift and go to state 9

  ! PR_var          [ reduce using rule 105 (empty -> .) ]

    func2                          shift and go to state 51
    decVar                         shift and go to state 52
    var                            shift and go to state 6
    empty                          shift and go to state 7
    var1                           shift and go to state 8

state 17

    (32) func1 -> func11 . func12
    (34) func12 -> . params TO_PARCIERRA TO_LLAABRE
    (38) params -> . tipo ID moreParams
    (39) params -> . empty
    (21) tipo -> . PR_int
    (22) tipo -> . PR_float
    (23) tipo -> . PR_bool
    (105) empty -> .

    PR_int          shift and go to state 25
    PR_float        shift and go to state 26
    PR_bool         shift and go to state 27
    TO_PARCIERRA    reduce using rule 105 (empty -> .)

    func12                         shift and go to state 53
    params                         shift and go to state 54
    tipo                           shift and go to state 55
    empty                          shift and go to state 56

state 18

    (33) func11 -> PR_function . decideType ID TO_PARABRE
    (36) decideType -> . tipo
    (37) decideType -> . PR_void
    (21) tipo -> . PR_int
    (22) tipo -> . PR_float
    (23) tipo -> . PR_bool

    PR_void         shift and go to state 59
    PR_int          shift and go to state 25
    PR_float        shift and go to state 26
    PR_bool         shift and go to state 27

    decideType                     shift and go to state 57
    tipo                           shift and go to state 58

state 19

    (9) decVar -> var decVar .

    PR_function     reduce using rule 9 (decVar -> var decVar .)
    PR_main         reduce using rule 9 (decVar -> var decVar .)
    PR_end          reduce using rule 9 (decVar -> var decVar .)
    PR_return       reduce using rule 9 (decVar -> var decVar .)
    PR_print        reduce using rule 9 (decVar -> var decVar .)
    ID              reduce using rule 9 (decVar -> var decVar .)
    PR_arreglo      reduce using rule 9 (decVar -> var decVar .)
    PR_loop         reduce using rule 9 (decVar -> var decVar .)
    PR_if           reduce using rule 9 (decVar -> var decVar .)
    PR_var          reduce using rule 9 (decVar -> var decVar .)


state 20

    (13) var -> var1 arrayCreate .

    PR_var          reduce using rule 13 (var -> var1 arrayCreate .)
    PR_function     reduce using rule 13 (var -> var1 arrayCreate .)
    PR_main         reduce using rule 13 (var -> var1 arrayCreate .)
    PR_end          reduce using rule 13 (var -> var1 arrayCreate .)
    PR_return       reduce using rule 13 (var -> var1 arrayCreate .)
    PR_print        reduce using rule 13 (var -> var1 arrayCreate .)
    ID              reduce using rule 13 (var -> var1 arrayCreate .)
    PR_arreglo      reduce using rule 13 (var -> var1 arrayCreate .)
    PR_loop         reduce using rule 13 (var -> var1 arrayCreate .)
    PR_if           reduce using rule 13 (var -> var1 arrayCreate .)


state 21

    (15) arrayCreate -> firstCreate . moreDimCreate TO_CORCIERRA
    (18) moreDimCreate -> . unaDimCreate moreDimCreate
    (19) moreDimCreate -> . empty
    (20) unaDimCreate -> . TO_COMA TO_INT
    (105) empty -> .

    TO_COMA         shift and go to state 63
    TO_CORCIERRA    reduce using rule 105 (empty -> .)

    moreDimCreate                  shift and go to state 60
    unaDimCreate                   shift and go to state 61
    empty                          shift and go to state 62

state 22

    (16) arrayCreate -> empty .

    PR_var          reduce using rule 16 (arrayCreate -> empty .)
    PR_function     reduce using rule 16 (arrayCreate -> empty .)
    PR_main         reduce using rule 16 (arrayCreate -> empty .)
    PR_end          reduce using rule 16 (arrayCreate -> empty .)
    PR_return       reduce using rule 16 (arrayCreate -> empty .)
    PR_print        reduce using rule 16 (arrayCreate -> empty .)
    ID              reduce using rule 16 (arrayCreate -> empty .)
    PR_arreglo      reduce using rule 16 (arrayCreate -> empty .)
    PR_loop         reduce using rule 16 (arrayCreate -> empty .)
    PR_if           reduce using rule 16 (arrayCreate -> empty .)


state 23

    (17) firstCreate -> TO_CORABRE . TO_INT

    TO_INT          shift and go to state 64


state 24

    (14) var1 -> PR_var tipo . ID

    ID              shift and go to state 65


state 25

    (21) tipo -> PR_int .

    ID              reduce using rule 21 (tipo -> PR_int .)


state 26

    (22) tipo -> PR_float .

    ID              reduce using rule 22 (tipo -> PR_float .)


state 27

    (23) tipo -> PR_bool .

    ID              reduce using rule 23 (tipo -> PR_bool .)


state 28

    (1) prog -> PR_program TO_LLAABRE declare mainBlock TO_LLACIERRA .

    $end            reduce using rule 1 (prog -> PR_program TO_LLAABRE declare mainBlock TO_LLACIERRA .)


state 29

    (42) mainBlock -> mainBlock1 bloque . TO_LLACIERRA

    TO_LLACIERRA    shift and go to state 66


state 30

    (56) bloque -> estructura . bloque
    (56) bloque -> . estructura bloque
    (57) bloque -> . PR_end
    (58) estructura -> . assign
    (59) estructura -> . loop
    (60) estructura -> . comparacion
    (61) estructura -> . return
    (62) estructura -> . funcCall
    (63) estructura -> . decVar
    (64) estructura -> . write
    (24) assign -> . assignTo OP_IGUAL megaExp
    (46) loop -> . loop1 loop2 loop3
    (78) comparacion -> . compara1 compara2
    (77) return -> . PR_return megaExp
    (65) funcCall -> . funcCall1 funcCall2
    (9) decVar -> . var decVar
    (10) decVar -> . empty
    (66) write -> . PR_print TO_PARABRE superExp action TO_PARCIERRA
    (25) assignTo -> . ID
    (26) assignTo -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (47) loop1 -> . PR_loop
    (79) compara1 -> . PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE
    (68) funcCall1 -> . ID TO_PARABRE
    (13) var -> . var1 arrayCreate
    (105) empty -> .
    (14) var1 -> . PR_var tipo ID

  ! shift/reduce conflict for PR_end resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_print resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_arreglo resolved as shift
  ! shift/reduce conflict for PR_loop resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_var resolved as shift
    PR_end          shift and go to state 31
    PR_return       shift and go to state 42
    PR_print        shift and go to state 44
    ID              shift and go to state 45
    PR_arreglo      shift and go to state 46
    PR_loop         shift and go to state 47
    PR_if           shift and go to state 48
    PR_var          shift and go to state 9

  ! PR_end          [ reduce using rule 105 (empty -> .) ]
  ! PR_return       [ reduce using rule 105 (empty -> .) ]
  ! PR_print        [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! PR_arreglo      [ reduce using rule 105 (empty -> .) ]
  ! PR_loop         [ reduce using rule 105 (empty -> .) ]
  ! PR_if           [ reduce using rule 105 (empty -> .) ]
  ! PR_var          [ reduce using rule 105 (empty -> .) ]

    estructura                     shift and go to state 30
    bloque                         shift and go to state 67
    assign                         shift and go to state 32
    loop                           shift and go to state 33
    comparacion                    shift and go to state 34
    return                         shift and go to state 35
    funcCall                       shift and go to state 36
    decVar                         shift and go to state 37
    write                          shift and go to state 38
    assignTo                       shift and go to state 39
    loop1                          shift and go to state 40
    compara1                       shift and go to state 41
    funcCall1                      shift and go to state 43
    var                            shift and go to state 6
    empty                          shift and go to state 7
    var1                           shift and go to state 8

state 31

    (57) bloque -> PR_end .

    TO_LLACIERRA    reduce using rule 57 (bloque -> PR_end .)


state 32

    (58) estructura -> assign .

    PR_end          reduce using rule 58 (estructura -> assign .)
    PR_return       reduce using rule 58 (estructura -> assign .)
    PR_print        reduce using rule 58 (estructura -> assign .)
    ID              reduce using rule 58 (estructura -> assign .)
    PR_arreglo      reduce using rule 58 (estructura -> assign .)
    PR_loop         reduce using rule 58 (estructura -> assign .)
    PR_if           reduce using rule 58 (estructura -> assign .)
    PR_var          reduce using rule 58 (estructura -> assign .)


state 33

    (59) estructura -> loop .

    PR_end          reduce using rule 59 (estructura -> loop .)
    PR_return       reduce using rule 59 (estructura -> loop .)
    PR_print        reduce using rule 59 (estructura -> loop .)
    ID              reduce using rule 59 (estructura -> loop .)
    PR_arreglo      reduce using rule 59 (estructura -> loop .)
    PR_loop         reduce using rule 59 (estructura -> loop .)
    PR_if           reduce using rule 59 (estructura -> loop .)
    PR_var          reduce using rule 59 (estructura -> loop .)


state 34

    (60) estructura -> comparacion .

    PR_end          reduce using rule 60 (estructura -> comparacion .)
    PR_return       reduce using rule 60 (estructura -> comparacion .)
    PR_print        reduce using rule 60 (estructura -> comparacion .)
    ID              reduce using rule 60 (estructura -> comparacion .)
    PR_arreglo      reduce using rule 60 (estructura -> comparacion .)
    PR_loop         reduce using rule 60 (estructura -> comparacion .)
    PR_if           reduce using rule 60 (estructura -> comparacion .)
    PR_var          reduce using rule 60 (estructura -> comparacion .)


state 35

    (61) estructura -> return .

    PR_end          reduce using rule 61 (estructura -> return .)
    PR_return       reduce using rule 61 (estructura -> return .)
    PR_print        reduce using rule 61 (estructura -> return .)
    ID              reduce using rule 61 (estructura -> return .)
    PR_arreglo      reduce using rule 61 (estructura -> return .)
    PR_loop         reduce using rule 61 (estructura -> return .)
    PR_if           reduce using rule 61 (estructura -> return .)
    PR_var          reduce using rule 61 (estructura -> return .)


state 36

    (62) estructura -> funcCall .

    PR_end          reduce using rule 62 (estructura -> funcCall .)
    PR_return       reduce using rule 62 (estructura -> funcCall .)
    PR_print        reduce using rule 62 (estructura -> funcCall .)
    ID              reduce using rule 62 (estructura -> funcCall .)
    PR_arreglo      reduce using rule 62 (estructura -> funcCall .)
    PR_loop         reduce using rule 62 (estructura -> funcCall .)
    PR_if           reduce using rule 62 (estructura -> funcCall .)
    PR_var          reduce using rule 62 (estructura -> funcCall .)


state 37

    (63) estructura -> decVar .

    PR_end          reduce using rule 63 (estructura -> decVar .)
    PR_return       reduce using rule 63 (estructura -> decVar .)
    PR_print        reduce using rule 63 (estructura -> decVar .)
    ID              reduce using rule 63 (estructura -> decVar .)
    PR_arreglo      reduce using rule 63 (estructura -> decVar .)
    PR_loop         reduce using rule 63 (estructura -> decVar .)
    PR_if           reduce using rule 63 (estructura -> decVar .)
    PR_var          reduce using rule 63 (estructura -> decVar .)


state 38

    (64) estructura -> write .

    PR_end          reduce using rule 64 (estructura -> write .)
    PR_return       reduce using rule 64 (estructura -> write .)
    PR_print        reduce using rule 64 (estructura -> write .)
    ID              reduce using rule 64 (estructura -> write .)
    PR_arreglo      reduce using rule 64 (estructura -> write .)
    PR_loop         reduce using rule 64 (estructura -> write .)
    PR_if           reduce using rule 64 (estructura -> write .)
    PR_var          reduce using rule 64 (estructura -> write .)


state 39

    (24) assign -> assignTo . OP_IGUAL megaExp

    OP_IGUAL        shift and go to state 68


state 40

    (46) loop -> loop1 . loop2 loop3
    (48) loop2 -> . TO_PARABRE exp TO_PARCIERRA

    TO_PARABRE      shift and go to state 70

    loop2                          shift and go to state 69

state 41

    (78) comparacion -> compara1 . compara2
    (80) compara2 -> . bloque TO_LLACIERRA maybeElse
    (56) bloque -> . estructura bloque
    (57) bloque -> . PR_end
    (58) estructura -> . assign
    (59) estructura -> . loop
    (60) estructura -> . comparacion
    (61) estructura -> . return
    (62) estructura -> . funcCall
    (63) estructura -> . decVar
    (64) estructura -> . write
    (24) assign -> . assignTo OP_IGUAL megaExp
    (46) loop -> . loop1 loop2 loop3
    (78) comparacion -> . compara1 compara2
    (77) return -> . PR_return megaExp
    (65) funcCall -> . funcCall1 funcCall2
    (9) decVar -> . var decVar
    (10) decVar -> . empty
    (66) write -> . PR_print TO_PARABRE superExp action TO_PARCIERRA
    (25) assignTo -> . ID
    (26) assignTo -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (47) loop1 -> . PR_loop
    (79) compara1 -> . PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE
    (68) funcCall1 -> . ID TO_PARABRE
    (13) var -> . var1 arrayCreate
    (105) empty -> .
    (14) var1 -> . PR_var tipo ID

  ! shift/reduce conflict for PR_end resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_print resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_arreglo resolved as shift
  ! shift/reduce conflict for PR_loop resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_var resolved as shift
    PR_end          shift and go to state 31
    PR_return       shift and go to state 42
    PR_print        shift and go to state 44
    ID              shift and go to state 45
    PR_arreglo      shift and go to state 46
    PR_loop         shift and go to state 47
    PR_if           shift and go to state 48
    PR_var          shift and go to state 9

  ! PR_end          [ reduce using rule 105 (empty -> .) ]
  ! PR_return       [ reduce using rule 105 (empty -> .) ]
  ! PR_print        [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! PR_arreglo      [ reduce using rule 105 (empty -> .) ]
  ! PR_loop         [ reduce using rule 105 (empty -> .) ]
  ! PR_if           [ reduce using rule 105 (empty -> .) ]
  ! PR_var          [ reduce using rule 105 (empty -> .) ]

    compara1                       shift and go to state 41
    compara2                       shift and go to state 71
    bloque                         shift and go to state 72
    estructura                     shift and go to state 30
    assign                         shift and go to state 32
    loop                           shift and go to state 33
    comparacion                    shift and go to state 34
    return                         shift and go to state 35
    funcCall                       shift and go to state 36
    decVar                         shift and go to state 37
    write                          shift and go to state 38
    assignTo                       shift and go to state 39
    loop1                          shift and go to state 40
    funcCall1                      shift and go to state 43
    var                            shift and go to state 6
    empty                          shift and go to state 7
    var1                           shift and go to state 8

state 42

    (77) return -> PR_return . megaExp
    (85) megaExp -> . maybeNot superExp anotherMega
    (86) maybeNot -> . PR_negacion
    (87) maybeNot -> . empty
    (105) empty -> .

    PR_negacion     shift and go to state 75
    TO_PARABRE      reduce using rule 105 (empty -> .)
    TO_INT          reduce using rule 105 (empty -> .)
    TO_FLOAT        reduce using rule 105 (empty -> .)
    PR_true         reduce using rule 105 (empty -> .)
    PR_false        reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PR_arreglo      reduce using rule 105 (empty -> .)

    megaExp                        shift and go to state 73
    maybeNot                       shift and go to state 74
    empty                          shift and go to state 76

state 43

    (65) funcCall -> funcCall1 . funcCall2
    (69) funcCall2 -> . paramVals TO_PARCIERRA
    (72) paramVals -> . unParam moreParamVals
    (73) paramVals -> . empty
    (76) unParam -> . ID TO_DOSPTOS megaExp
    (105) empty -> .

    ID              shift and go to state 81
    TO_PARCIERRA    reduce using rule 105 (empty -> .)

    funcCall2                      shift and go to state 77
    paramVals                      shift and go to state 78
    unParam                        shift and go to state 79
    empty                          shift and go to state 80

state 44

    (66) write -> PR_print . TO_PARABRE superExp action TO_PARCIERRA

    TO_PARABRE      shift and go to state 82


state 45

    (25) assignTo -> ID .
    (68) funcCall1 -> ID . TO_PARABRE

    OP_IGUAL        reduce using rule 25 (assignTo -> ID .)
    TO_PARABRE      shift and go to state 83


state 46

    (26) assignTo -> PR_arreglo . firstIndex moreDimIndex TO_CORCIERRA
    (27) firstIndex -> . ID TO_CORABRE exp

    ID              shift and go to state 85

    firstIndex                     shift and go to state 84

state 47

    (47) loop1 -> PR_loop .

    TO_PARABRE      reduce using rule 47 (loop1 -> PR_loop .)


state 48

    (79) compara1 -> PR_if . TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE

    TO_PARABRE      shift and go to state 86


state 49

    (43) mainBlock1 -> PR_main TO_LLAABRE .

    PR_end          reduce using rule 43 (mainBlock1 -> PR_main TO_LLAABRE .)
    PR_return       reduce using rule 43 (mainBlock1 -> PR_main TO_LLAABRE .)
    PR_print        reduce using rule 43 (mainBlock1 -> PR_main TO_LLAABRE .)
    ID              reduce using rule 43 (mainBlock1 -> PR_main TO_LLAABRE .)
    PR_arreglo      reduce using rule 43 (mainBlock1 -> PR_main TO_LLAABRE .)
    PR_loop         reduce using rule 43 (mainBlock1 -> PR_main TO_LLAABRE .)
    PR_if           reduce using rule 43 (mainBlock1 -> PR_main TO_LLAABRE .)
    PR_var          reduce using rule 43 (mainBlock1 -> PR_main TO_LLAABRE .)


state 50

    (11) decFunc -> func decFunc .

    PR_main         reduce using rule 11 (decFunc -> func decFunc .)


state 51

    (31) func -> func1 func2 .

    PR_function     reduce using rule 31 (func -> func1 func2 .)
    PR_main         reduce using rule 31 (func -> func1 func2 .)


state 52

    (35) func2 -> decVar . bloque TO_LLACIERRA
    (56) bloque -> . estructura bloque
    (57) bloque -> . PR_end
    (58) estructura -> . assign
    (59) estructura -> . loop
    (60) estructura -> . comparacion
    (61) estructura -> . return
    (62) estructura -> . funcCall
    (63) estructura -> . decVar
    (64) estructura -> . write
    (24) assign -> . assignTo OP_IGUAL megaExp
    (46) loop -> . loop1 loop2 loop3
    (78) comparacion -> . compara1 compara2
    (77) return -> . PR_return megaExp
    (65) funcCall -> . funcCall1 funcCall2
    (9) decVar -> . var decVar
    (10) decVar -> . empty
    (66) write -> . PR_print TO_PARABRE superExp action TO_PARCIERRA
    (25) assignTo -> . ID
    (26) assignTo -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (47) loop1 -> . PR_loop
    (79) compara1 -> . PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE
    (68) funcCall1 -> . ID TO_PARABRE
    (13) var -> . var1 arrayCreate
    (105) empty -> .
    (14) var1 -> . PR_var tipo ID

  ! shift/reduce conflict for PR_end resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_print resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_arreglo resolved as shift
  ! shift/reduce conflict for PR_loop resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_var resolved as shift
    PR_end          shift and go to state 31
    PR_return       shift and go to state 42
    PR_print        shift and go to state 44
    ID              shift and go to state 45
    PR_arreglo      shift and go to state 46
    PR_loop         shift and go to state 47
    PR_if           shift and go to state 48
    PR_var          shift and go to state 9

  ! PR_end          [ reduce using rule 105 (empty -> .) ]
  ! PR_return       [ reduce using rule 105 (empty -> .) ]
  ! PR_print        [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! PR_arreglo      [ reduce using rule 105 (empty -> .) ]
  ! PR_loop         [ reduce using rule 105 (empty -> .) ]
  ! PR_if           [ reduce using rule 105 (empty -> .) ]
  ! PR_var          [ reduce using rule 105 (empty -> .) ]

    decVar                         shift and go to state 37
    bloque                         shift and go to state 87
    estructura                     shift and go to state 30
    assign                         shift and go to state 32
    loop                           shift and go to state 33
    comparacion                    shift and go to state 34
    return                         shift and go to state 35
    funcCall                       shift and go to state 36
    write                          shift and go to state 38
    assignTo                       shift and go to state 39
    loop1                          shift and go to state 40
    compara1                       shift and go to state 41
    funcCall1                      shift and go to state 43
    var                            shift and go to state 6
    empty                          shift and go to state 7
    var1                           shift and go to state 8

state 53

    (32) func1 -> func11 func12 .

    PR_var          reduce using rule 32 (func1 -> func11 func12 .)
    PR_end          reduce using rule 32 (func1 -> func11 func12 .)
    PR_return       reduce using rule 32 (func1 -> func11 func12 .)
    PR_print        reduce using rule 32 (func1 -> func11 func12 .)
    ID              reduce using rule 32 (func1 -> func11 func12 .)
    PR_arreglo      reduce using rule 32 (func1 -> func11 func12 .)
    PR_loop         reduce using rule 32 (func1 -> func11 func12 .)
    PR_if           reduce using rule 32 (func1 -> func11 func12 .)


state 54

    (34) func12 -> params . TO_PARCIERRA TO_LLAABRE

    TO_PARCIERRA    shift and go to state 88


state 55

    (38) params -> tipo . ID moreParams

    ID              shift and go to state 89


state 56

    (39) params -> empty .

    TO_PARCIERRA    reduce using rule 39 (params -> empty .)


state 57

    (33) func11 -> PR_function decideType . ID TO_PARABRE

    ID              shift and go to state 90


state 58

    (36) decideType -> tipo .

    ID              reduce using rule 36 (decideType -> tipo .)


state 59

    (37) decideType -> PR_void .

    ID              reduce using rule 37 (decideType -> PR_void .)


state 60

    (15) arrayCreate -> firstCreate moreDimCreate . TO_CORCIERRA

    TO_CORCIERRA    shift and go to state 91


state 61

    (18) moreDimCreate -> unaDimCreate . moreDimCreate
    (18) moreDimCreate -> . unaDimCreate moreDimCreate
    (19) moreDimCreate -> . empty
    (20) unaDimCreate -> . TO_COMA TO_INT
    (105) empty -> .

    TO_COMA         shift and go to state 63
    TO_CORCIERRA    reduce using rule 105 (empty -> .)

    unaDimCreate                   shift and go to state 61
    moreDimCreate                  shift and go to state 92
    empty                          shift and go to state 62

state 62

    (19) moreDimCreate -> empty .

    TO_CORCIERRA    reduce using rule 19 (moreDimCreate -> empty .)


state 63

    (20) unaDimCreate -> TO_COMA . TO_INT

    TO_INT          shift and go to state 93


state 64

    (17) firstCreate -> TO_CORABRE TO_INT .

    TO_COMA         reduce using rule 17 (firstCreate -> TO_CORABRE TO_INT .)
    TO_CORCIERRA    reduce using rule 17 (firstCreate -> TO_CORABRE TO_INT .)


state 65

    (14) var1 -> PR_var tipo ID .

    TO_CORABRE      reduce using rule 14 (var1 -> PR_var tipo ID .)
    PR_var          reduce using rule 14 (var1 -> PR_var tipo ID .)
    PR_function     reduce using rule 14 (var1 -> PR_var tipo ID .)
    PR_main         reduce using rule 14 (var1 -> PR_var tipo ID .)
    PR_end          reduce using rule 14 (var1 -> PR_var tipo ID .)
    PR_return       reduce using rule 14 (var1 -> PR_var tipo ID .)
    PR_print        reduce using rule 14 (var1 -> PR_var tipo ID .)
    ID              reduce using rule 14 (var1 -> PR_var tipo ID .)
    PR_arreglo      reduce using rule 14 (var1 -> PR_var tipo ID .)
    PR_loop         reduce using rule 14 (var1 -> PR_var tipo ID .)
    PR_if           reduce using rule 14 (var1 -> PR_var tipo ID .)


state 66

    (42) mainBlock -> mainBlock1 bloque TO_LLACIERRA .

    TO_LLACIERRA    reduce using rule 42 (mainBlock -> mainBlock1 bloque TO_LLACIERRA .)


state 67

    (56) bloque -> estructura bloque .

    TO_LLACIERRA    reduce using rule 56 (bloque -> estructura bloque .)


state 68

    (24) assign -> assignTo OP_IGUAL . megaExp
    (85) megaExp -> . maybeNot superExp anotherMega
    (86) maybeNot -> . PR_negacion
    (87) maybeNot -> . empty
    (105) empty -> .

    PR_negacion     shift and go to state 75
    TO_PARABRE      reduce using rule 105 (empty -> .)
    TO_INT          reduce using rule 105 (empty -> .)
    TO_FLOAT        reduce using rule 105 (empty -> .)
    PR_true         reduce using rule 105 (empty -> .)
    PR_false        reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PR_arreglo      reduce using rule 105 (empty -> .)

    megaExp                        shift and go to state 94
    maybeNot                       shift and go to state 74
    empty                          shift and go to state 76

state 69

    (46) loop -> loop1 loop2 . loop3
    (49) loop3 -> . TO_LLAABRE bloque TO_LLACIERRA

    TO_LLAABRE      shift and go to state 96

    loop3                          shift and go to state 95

state 70

    (48) loop2 -> TO_PARABRE . exp TO_PARCIERRA
    (93) exp -> . term anotherExp
    (97) term -> . fact anotherTerm
    (102) fact -> . TO_PARABRE megaExp TO_PARCIERRA
    (103) fact -> . funcCall
    (104) fact -> . val
    (65) funcCall -> . funcCall1 funcCall2
    (2) val -> . TO_INT
    (3) val -> . TO_FLOAT
    (4) val -> . PR_true
    (5) val -> . PR_false
    (6) val -> . ID
    (7) val -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (68) funcCall1 -> . ID TO_PARABRE

    TO_PARABRE      shift and go to state 97
    TO_INT          shift and go to state 103
    TO_FLOAT        shift and go to state 104
    PR_true         shift and go to state 105
    PR_false        shift and go to state 106
    ID              shift and go to state 107
    PR_arreglo      shift and go to state 108

    exp                            shift and go to state 98
    term                           shift and go to state 99
    fact                           shift and go to state 100
    funcCall                       shift and go to state 101
    val                            shift and go to state 102
    funcCall1                      shift and go to state 43

state 71

    (78) comparacion -> compara1 compara2 .

    PR_end          reduce using rule 78 (comparacion -> compara1 compara2 .)
    PR_return       reduce using rule 78 (comparacion -> compara1 compara2 .)
    PR_print        reduce using rule 78 (comparacion -> compara1 compara2 .)
    ID              reduce using rule 78 (comparacion -> compara1 compara2 .)
    PR_arreglo      reduce using rule 78 (comparacion -> compara1 compara2 .)
    PR_loop         reduce using rule 78 (comparacion -> compara1 compara2 .)
    PR_if           reduce using rule 78 (comparacion -> compara1 compara2 .)
    PR_var          reduce using rule 78 (comparacion -> compara1 compara2 .)


state 72

    (80) compara2 -> bloque . TO_LLACIERRA maybeElse

    TO_LLACIERRA    shift and go to state 109


state 73

    (77) return -> PR_return megaExp .

    PR_end          reduce using rule 77 (return -> PR_return megaExp .)
    PR_return       reduce using rule 77 (return -> PR_return megaExp .)
    PR_print        reduce using rule 77 (return -> PR_return megaExp .)
    ID              reduce using rule 77 (return -> PR_return megaExp .)
    PR_arreglo      reduce using rule 77 (return -> PR_return megaExp .)
    PR_loop         reduce using rule 77 (return -> PR_return megaExp .)
    PR_if           reduce using rule 77 (return -> PR_return megaExp .)
    PR_var          reduce using rule 77 (return -> PR_return megaExp .)


state 74

    (85) megaExp -> maybeNot . superExp anotherMega
    (90) superExp -> . exp maybeRel
    (93) exp -> . term anotherExp
    (97) term -> . fact anotherTerm
    (102) fact -> . TO_PARABRE megaExp TO_PARCIERRA
    (103) fact -> . funcCall
    (104) fact -> . val
    (65) funcCall -> . funcCall1 funcCall2
    (2) val -> . TO_INT
    (3) val -> . TO_FLOAT
    (4) val -> . PR_true
    (5) val -> . PR_false
    (6) val -> . ID
    (7) val -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (68) funcCall1 -> . ID TO_PARABRE

    TO_PARABRE      shift and go to state 97
    TO_INT          shift and go to state 103
    TO_FLOAT        shift and go to state 104
    PR_true         shift and go to state 105
    PR_false        shift and go to state 106
    ID              shift and go to state 107
    PR_arreglo      shift and go to state 108

    superExp                       shift and go to state 110
    exp                            shift and go to state 111
    term                           shift and go to state 99
    fact                           shift and go to state 100
    funcCall                       shift and go to state 101
    val                            shift and go to state 102
    funcCall1                      shift and go to state 43

state 75

    (86) maybeNot -> PR_negacion .

    TO_PARABRE      reduce using rule 86 (maybeNot -> PR_negacion .)
    TO_INT          reduce using rule 86 (maybeNot -> PR_negacion .)
    TO_FLOAT        reduce using rule 86 (maybeNot -> PR_negacion .)
    PR_true         reduce using rule 86 (maybeNot -> PR_negacion .)
    PR_false        reduce using rule 86 (maybeNot -> PR_negacion .)
    ID              reduce using rule 86 (maybeNot -> PR_negacion .)
    PR_arreglo      reduce using rule 86 (maybeNot -> PR_negacion .)


state 76

    (87) maybeNot -> empty .

    TO_PARABRE      reduce using rule 87 (maybeNot -> empty .)
    TO_INT          reduce using rule 87 (maybeNot -> empty .)
    TO_FLOAT        reduce using rule 87 (maybeNot -> empty .)
    PR_true         reduce using rule 87 (maybeNot -> empty .)
    PR_false        reduce using rule 87 (maybeNot -> empty .)
    ID              reduce using rule 87 (maybeNot -> empty .)
    PR_arreglo      reduce using rule 87 (maybeNot -> empty .)


state 77

    (65) funcCall -> funcCall1 funcCall2 .

    PR_end          reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    PR_return       reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    PR_print        reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    ID              reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    PR_arreglo      reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    PR_loop         reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    PR_if           reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    PR_var          reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    OP_MULT         reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    OP_DIV          reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    OP_RESID        reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    OP_MAS          reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    OP_MENOS        reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    TO_PARCIERRA    reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    OP_DOBLEIGUAL   reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    OP_DIFDE        reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    OP_MENORQUE     reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    OP_MENOROIGUAL  reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    OP_MAYORQUE     reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    OP_MAYOROIGUAL  reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    PR_interseccion reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    PR_union        reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    TO_COMA         reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)
    TO_CORCIERRA    reduce using rule 65 (funcCall -> funcCall1 funcCall2 .)


state 78

    (69) funcCall2 -> paramVals . TO_PARCIERRA

    TO_PARCIERRA    shift and go to state 112


state 79

    (72) paramVals -> unParam . moreParamVals
    (74) moreParamVals -> . TO_COMA unParam moreParamVals
    (75) moreParamVals -> . empty
    (105) empty -> .

    TO_COMA         shift and go to state 114
    TO_PARCIERRA    reduce using rule 105 (empty -> .)

    moreParamVals                  shift and go to state 113
    empty                          shift and go to state 115

state 80

    (73) paramVals -> empty .

    TO_PARCIERRA    reduce using rule 73 (paramVals -> empty .)


state 81

    (76) unParam -> ID . TO_DOSPTOS megaExp

    TO_DOSPTOS      shift and go to state 116


state 82

    (66) write -> PR_print TO_PARABRE . superExp action TO_PARCIERRA
    (90) superExp -> . exp maybeRel
    (93) exp -> . term anotherExp
    (97) term -> . fact anotherTerm
    (102) fact -> . TO_PARABRE megaExp TO_PARCIERRA
    (103) fact -> . funcCall
    (104) fact -> . val
    (65) funcCall -> . funcCall1 funcCall2
    (2) val -> . TO_INT
    (3) val -> . TO_FLOAT
    (4) val -> . PR_true
    (5) val -> . PR_false
    (6) val -> . ID
    (7) val -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (68) funcCall1 -> . ID TO_PARABRE

    TO_PARABRE      shift and go to state 97
    TO_INT          shift and go to state 103
    TO_FLOAT        shift and go to state 104
    PR_true         shift and go to state 105
    PR_false        shift and go to state 106
    ID              shift and go to state 107
    PR_arreglo      shift and go to state 108

    superExp                       shift and go to state 117
    exp                            shift and go to state 111
    term                           shift and go to state 99
    fact                           shift and go to state 100
    funcCall                       shift and go to state 101
    val                            shift and go to state 102
    funcCall1                      shift and go to state 43

state 83

    (68) funcCall1 -> ID TO_PARABRE .

    ID              reduce using rule 68 (funcCall1 -> ID TO_PARABRE .)
    TO_PARCIERRA    reduce using rule 68 (funcCall1 -> ID TO_PARABRE .)


state 84

    (26) assignTo -> PR_arreglo firstIndex . moreDimIndex TO_CORCIERRA
    (28) moreDimIndex -> . unaDim moreDimIndex
    (29) moreDimIndex -> . empty
    (30) unaDim -> . TO_COMA exp
    (105) empty -> .

    TO_COMA         shift and go to state 121
    TO_CORCIERRA    reduce using rule 105 (empty -> .)

    moreDimIndex                   shift and go to state 118
    unaDim                         shift and go to state 119
    empty                          shift and go to state 120

state 85

    (27) firstIndex -> ID . TO_CORABRE exp

    TO_CORABRE      shift and go to state 122


state 86

    (79) compara1 -> PR_if TO_PARABRE . megaExp TO_PARCIERRA TO_LLAABRE
    (85) megaExp -> . maybeNot superExp anotherMega
    (86) maybeNot -> . PR_negacion
    (87) maybeNot -> . empty
    (105) empty -> .

    PR_negacion     shift and go to state 75
    TO_PARABRE      reduce using rule 105 (empty -> .)
    TO_INT          reduce using rule 105 (empty -> .)
    TO_FLOAT        reduce using rule 105 (empty -> .)
    PR_true         reduce using rule 105 (empty -> .)
    PR_false        reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PR_arreglo      reduce using rule 105 (empty -> .)

    megaExp                        shift and go to state 123
    maybeNot                       shift and go to state 74
    empty                          shift and go to state 76

state 87

    (35) func2 -> decVar bloque . TO_LLACIERRA

    TO_LLACIERRA    shift and go to state 124


state 88

    (34) func12 -> params TO_PARCIERRA . TO_LLAABRE

    TO_LLAABRE      shift and go to state 125


state 89

    (38) params -> tipo ID . moreParams
    (40) moreParams -> . TO_COMA tipo ID moreParams
    (41) moreParams -> . empty
    (105) empty -> .

    TO_COMA         shift and go to state 127
    TO_PARCIERRA    reduce using rule 105 (empty -> .)

    moreParams                     shift and go to state 126
    empty                          shift and go to state 128

state 90

    (33) func11 -> PR_function decideType ID . TO_PARABRE

    TO_PARABRE      shift and go to state 129


state 91

    (15) arrayCreate -> firstCreate moreDimCreate TO_CORCIERRA .

    PR_var          reduce using rule 15 (arrayCreate -> firstCreate moreDimCreate TO_CORCIERRA .)
    PR_function     reduce using rule 15 (arrayCreate -> firstCreate moreDimCreate TO_CORCIERRA .)
    PR_main         reduce using rule 15 (arrayCreate -> firstCreate moreDimCreate TO_CORCIERRA .)
    PR_end          reduce using rule 15 (arrayCreate -> firstCreate moreDimCreate TO_CORCIERRA .)
    PR_return       reduce using rule 15 (arrayCreate -> firstCreate moreDimCreate TO_CORCIERRA .)
    PR_print        reduce using rule 15 (arrayCreate -> firstCreate moreDimCreate TO_CORCIERRA .)
    ID              reduce using rule 15 (arrayCreate -> firstCreate moreDimCreate TO_CORCIERRA .)
    PR_arreglo      reduce using rule 15 (arrayCreate -> firstCreate moreDimCreate TO_CORCIERRA .)
    PR_loop         reduce using rule 15 (arrayCreate -> firstCreate moreDimCreate TO_CORCIERRA .)
    PR_if           reduce using rule 15 (arrayCreate -> firstCreate moreDimCreate TO_CORCIERRA .)


state 92

    (18) moreDimCreate -> unaDimCreate moreDimCreate .

    TO_CORCIERRA    reduce using rule 18 (moreDimCreate -> unaDimCreate moreDimCreate .)


state 93

    (20) unaDimCreate -> TO_COMA TO_INT .

    TO_COMA         reduce using rule 20 (unaDimCreate -> TO_COMA TO_INT .)
    TO_CORCIERRA    reduce using rule 20 (unaDimCreate -> TO_COMA TO_INT .)


state 94

    (24) assign -> assignTo OP_IGUAL megaExp .

    PR_end          reduce using rule 24 (assign -> assignTo OP_IGUAL megaExp .)
    PR_return       reduce using rule 24 (assign -> assignTo OP_IGUAL megaExp .)
    PR_print        reduce using rule 24 (assign -> assignTo OP_IGUAL megaExp .)
    ID              reduce using rule 24 (assign -> assignTo OP_IGUAL megaExp .)
    PR_arreglo      reduce using rule 24 (assign -> assignTo OP_IGUAL megaExp .)
    PR_loop         reduce using rule 24 (assign -> assignTo OP_IGUAL megaExp .)
    PR_if           reduce using rule 24 (assign -> assignTo OP_IGUAL megaExp .)
    PR_var          reduce using rule 24 (assign -> assignTo OP_IGUAL megaExp .)


state 95

    (46) loop -> loop1 loop2 loop3 .

    PR_end          reduce using rule 46 (loop -> loop1 loop2 loop3 .)
    PR_return       reduce using rule 46 (loop -> loop1 loop2 loop3 .)
    PR_print        reduce using rule 46 (loop -> loop1 loop2 loop3 .)
    ID              reduce using rule 46 (loop -> loop1 loop2 loop3 .)
    PR_arreglo      reduce using rule 46 (loop -> loop1 loop2 loop3 .)
    PR_loop         reduce using rule 46 (loop -> loop1 loop2 loop3 .)
    PR_if           reduce using rule 46 (loop -> loop1 loop2 loop3 .)
    PR_var          reduce using rule 46 (loop -> loop1 loop2 loop3 .)


state 96

    (49) loop3 -> TO_LLAABRE . bloque TO_LLACIERRA
    (56) bloque -> . estructura bloque
    (57) bloque -> . PR_end
    (58) estructura -> . assign
    (59) estructura -> . loop
    (60) estructura -> . comparacion
    (61) estructura -> . return
    (62) estructura -> . funcCall
    (63) estructura -> . decVar
    (64) estructura -> . write
    (24) assign -> . assignTo OP_IGUAL megaExp
    (46) loop -> . loop1 loop2 loop3
    (78) comparacion -> . compara1 compara2
    (77) return -> . PR_return megaExp
    (65) funcCall -> . funcCall1 funcCall2
    (9) decVar -> . var decVar
    (10) decVar -> . empty
    (66) write -> . PR_print TO_PARABRE superExp action TO_PARCIERRA
    (25) assignTo -> . ID
    (26) assignTo -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (47) loop1 -> . PR_loop
    (79) compara1 -> . PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE
    (68) funcCall1 -> . ID TO_PARABRE
    (13) var -> . var1 arrayCreate
    (105) empty -> .
    (14) var1 -> . PR_var tipo ID

  ! shift/reduce conflict for PR_end resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_print resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_arreglo resolved as shift
  ! shift/reduce conflict for PR_loop resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_var resolved as shift
    PR_end          shift and go to state 31
    PR_return       shift and go to state 42
    PR_print        shift and go to state 44
    ID              shift and go to state 45
    PR_arreglo      shift and go to state 46
    PR_loop         shift and go to state 47
    PR_if           shift and go to state 48
    PR_var          shift and go to state 9

  ! PR_end          [ reduce using rule 105 (empty -> .) ]
  ! PR_return       [ reduce using rule 105 (empty -> .) ]
  ! PR_print        [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! PR_arreglo      [ reduce using rule 105 (empty -> .) ]
  ! PR_loop         [ reduce using rule 105 (empty -> .) ]
  ! PR_if           [ reduce using rule 105 (empty -> .) ]
  ! PR_var          [ reduce using rule 105 (empty -> .) ]

    bloque                         shift and go to state 130
    estructura                     shift and go to state 30
    assign                         shift and go to state 32
    loop                           shift and go to state 33
    comparacion                    shift and go to state 34
    return                         shift and go to state 35
    funcCall                       shift and go to state 36
    decVar                         shift and go to state 37
    write                          shift and go to state 38
    assignTo                       shift and go to state 39
    loop1                          shift and go to state 40
    compara1                       shift and go to state 41
    funcCall1                      shift and go to state 43
    var                            shift and go to state 6
    empty                          shift and go to state 7
    var1                           shift and go to state 8

state 97

    (102) fact -> TO_PARABRE . megaExp TO_PARCIERRA
    (85) megaExp -> . maybeNot superExp anotherMega
    (86) maybeNot -> . PR_negacion
    (87) maybeNot -> . empty
    (105) empty -> .

    PR_negacion     shift and go to state 75
    TO_PARABRE      reduce using rule 105 (empty -> .)
    TO_INT          reduce using rule 105 (empty -> .)
    TO_FLOAT        reduce using rule 105 (empty -> .)
    PR_true         reduce using rule 105 (empty -> .)
    PR_false        reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PR_arreglo      reduce using rule 105 (empty -> .)

    megaExp                        shift and go to state 131
    maybeNot                       shift and go to state 74
    empty                          shift and go to state 76

state 98

    (48) loop2 -> TO_PARABRE exp . TO_PARCIERRA

    TO_PARCIERRA    shift and go to state 132


state 99

    (93) exp -> term . anotherExp
    (94) anotherExp -> . OP_MAS exp
    (95) anotherExp -> . OP_MENOS exp
    (96) anotherExp -> . empty
    (105) empty -> .

    OP_MAS          shift and go to state 134
    OP_MENOS        shift and go to state 135
    TO_PARCIERRA    reduce using rule 105 (empty -> .)
    OP_DOBLEIGUAL   reduce using rule 105 (empty -> .)
    OP_DIFDE        reduce using rule 105 (empty -> .)
    OP_MENORQUE     reduce using rule 105 (empty -> .)
    OP_MENOROIGUAL  reduce using rule 105 (empty -> .)
    OP_MAYORQUE     reduce using rule 105 (empty -> .)
    OP_MAYOROIGUAL  reduce using rule 105 (empty -> .)
    PR_interseccion reduce using rule 105 (empty -> .)
    PR_union        reduce using rule 105 (empty -> .)
    PR_end          reduce using rule 105 (empty -> .)
    PR_return       reduce using rule 105 (empty -> .)
    PR_print        reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PR_arreglo      reduce using rule 105 (empty -> .)
    PR_loop         reduce using rule 105 (empty -> .)
    PR_if           reduce using rule 105 (empty -> .)
    PR_var          reduce using rule 105 (empty -> .)
    TO_COMA         reduce using rule 105 (empty -> .)
    TO_CORCIERRA    reduce using rule 105 (empty -> .)

    anotherExp                     shift and go to state 133
    empty                          shift and go to state 136

state 100

    (97) term -> fact . anotherTerm
    (98) anotherTerm -> . OP_MULT term
    (99) anotherTerm -> . OP_DIV term
    (100) anotherTerm -> . OP_RESID term
    (101) anotherTerm -> . empty
    (105) empty -> .

    OP_MULT         shift and go to state 138
    OP_DIV          shift and go to state 139
    OP_RESID        shift and go to state 140
    OP_MAS          reduce using rule 105 (empty -> .)
    OP_MENOS        reduce using rule 105 (empty -> .)
    TO_PARCIERRA    reduce using rule 105 (empty -> .)
    OP_DOBLEIGUAL   reduce using rule 105 (empty -> .)
    OP_DIFDE        reduce using rule 105 (empty -> .)
    OP_MENORQUE     reduce using rule 105 (empty -> .)
    OP_MENOROIGUAL  reduce using rule 105 (empty -> .)
    OP_MAYORQUE     reduce using rule 105 (empty -> .)
    OP_MAYOROIGUAL  reduce using rule 105 (empty -> .)
    PR_interseccion reduce using rule 105 (empty -> .)
    PR_union        reduce using rule 105 (empty -> .)
    PR_end          reduce using rule 105 (empty -> .)
    PR_return       reduce using rule 105 (empty -> .)
    PR_print        reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PR_arreglo      reduce using rule 105 (empty -> .)
    PR_loop         reduce using rule 105 (empty -> .)
    PR_if           reduce using rule 105 (empty -> .)
    PR_var          reduce using rule 105 (empty -> .)
    TO_COMA         reduce using rule 105 (empty -> .)
    TO_CORCIERRA    reduce using rule 105 (empty -> .)

    anotherTerm                    shift and go to state 137
    empty                          shift and go to state 141

state 101

    (103) fact -> funcCall .

    OP_MULT         reduce using rule 103 (fact -> funcCall .)
    OP_DIV          reduce using rule 103 (fact -> funcCall .)
    OP_RESID        reduce using rule 103 (fact -> funcCall .)
    OP_MAS          reduce using rule 103 (fact -> funcCall .)
    OP_MENOS        reduce using rule 103 (fact -> funcCall .)
    TO_PARCIERRA    reduce using rule 103 (fact -> funcCall .)
    OP_DOBLEIGUAL   reduce using rule 103 (fact -> funcCall .)
    OP_DIFDE        reduce using rule 103 (fact -> funcCall .)
    OP_MENORQUE     reduce using rule 103 (fact -> funcCall .)
    OP_MENOROIGUAL  reduce using rule 103 (fact -> funcCall .)
    OP_MAYORQUE     reduce using rule 103 (fact -> funcCall .)
    OP_MAYOROIGUAL  reduce using rule 103 (fact -> funcCall .)
    PR_interseccion reduce using rule 103 (fact -> funcCall .)
    PR_union        reduce using rule 103 (fact -> funcCall .)
    PR_end          reduce using rule 103 (fact -> funcCall .)
    PR_return       reduce using rule 103 (fact -> funcCall .)
    PR_print        reduce using rule 103 (fact -> funcCall .)
    ID              reduce using rule 103 (fact -> funcCall .)
    PR_arreglo      reduce using rule 103 (fact -> funcCall .)
    PR_loop         reduce using rule 103 (fact -> funcCall .)
    PR_if           reduce using rule 103 (fact -> funcCall .)
    PR_var          reduce using rule 103 (fact -> funcCall .)
    TO_COMA         reduce using rule 103 (fact -> funcCall .)
    TO_CORCIERRA    reduce using rule 103 (fact -> funcCall .)


state 102

    (104) fact -> val .

    OP_MULT         reduce using rule 104 (fact -> val .)
    OP_DIV          reduce using rule 104 (fact -> val .)
    OP_RESID        reduce using rule 104 (fact -> val .)
    OP_MAS          reduce using rule 104 (fact -> val .)
    OP_MENOS        reduce using rule 104 (fact -> val .)
    TO_PARCIERRA    reduce using rule 104 (fact -> val .)
    OP_DOBLEIGUAL   reduce using rule 104 (fact -> val .)
    OP_DIFDE        reduce using rule 104 (fact -> val .)
    OP_MENORQUE     reduce using rule 104 (fact -> val .)
    OP_MENOROIGUAL  reduce using rule 104 (fact -> val .)
    OP_MAYORQUE     reduce using rule 104 (fact -> val .)
    OP_MAYOROIGUAL  reduce using rule 104 (fact -> val .)
    PR_interseccion reduce using rule 104 (fact -> val .)
    PR_union        reduce using rule 104 (fact -> val .)
    PR_end          reduce using rule 104 (fact -> val .)
    PR_return       reduce using rule 104 (fact -> val .)
    PR_print        reduce using rule 104 (fact -> val .)
    ID              reduce using rule 104 (fact -> val .)
    PR_arreglo      reduce using rule 104 (fact -> val .)
    PR_loop         reduce using rule 104 (fact -> val .)
    PR_if           reduce using rule 104 (fact -> val .)
    PR_var          reduce using rule 104 (fact -> val .)
    TO_COMA         reduce using rule 104 (fact -> val .)
    TO_CORCIERRA    reduce using rule 104 (fact -> val .)


state 103

    (2) val -> TO_INT .

    OP_MULT         reduce using rule 2 (val -> TO_INT .)
    OP_DIV          reduce using rule 2 (val -> TO_INT .)
    OP_RESID        reduce using rule 2 (val -> TO_INT .)
    OP_MAS          reduce using rule 2 (val -> TO_INT .)
    OP_MENOS        reduce using rule 2 (val -> TO_INT .)
    TO_PARCIERRA    reduce using rule 2 (val -> TO_INT .)
    OP_DOBLEIGUAL   reduce using rule 2 (val -> TO_INT .)
    OP_DIFDE        reduce using rule 2 (val -> TO_INT .)
    OP_MENORQUE     reduce using rule 2 (val -> TO_INT .)
    OP_MENOROIGUAL  reduce using rule 2 (val -> TO_INT .)
    OP_MAYORQUE     reduce using rule 2 (val -> TO_INT .)
    OP_MAYOROIGUAL  reduce using rule 2 (val -> TO_INT .)
    PR_interseccion reduce using rule 2 (val -> TO_INT .)
    PR_union        reduce using rule 2 (val -> TO_INT .)
    PR_end          reduce using rule 2 (val -> TO_INT .)
    PR_return       reduce using rule 2 (val -> TO_INT .)
    PR_print        reduce using rule 2 (val -> TO_INT .)
    ID              reduce using rule 2 (val -> TO_INT .)
    PR_arreglo      reduce using rule 2 (val -> TO_INT .)
    PR_loop         reduce using rule 2 (val -> TO_INT .)
    PR_if           reduce using rule 2 (val -> TO_INT .)
    PR_var          reduce using rule 2 (val -> TO_INT .)
    TO_COMA         reduce using rule 2 (val -> TO_INT .)
    TO_CORCIERRA    reduce using rule 2 (val -> TO_INT .)


state 104

    (3) val -> TO_FLOAT .

    OP_MULT         reduce using rule 3 (val -> TO_FLOAT .)
    OP_DIV          reduce using rule 3 (val -> TO_FLOAT .)
    OP_RESID        reduce using rule 3 (val -> TO_FLOAT .)
    OP_MAS          reduce using rule 3 (val -> TO_FLOAT .)
    OP_MENOS        reduce using rule 3 (val -> TO_FLOAT .)
    TO_PARCIERRA    reduce using rule 3 (val -> TO_FLOAT .)
    OP_DOBLEIGUAL   reduce using rule 3 (val -> TO_FLOAT .)
    OP_DIFDE        reduce using rule 3 (val -> TO_FLOAT .)
    OP_MENORQUE     reduce using rule 3 (val -> TO_FLOAT .)
    OP_MENOROIGUAL  reduce using rule 3 (val -> TO_FLOAT .)
    OP_MAYORQUE     reduce using rule 3 (val -> TO_FLOAT .)
    OP_MAYOROIGUAL  reduce using rule 3 (val -> TO_FLOAT .)
    PR_interseccion reduce using rule 3 (val -> TO_FLOAT .)
    PR_union        reduce using rule 3 (val -> TO_FLOAT .)
    PR_end          reduce using rule 3 (val -> TO_FLOAT .)
    PR_return       reduce using rule 3 (val -> TO_FLOAT .)
    PR_print        reduce using rule 3 (val -> TO_FLOAT .)
    ID              reduce using rule 3 (val -> TO_FLOAT .)
    PR_arreglo      reduce using rule 3 (val -> TO_FLOAT .)
    PR_loop         reduce using rule 3 (val -> TO_FLOAT .)
    PR_if           reduce using rule 3 (val -> TO_FLOAT .)
    PR_var          reduce using rule 3 (val -> TO_FLOAT .)
    TO_COMA         reduce using rule 3 (val -> TO_FLOAT .)
    TO_CORCIERRA    reduce using rule 3 (val -> TO_FLOAT .)


state 105

    (4) val -> PR_true .

    OP_MULT         reduce using rule 4 (val -> PR_true .)
    OP_DIV          reduce using rule 4 (val -> PR_true .)
    OP_RESID        reduce using rule 4 (val -> PR_true .)
    OP_MAS          reduce using rule 4 (val -> PR_true .)
    OP_MENOS        reduce using rule 4 (val -> PR_true .)
    TO_PARCIERRA    reduce using rule 4 (val -> PR_true .)
    OP_DOBLEIGUAL   reduce using rule 4 (val -> PR_true .)
    OP_DIFDE        reduce using rule 4 (val -> PR_true .)
    OP_MENORQUE     reduce using rule 4 (val -> PR_true .)
    OP_MENOROIGUAL  reduce using rule 4 (val -> PR_true .)
    OP_MAYORQUE     reduce using rule 4 (val -> PR_true .)
    OP_MAYOROIGUAL  reduce using rule 4 (val -> PR_true .)
    PR_interseccion reduce using rule 4 (val -> PR_true .)
    PR_union        reduce using rule 4 (val -> PR_true .)
    PR_end          reduce using rule 4 (val -> PR_true .)
    PR_return       reduce using rule 4 (val -> PR_true .)
    PR_print        reduce using rule 4 (val -> PR_true .)
    ID              reduce using rule 4 (val -> PR_true .)
    PR_arreglo      reduce using rule 4 (val -> PR_true .)
    PR_loop         reduce using rule 4 (val -> PR_true .)
    PR_if           reduce using rule 4 (val -> PR_true .)
    PR_var          reduce using rule 4 (val -> PR_true .)
    TO_COMA         reduce using rule 4 (val -> PR_true .)
    TO_CORCIERRA    reduce using rule 4 (val -> PR_true .)


state 106

    (5) val -> PR_false .

    OP_MULT         reduce using rule 5 (val -> PR_false .)
    OP_DIV          reduce using rule 5 (val -> PR_false .)
    OP_RESID        reduce using rule 5 (val -> PR_false .)
    OP_MAS          reduce using rule 5 (val -> PR_false .)
    OP_MENOS        reduce using rule 5 (val -> PR_false .)
    TO_PARCIERRA    reduce using rule 5 (val -> PR_false .)
    OP_DOBLEIGUAL   reduce using rule 5 (val -> PR_false .)
    OP_DIFDE        reduce using rule 5 (val -> PR_false .)
    OP_MENORQUE     reduce using rule 5 (val -> PR_false .)
    OP_MENOROIGUAL  reduce using rule 5 (val -> PR_false .)
    OP_MAYORQUE     reduce using rule 5 (val -> PR_false .)
    OP_MAYOROIGUAL  reduce using rule 5 (val -> PR_false .)
    PR_interseccion reduce using rule 5 (val -> PR_false .)
    PR_union        reduce using rule 5 (val -> PR_false .)
    PR_end          reduce using rule 5 (val -> PR_false .)
    PR_return       reduce using rule 5 (val -> PR_false .)
    PR_print        reduce using rule 5 (val -> PR_false .)
    ID              reduce using rule 5 (val -> PR_false .)
    PR_arreglo      reduce using rule 5 (val -> PR_false .)
    PR_loop         reduce using rule 5 (val -> PR_false .)
    PR_if           reduce using rule 5 (val -> PR_false .)
    PR_var          reduce using rule 5 (val -> PR_false .)
    TO_COMA         reduce using rule 5 (val -> PR_false .)
    TO_CORCIERRA    reduce using rule 5 (val -> PR_false .)


state 107

    (6) val -> ID .
    (68) funcCall1 -> ID . TO_PARABRE

    OP_MULT         reduce using rule 6 (val -> ID .)
    OP_DIV          reduce using rule 6 (val -> ID .)
    OP_RESID        reduce using rule 6 (val -> ID .)
    OP_MAS          reduce using rule 6 (val -> ID .)
    OP_MENOS        reduce using rule 6 (val -> ID .)
    TO_PARCIERRA    reduce using rule 6 (val -> ID .)
    OP_DOBLEIGUAL   reduce using rule 6 (val -> ID .)
    OP_DIFDE        reduce using rule 6 (val -> ID .)
    OP_MENORQUE     reduce using rule 6 (val -> ID .)
    OP_MENOROIGUAL  reduce using rule 6 (val -> ID .)
    OP_MAYORQUE     reduce using rule 6 (val -> ID .)
    OP_MAYOROIGUAL  reduce using rule 6 (val -> ID .)
    PR_interseccion reduce using rule 6 (val -> ID .)
    PR_union        reduce using rule 6 (val -> ID .)
    PR_end          reduce using rule 6 (val -> ID .)
    PR_return       reduce using rule 6 (val -> ID .)
    PR_print        reduce using rule 6 (val -> ID .)
    ID              reduce using rule 6 (val -> ID .)
    PR_arreglo      reduce using rule 6 (val -> ID .)
    PR_loop         reduce using rule 6 (val -> ID .)
    PR_if           reduce using rule 6 (val -> ID .)
    PR_var          reduce using rule 6 (val -> ID .)
    TO_COMA         reduce using rule 6 (val -> ID .)
    TO_CORCIERRA    reduce using rule 6 (val -> ID .)
    TO_PARABRE      shift and go to state 83


state 108

    (7) val -> PR_arreglo . firstIndex moreDimIndex TO_CORCIERRA
    (27) firstIndex -> . ID TO_CORABRE exp

    ID              shift and go to state 85

    firstIndex                     shift and go to state 142

state 109

    (80) compara2 -> bloque TO_LLACIERRA . maybeElse
    (81) maybeElse -> . checkElse doElse
    (82) maybeElse -> . empty
    (83) checkElse -> . PR_else TO_LLAABRE
    (105) empty -> .

    PR_else         shift and go to state 146
    PR_end          reduce using rule 105 (empty -> .)
    PR_return       reduce using rule 105 (empty -> .)
    PR_print        reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PR_arreglo      reduce using rule 105 (empty -> .)
    PR_loop         reduce using rule 105 (empty -> .)
    PR_if           reduce using rule 105 (empty -> .)
    PR_var          reduce using rule 105 (empty -> .)

    maybeElse                      shift and go to state 143
    checkElse                      shift and go to state 144
    empty                          shift and go to state 145

state 110

    (85) megaExp -> maybeNot superExp . anotherMega
    (88) anotherMega -> . opLogico megaExp
    (89) anotherMega -> . empty
    (44) opLogico -> . PR_interseccion
    (45) opLogico -> . PR_union
    (105) empty -> .

    PR_interseccion shift and go to state 150
    PR_union        shift and go to state 151
    PR_end          reduce using rule 105 (empty -> .)
    PR_return       reduce using rule 105 (empty -> .)
    PR_print        reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PR_arreglo      reduce using rule 105 (empty -> .)
    PR_loop         reduce using rule 105 (empty -> .)
    PR_if           reduce using rule 105 (empty -> .)
    PR_var          reduce using rule 105 (empty -> .)
    TO_PARCIERRA    reduce using rule 105 (empty -> .)
    TO_COMA         reduce using rule 105 (empty -> .)

    anotherMega                    shift and go to state 147
    opLogico                       shift and go to state 148
    empty                          shift and go to state 149

state 111

    (90) superExp -> exp . maybeRel
    (91) maybeRel -> . opRelacional exp
    (92) maybeRel -> . empty
    (50) opRelacional -> . OP_DOBLEIGUAL
    (51) opRelacional -> . OP_DIFDE
    (52) opRelacional -> . OP_MENORQUE
    (53) opRelacional -> . OP_MENOROIGUAL
    (54) opRelacional -> . OP_MAYORQUE
    (55) opRelacional -> . OP_MAYOROIGUAL
    (105) empty -> .

    OP_DOBLEIGUAL   shift and go to state 155
    OP_DIFDE        shift and go to state 156
    OP_MENORQUE     shift and go to state 157
    OP_MENOROIGUAL  shift and go to state 158
    OP_MAYORQUE     shift and go to state 159
    OP_MAYOROIGUAL  shift and go to state 160
    PR_interseccion reduce using rule 105 (empty -> .)
    PR_union        reduce using rule 105 (empty -> .)
    PR_end          reduce using rule 105 (empty -> .)
    PR_return       reduce using rule 105 (empty -> .)
    PR_print        reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PR_arreglo      reduce using rule 105 (empty -> .)
    PR_loop         reduce using rule 105 (empty -> .)
    PR_if           reduce using rule 105 (empty -> .)
    PR_var          reduce using rule 105 (empty -> .)
    TO_PARCIERRA    reduce using rule 105 (empty -> .)
    TO_COMA         reduce using rule 105 (empty -> .)

    maybeRel                       shift and go to state 152
    opRelacional                   shift and go to state 153
    empty                          shift and go to state 154

state 112

    (69) funcCall2 -> paramVals TO_PARCIERRA .

    PR_end          reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    PR_return       reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    PR_print        reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    ID              reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    PR_arreglo      reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    PR_loop         reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    PR_if           reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    PR_var          reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    OP_MULT         reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    OP_DIV          reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    OP_RESID        reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    OP_MAS          reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    OP_MENOS        reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    TO_PARCIERRA    reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    OP_DOBLEIGUAL   reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    OP_DIFDE        reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    OP_MENORQUE     reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    OP_MENOROIGUAL  reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    OP_MAYORQUE     reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    OP_MAYOROIGUAL  reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    PR_interseccion reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    PR_union        reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    TO_COMA         reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)
    TO_CORCIERRA    reduce using rule 69 (funcCall2 -> paramVals TO_PARCIERRA .)


state 113

    (72) paramVals -> unParam moreParamVals .

    TO_PARCIERRA    reduce using rule 72 (paramVals -> unParam moreParamVals .)


state 114

    (74) moreParamVals -> TO_COMA . unParam moreParamVals
    (76) unParam -> . ID TO_DOSPTOS megaExp

    ID              shift and go to state 81

    unParam                        shift and go to state 161

state 115

    (75) moreParamVals -> empty .

    TO_PARCIERRA    reduce using rule 75 (moreParamVals -> empty .)


state 116

    (76) unParam -> ID TO_DOSPTOS . megaExp
    (85) megaExp -> . maybeNot superExp anotherMega
    (86) maybeNot -> . PR_negacion
    (87) maybeNot -> . empty
    (105) empty -> .

    PR_negacion     shift and go to state 75
    TO_PARABRE      reduce using rule 105 (empty -> .)
    TO_INT          reduce using rule 105 (empty -> .)
    TO_FLOAT        reduce using rule 105 (empty -> .)
    PR_true         reduce using rule 105 (empty -> .)
    PR_false        reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PR_arreglo      reduce using rule 105 (empty -> .)

    megaExp                        shift and go to state 162
    maybeNot                       shift and go to state 74
    empty                          shift and go to state 76

state 117

    (66) write -> PR_print TO_PARABRE superExp . action TO_PARCIERRA
    (67) action -> . empty
    (105) empty -> .

    TO_PARCIERRA    reduce using rule 105 (empty -> .)

    action                         shift and go to state 163
    empty                          shift and go to state 164

state 118

    (26) assignTo -> PR_arreglo firstIndex moreDimIndex . TO_CORCIERRA

    TO_CORCIERRA    shift and go to state 165


state 119

    (28) moreDimIndex -> unaDim . moreDimIndex
    (28) moreDimIndex -> . unaDim moreDimIndex
    (29) moreDimIndex -> . empty
    (30) unaDim -> . TO_COMA exp
    (105) empty -> .

    TO_COMA         shift and go to state 121
    TO_CORCIERRA    reduce using rule 105 (empty -> .)

    unaDim                         shift and go to state 119
    moreDimIndex                   shift and go to state 166
    empty                          shift and go to state 120

state 120

    (29) moreDimIndex -> empty .

    TO_CORCIERRA    reduce using rule 29 (moreDimIndex -> empty .)


state 121

    (30) unaDim -> TO_COMA . exp
    (93) exp -> . term anotherExp
    (97) term -> . fact anotherTerm
    (102) fact -> . TO_PARABRE megaExp TO_PARCIERRA
    (103) fact -> . funcCall
    (104) fact -> . val
    (65) funcCall -> . funcCall1 funcCall2
    (2) val -> . TO_INT
    (3) val -> . TO_FLOAT
    (4) val -> . PR_true
    (5) val -> . PR_false
    (6) val -> . ID
    (7) val -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (68) funcCall1 -> . ID TO_PARABRE

    TO_PARABRE      shift and go to state 97
    TO_INT          shift and go to state 103
    TO_FLOAT        shift and go to state 104
    PR_true         shift and go to state 105
    PR_false        shift and go to state 106
    ID              shift and go to state 107
    PR_arreglo      shift and go to state 108

    exp                            shift and go to state 167
    term                           shift and go to state 99
    fact                           shift and go to state 100
    funcCall                       shift and go to state 101
    val                            shift and go to state 102
    funcCall1                      shift and go to state 43

state 122

    (27) firstIndex -> ID TO_CORABRE . exp
    (93) exp -> . term anotherExp
    (97) term -> . fact anotherTerm
    (102) fact -> . TO_PARABRE megaExp TO_PARCIERRA
    (103) fact -> . funcCall
    (104) fact -> . val
    (65) funcCall -> . funcCall1 funcCall2
    (2) val -> . TO_INT
    (3) val -> . TO_FLOAT
    (4) val -> . PR_true
    (5) val -> . PR_false
    (6) val -> . ID
    (7) val -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (68) funcCall1 -> . ID TO_PARABRE

    TO_PARABRE      shift and go to state 97
    TO_INT          shift and go to state 103
    TO_FLOAT        shift and go to state 104
    PR_true         shift and go to state 105
    PR_false        shift and go to state 106
    ID              shift and go to state 107
    PR_arreglo      shift and go to state 108

    exp                            shift and go to state 168
    term                           shift and go to state 99
    fact                           shift and go to state 100
    funcCall                       shift and go to state 101
    val                            shift and go to state 102
    funcCall1                      shift and go to state 43

state 123

    (79) compara1 -> PR_if TO_PARABRE megaExp . TO_PARCIERRA TO_LLAABRE

    TO_PARCIERRA    shift and go to state 169


state 124

    (35) func2 -> decVar bloque TO_LLACIERRA .

    PR_function     reduce using rule 35 (func2 -> decVar bloque TO_LLACIERRA .)
    PR_main         reduce using rule 35 (func2 -> decVar bloque TO_LLACIERRA .)


state 125

    (34) func12 -> params TO_PARCIERRA TO_LLAABRE .

    PR_var          reduce using rule 34 (func12 -> params TO_PARCIERRA TO_LLAABRE .)
    PR_end          reduce using rule 34 (func12 -> params TO_PARCIERRA TO_LLAABRE .)
    PR_return       reduce using rule 34 (func12 -> params TO_PARCIERRA TO_LLAABRE .)
    PR_print        reduce using rule 34 (func12 -> params TO_PARCIERRA TO_LLAABRE .)
    ID              reduce using rule 34 (func12 -> params TO_PARCIERRA TO_LLAABRE .)
    PR_arreglo      reduce using rule 34 (func12 -> params TO_PARCIERRA TO_LLAABRE .)
    PR_loop         reduce using rule 34 (func12 -> params TO_PARCIERRA TO_LLAABRE .)
    PR_if           reduce using rule 34 (func12 -> params TO_PARCIERRA TO_LLAABRE .)


state 126

    (38) params -> tipo ID moreParams .

    TO_PARCIERRA    reduce using rule 38 (params -> tipo ID moreParams .)


state 127

    (40) moreParams -> TO_COMA . tipo ID moreParams
    (21) tipo -> . PR_int
    (22) tipo -> . PR_float
    (23) tipo -> . PR_bool

    PR_int          shift and go to state 25
    PR_float        shift and go to state 26
    PR_bool         shift and go to state 27

    tipo                           shift and go to state 170

state 128

    (41) moreParams -> empty .

    TO_PARCIERRA    reduce using rule 41 (moreParams -> empty .)


state 129

    (33) func11 -> PR_function decideType ID TO_PARABRE .

    PR_int          reduce using rule 33 (func11 -> PR_function decideType ID TO_PARABRE .)
    PR_float        reduce using rule 33 (func11 -> PR_function decideType ID TO_PARABRE .)
    PR_bool         reduce using rule 33 (func11 -> PR_function decideType ID TO_PARABRE .)
    TO_PARCIERRA    reduce using rule 33 (func11 -> PR_function decideType ID TO_PARABRE .)


state 130

    (49) loop3 -> TO_LLAABRE bloque . TO_LLACIERRA

    TO_LLACIERRA    shift and go to state 171


state 131

    (102) fact -> TO_PARABRE megaExp . TO_PARCIERRA

    TO_PARCIERRA    shift and go to state 172


state 132

    (48) loop2 -> TO_PARABRE exp TO_PARCIERRA .

    TO_LLAABRE      reduce using rule 48 (loop2 -> TO_PARABRE exp TO_PARCIERRA .)


state 133

    (93) exp -> term anotherExp .

    TO_PARCIERRA    reduce using rule 93 (exp -> term anotherExp .)
    OP_DOBLEIGUAL   reduce using rule 93 (exp -> term anotherExp .)
    OP_DIFDE        reduce using rule 93 (exp -> term anotherExp .)
    OP_MENORQUE     reduce using rule 93 (exp -> term anotherExp .)
    OP_MENOROIGUAL  reduce using rule 93 (exp -> term anotherExp .)
    OP_MAYORQUE     reduce using rule 93 (exp -> term anotherExp .)
    OP_MAYOROIGUAL  reduce using rule 93 (exp -> term anotherExp .)
    PR_interseccion reduce using rule 93 (exp -> term anotherExp .)
    PR_union        reduce using rule 93 (exp -> term anotherExp .)
    PR_end          reduce using rule 93 (exp -> term anotherExp .)
    PR_return       reduce using rule 93 (exp -> term anotherExp .)
    PR_print        reduce using rule 93 (exp -> term anotherExp .)
    ID              reduce using rule 93 (exp -> term anotherExp .)
    PR_arreglo      reduce using rule 93 (exp -> term anotherExp .)
    PR_loop         reduce using rule 93 (exp -> term anotherExp .)
    PR_if           reduce using rule 93 (exp -> term anotherExp .)
    PR_var          reduce using rule 93 (exp -> term anotherExp .)
    TO_COMA         reduce using rule 93 (exp -> term anotherExp .)
    TO_CORCIERRA    reduce using rule 93 (exp -> term anotherExp .)


state 134

    (94) anotherExp -> OP_MAS . exp
    (93) exp -> . term anotherExp
    (97) term -> . fact anotherTerm
    (102) fact -> . TO_PARABRE megaExp TO_PARCIERRA
    (103) fact -> . funcCall
    (104) fact -> . val
    (65) funcCall -> . funcCall1 funcCall2
    (2) val -> . TO_INT
    (3) val -> . TO_FLOAT
    (4) val -> . PR_true
    (5) val -> . PR_false
    (6) val -> . ID
    (7) val -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (68) funcCall1 -> . ID TO_PARABRE

    TO_PARABRE      shift and go to state 97
    TO_INT          shift and go to state 103
    TO_FLOAT        shift and go to state 104
    PR_true         shift and go to state 105
    PR_false        shift and go to state 106
    ID              shift and go to state 107
    PR_arreglo      shift and go to state 108

    exp                            shift and go to state 173
    term                           shift and go to state 99
    fact                           shift and go to state 100
    funcCall                       shift and go to state 101
    val                            shift and go to state 102
    funcCall1                      shift and go to state 43

state 135

    (95) anotherExp -> OP_MENOS . exp
    (93) exp -> . term anotherExp
    (97) term -> . fact anotherTerm
    (102) fact -> . TO_PARABRE megaExp TO_PARCIERRA
    (103) fact -> . funcCall
    (104) fact -> . val
    (65) funcCall -> . funcCall1 funcCall2
    (2) val -> . TO_INT
    (3) val -> . TO_FLOAT
    (4) val -> . PR_true
    (5) val -> . PR_false
    (6) val -> . ID
    (7) val -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (68) funcCall1 -> . ID TO_PARABRE

    TO_PARABRE      shift and go to state 97
    TO_INT          shift and go to state 103
    TO_FLOAT        shift and go to state 104
    PR_true         shift and go to state 105
    PR_false        shift and go to state 106
    ID              shift and go to state 107
    PR_arreglo      shift and go to state 108

    exp                            shift and go to state 174
    term                           shift and go to state 99
    fact                           shift and go to state 100
    funcCall                       shift and go to state 101
    val                            shift and go to state 102
    funcCall1                      shift and go to state 43

state 136

    (96) anotherExp -> empty .

    TO_PARCIERRA    reduce using rule 96 (anotherExp -> empty .)
    OP_DOBLEIGUAL   reduce using rule 96 (anotherExp -> empty .)
    OP_DIFDE        reduce using rule 96 (anotherExp -> empty .)
    OP_MENORQUE     reduce using rule 96 (anotherExp -> empty .)
    OP_MENOROIGUAL  reduce using rule 96 (anotherExp -> empty .)
    OP_MAYORQUE     reduce using rule 96 (anotherExp -> empty .)
    OP_MAYOROIGUAL  reduce using rule 96 (anotherExp -> empty .)
    PR_interseccion reduce using rule 96 (anotherExp -> empty .)
    PR_union        reduce using rule 96 (anotherExp -> empty .)
    PR_end          reduce using rule 96 (anotherExp -> empty .)
    PR_return       reduce using rule 96 (anotherExp -> empty .)
    PR_print        reduce using rule 96 (anotherExp -> empty .)
    ID              reduce using rule 96 (anotherExp -> empty .)
    PR_arreglo      reduce using rule 96 (anotherExp -> empty .)
    PR_loop         reduce using rule 96 (anotherExp -> empty .)
    PR_if           reduce using rule 96 (anotherExp -> empty .)
    PR_var          reduce using rule 96 (anotherExp -> empty .)
    TO_COMA         reduce using rule 96 (anotherExp -> empty .)
    TO_CORCIERRA    reduce using rule 96 (anotherExp -> empty .)


state 137

    (97) term -> fact anotherTerm .

    OP_MAS          reduce using rule 97 (term -> fact anotherTerm .)
    OP_MENOS        reduce using rule 97 (term -> fact anotherTerm .)
    TO_PARCIERRA    reduce using rule 97 (term -> fact anotherTerm .)
    OP_DOBLEIGUAL   reduce using rule 97 (term -> fact anotherTerm .)
    OP_DIFDE        reduce using rule 97 (term -> fact anotherTerm .)
    OP_MENORQUE     reduce using rule 97 (term -> fact anotherTerm .)
    OP_MENOROIGUAL  reduce using rule 97 (term -> fact anotherTerm .)
    OP_MAYORQUE     reduce using rule 97 (term -> fact anotherTerm .)
    OP_MAYOROIGUAL  reduce using rule 97 (term -> fact anotherTerm .)
    PR_interseccion reduce using rule 97 (term -> fact anotherTerm .)
    PR_union        reduce using rule 97 (term -> fact anotherTerm .)
    PR_end          reduce using rule 97 (term -> fact anotherTerm .)
    PR_return       reduce using rule 97 (term -> fact anotherTerm .)
    PR_print        reduce using rule 97 (term -> fact anotherTerm .)
    ID              reduce using rule 97 (term -> fact anotherTerm .)
    PR_arreglo      reduce using rule 97 (term -> fact anotherTerm .)
    PR_loop         reduce using rule 97 (term -> fact anotherTerm .)
    PR_if           reduce using rule 97 (term -> fact anotherTerm .)
    PR_var          reduce using rule 97 (term -> fact anotherTerm .)
    TO_COMA         reduce using rule 97 (term -> fact anotherTerm .)
    TO_CORCIERRA    reduce using rule 97 (term -> fact anotherTerm .)


state 138

    (98) anotherTerm -> OP_MULT . term
    (97) term -> . fact anotherTerm
    (102) fact -> . TO_PARABRE megaExp TO_PARCIERRA
    (103) fact -> . funcCall
    (104) fact -> . val
    (65) funcCall -> . funcCall1 funcCall2
    (2) val -> . TO_INT
    (3) val -> . TO_FLOAT
    (4) val -> . PR_true
    (5) val -> . PR_false
    (6) val -> . ID
    (7) val -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (68) funcCall1 -> . ID TO_PARABRE

    TO_PARABRE      shift and go to state 97
    TO_INT          shift and go to state 103
    TO_FLOAT        shift and go to state 104
    PR_true         shift and go to state 105
    PR_false        shift and go to state 106
    ID              shift and go to state 107
    PR_arreglo      shift and go to state 108

    term                           shift and go to state 175
    fact                           shift and go to state 100
    funcCall                       shift and go to state 101
    val                            shift and go to state 102
    funcCall1                      shift and go to state 43

state 139

    (99) anotherTerm -> OP_DIV . term
    (97) term -> . fact anotherTerm
    (102) fact -> . TO_PARABRE megaExp TO_PARCIERRA
    (103) fact -> . funcCall
    (104) fact -> . val
    (65) funcCall -> . funcCall1 funcCall2
    (2) val -> . TO_INT
    (3) val -> . TO_FLOAT
    (4) val -> . PR_true
    (5) val -> . PR_false
    (6) val -> . ID
    (7) val -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (68) funcCall1 -> . ID TO_PARABRE

    TO_PARABRE      shift and go to state 97
    TO_INT          shift and go to state 103
    TO_FLOAT        shift and go to state 104
    PR_true         shift and go to state 105
    PR_false        shift and go to state 106
    ID              shift and go to state 107
    PR_arreglo      shift and go to state 108

    term                           shift and go to state 176
    fact                           shift and go to state 100
    funcCall                       shift and go to state 101
    val                            shift and go to state 102
    funcCall1                      shift and go to state 43

state 140

    (100) anotherTerm -> OP_RESID . term
    (97) term -> . fact anotherTerm
    (102) fact -> . TO_PARABRE megaExp TO_PARCIERRA
    (103) fact -> . funcCall
    (104) fact -> . val
    (65) funcCall -> . funcCall1 funcCall2
    (2) val -> . TO_INT
    (3) val -> . TO_FLOAT
    (4) val -> . PR_true
    (5) val -> . PR_false
    (6) val -> . ID
    (7) val -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (68) funcCall1 -> . ID TO_PARABRE

    TO_PARABRE      shift and go to state 97
    TO_INT          shift and go to state 103
    TO_FLOAT        shift and go to state 104
    PR_true         shift and go to state 105
    PR_false        shift and go to state 106
    ID              shift and go to state 107
    PR_arreglo      shift and go to state 108

    term                           shift and go to state 177
    fact                           shift and go to state 100
    funcCall                       shift and go to state 101
    val                            shift and go to state 102
    funcCall1                      shift and go to state 43

state 141

    (101) anotherTerm -> empty .

    OP_MAS          reduce using rule 101 (anotherTerm -> empty .)
    OP_MENOS        reduce using rule 101 (anotherTerm -> empty .)
    TO_PARCIERRA    reduce using rule 101 (anotherTerm -> empty .)
    OP_DOBLEIGUAL   reduce using rule 101 (anotherTerm -> empty .)
    OP_DIFDE        reduce using rule 101 (anotherTerm -> empty .)
    OP_MENORQUE     reduce using rule 101 (anotherTerm -> empty .)
    OP_MENOROIGUAL  reduce using rule 101 (anotherTerm -> empty .)
    OP_MAYORQUE     reduce using rule 101 (anotherTerm -> empty .)
    OP_MAYOROIGUAL  reduce using rule 101 (anotherTerm -> empty .)
    PR_interseccion reduce using rule 101 (anotherTerm -> empty .)
    PR_union        reduce using rule 101 (anotherTerm -> empty .)
    PR_end          reduce using rule 101 (anotherTerm -> empty .)
    PR_return       reduce using rule 101 (anotherTerm -> empty .)
    PR_print        reduce using rule 101 (anotherTerm -> empty .)
    ID              reduce using rule 101 (anotherTerm -> empty .)
    PR_arreglo      reduce using rule 101 (anotherTerm -> empty .)
    PR_loop         reduce using rule 101 (anotherTerm -> empty .)
    PR_if           reduce using rule 101 (anotherTerm -> empty .)
    PR_var          reduce using rule 101 (anotherTerm -> empty .)
    TO_COMA         reduce using rule 101 (anotherTerm -> empty .)
    TO_CORCIERRA    reduce using rule 101 (anotherTerm -> empty .)


state 142

    (7) val -> PR_arreglo firstIndex . moreDimIndex TO_CORCIERRA
    (28) moreDimIndex -> . unaDim moreDimIndex
    (29) moreDimIndex -> . empty
    (30) unaDim -> . TO_COMA exp
    (105) empty -> .

    TO_COMA         shift and go to state 121
    TO_CORCIERRA    reduce using rule 105 (empty -> .)

    moreDimIndex                   shift and go to state 178
    unaDim                         shift and go to state 119
    empty                          shift and go to state 120

state 143

    (80) compara2 -> bloque TO_LLACIERRA maybeElse .

    PR_end          reduce using rule 80 (compara2 -> bloque TO_LLACIERRA maybeElse .)
    PR_return       reduce using rule 80 (compara2 -> bloque TO_LLACIERRA maybeElse .)
    PR_print        reduce using rule 80 (compara2 -> bloque TO_LLACIERRA maybeElse .)
    ID              reduce using rule 80 (compara2 -> bloque TO_LLACIERRA maybeElse .)
    PR_arreglo      reduce using rule 80 (compara2 -> bloque TO_LLACIERRA maybeElse .)
    PR_loop         reduce using rule 80 (compara2 -> bloque TO_LLACIERRA maybeElse .)
    PR_if           reduce using rule 80 (compara2 -> bloque TO_LLACIERRA maybeElse .)
    PR_var          reduce using rule 80 (compara2 -> bloque TO_LLACIERRA maybeElse .)


state 144

    (81) maybeElse -> checkElse . doElse
    (84) doElse -> . bloque TO_LLACIERRA
    (56) bloque -> . estructura bloque
    (57) bloque -> . PR_end
    (58) estructura -> . assign
    (59) estructura -> . loop
    (60) estructura -> . comparacion
    (61) estructura -> . return
    (62) estructura -> . funcCall
    (63) estructura -> . decVar
    (64) estructura -> . write
    (24) assign -> . assignTo OP_IGUAL megaExp
    (46) loop -> . loop1 loop2 loop3
    (78) comparacion -> . compara1 compara2
    (77) return -> . PR_return megaExp
    (65) funcCall -> . funcCall1 funcCall2
    (9) decVar -> . var decVar
    (10) decVar -> . empty
    (66) write -> . PR_print TO_PARABRE superExp action TO_PARCIERRA
    (25) assignTo -> . ID
    (26) assignTo -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (47) loop1 -> . PR_loop
    (79) compara1 -> . PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE
    (68) funcCall1 -> . ID TO_PARABRE
    (13) var -> . var1 arrayCreate
    (105) empty -> .
    (14) var1 -> . PR_var tipo ID

  ! shift/reduce conflict for PR_end resolved as shift
  ! shift/reduce conflict for PR_return resolved as shift
  ! shift/reduce conflict for PR_print resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PR_arreglo resolved as shift
  ! shift/reduce conflict for PR_loop resolved as shift
  ! shift/reduce conflict for PR_if resolved as shift
  ! shift/reduce conflict for PR_var resolved as shift
    PR_end          shift and go to state 31
    PR_return       shift and go to state 42
    PR_print        shift and go to state 44
    ID              shift and go to state 45
    PR_arreglo      shift and go to state 46
    PR_loop         shift and go to state 47
    PR_if           shift and go to state 48
    PR_var          shift and go to state 9

  ! PR_end          [ reduce using rule 105 (empty -> .) ]
  ! PR_return       [ reduce using rule 105 (empty -> .) ]
  ! PR_print        [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! PR_arreglo      [ reduce using rule 105 (empty -> .) ]
  ! PR_loop         [ reduce using rule 105 (empty -> .) ]
  ! PR_if           [ reduce using rule 105 (empty -> .) ]
  ! PR_var          [ reduce using rule 105 (empty -> .) ]

    doElse                         shift and go to state 179
    bloque                         shift and go to state 180
    estructura                     shift and go to state 30
    assign                         shift and go to state 32
    loop                           shift and go to state 33
    comparacion                    shift and go to state 34
    return                         shift and go to state 35
    funcCall                       shift and go to state 36
    decVar                         shift and go to state 37
    write                          shift and go to state 38
    assignTo                       shift and go to state 39
    loop1                          shift and go to state 40
    compara1                       shift and go to state 41
    funcCall1                      shift and go to state 43
    var                            shift and go to state 6
    empty                          shift and go to state 7
    var1                           shift and go to state 8

state 145

    (82) maybeElse -> empty .

    PR_end          reduce using rule 82 (maybeElse -> empty .)
    PR_return       reduce using rule 82 (maybeElse -> empty .)
    PR_print        reduce using rule 82 (maybeElse -> empty .)
    ID              reduce using rule 82 (maybeElse -> empty .)
    PR_arreglo      reduce using rule 82 (maybeElse -> empty .)
    PR_loop         reduce using rule 82 (maybeElse -> empty .)
    PR_if           reduce using rule 82 (maybeElse -> empty .)
    PR_var          reduce using rule 82 (maybeElse -> empty .)


state 146

    (83) checkElse -> PR_else . TO_LLAABRE

    TO_LLAABRE      shift and go to state 181


state 147

    (85) megaExp -> maybeNot superExp anotherMega .

    PR_end          reduce using rule 85 (megaExp -> maybeNot superExp anotherMega .)
    PR_return       reduce using rule 85 (megaExp -> maybeNot superExp anotherMega .)
    PR_print        reduce using rule 85 (megaExp -> maybeNot superExp anotherMega .)
    ID              reduce using rule 85 (megaExp -> maybeNot superExp anotherMega .)
    PR_arreglo      reduce using rule 85 (megaExp -> maybeNot superExp anotherMega .)
    PR_loop         reduce using rule 85 (megaExp -> maybeNot superExp anotherMega .)
    PR_if           reduce using rule 85 (megaExp -> maybeNot superExp anotherMega .)
    PR_var          reduce using rule 85 (megaExp -> maybeNot superExp anotherMega .)
    TO_PARCIERRA    reduce using rule 85 (megaExp -> maybeNot superExp anotherMega .)
    TO_COMA         reduce using rule 85 (megaExp -> maybeNot superExp anotherMega .)


state 148

    (88) anotherMega -> opLogico . megaExp
    (85) megaExp -> . maybeNot superExp anotherMega
    (86) maybeNot -> . PR_negacion
    (87) maybeNot -> . empty
    (105) empty -> .

    PR_negacion     shift and go to state 75
    TO_PARABRE      reduce using rule 105 (empty -> .)
    TO_INT          reduce using rule 105 (empty -> .)
    TO_FLOAT        reduce using rule 105 (empty -> .)
    PR_true         reduce using rule 105 (empty -> .)
    PR_false        reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    PR_arreglo      reduce using rule 105 (empty -> .)

    megaExp                        shift and go to state 182
    maybeNot                       shift and go to state 74
    empty                          shift and go to state 76

state 149

    (89) anotherMega -> empty .

    PR_end          reduce using rule 89 (anotherMega -> empty .)
    PR_return       reduce using rule 89 (anotherMega -> empty .)
    PR_print        reduce using rule 89 (anotherMega -> empty .)
    ID              reduce using rule 89 (anotherMega -> empty .)
    PR_arreglo      reduce using rule 89 (anotherMega -> empty .)
    PR_loop         reduce using rule 89 (anotherMega -> empty .)
    PR_if           reduce using rule 89 (anotherMega -> empty .)
    PR_var          reduce using rule 89 (anotherMega -> empty .)
    TO_PARCIERRA    reduce using rule 89 (anotherMega -> empty .)
    TO_COMA         reduce using rule 89 (anotherMega -> empty .)


state 150

    (44) opLogico -> PR_interseccion .

    PR_negacion     reduce using rule 44 (opLogico -> PR_interseccion .)
    TO_PARABRE      reduce using rule 44 (opLogico -> PR_interseccion .)
    TO_INT          reduce using rule 44 (opLogico -> PR_interseccion .)
    TO_FLOAT        reduce using rule 44 (opLogico -> PR_interseccion .)
    PR_true         reduce using rule 44 (opLogico -> PR_interseccion .)
    PR_false        reduce using rule 44 (opLogico -> PR_interseccion .)
    ID              reduce using rule 44 (opLogico -> PR_interseccion .)
    PR_arreglo      reduce using rule 44 (opLogico -> PR_interseccion .)


state 151

    (45) opLogico -> PR_union .

    PR_negacion     reduce using rule 45 (opLogico -> PR_union .)
    TO_PARABRE      reduce using rule 45 (opLogico -> PR_union .)
    TO_INT          reduce using rule 45 (opLogico -> PR_union .)
    TO_FLOAT        reduce using rule 45 (opLogico -> PR_union .)
    PR_true         reduce using rule 45 (opLogico -> PR_union .)
    PR_false        reduce using rule 45 (opLogico -> PR_union .)
    ID              reduce using rule 45 (opLogico -> PR_union .)
    PR_arreglo      reduce using rule 45 (opLogico -> PR_union .)


state 152

    (90) superExp -> exp maybeRel .

    PR_interseccion reduce using rule 90 (superExp -> exp maybeRel .)
    PR_union        reduce using rule 90 (superExp -> exp maybeRel .)
    PR_end          reduce using rule 90 (superExp -> exp maybeRel .)
    PR_return       reduce using rule 90 (superExp -> exp maybeRel .)
    PR_print        reduce using rule 90 (superExp -> exp maybeRel .)
    ID              reduce using rule 90 (superExp -> exp maybeRel .)
    PR_arreglo      reduce using rule 90 (superExp -> exp maybeRel .)
    PR_loop         reduce using rule 90 (superExp -> exp maybeRel .)
    PR_if           reduce using rule 90 (superExp -> exp maybeRel .)
    PR_var          reduce using rule 90 (superExp -> exp maybeRel .)
    TO_PARCIERRA    reduce using rule 90 (superExp -> exp maybeRel .)
    TO_COMA         reduce using rule 90 (superExp -> exp maybeRel .)


state 153

    (91) maybeRel -> opRelacional . exp
    (93) exp -> . term anotherExp
    (97) term -> . fact anotherTerm
    (102) fact -> . TO_PARABRE megaExp TO_PARCIERRA
    (103) fact -> . funcCall
    (104) fact -> . val
    (65) funcCall -> . funcCall1 funcCall2
    (2) val -> . TO_INT
    (3) val -> . TO_FLOAT
    (4) val -> . PR_true
    (5) val -> . PR_false
    (6) val -> . ID
    (7) val -> . PR_arreglo firstIndex moreDimIndex TO_CORCIERRA
    (68) funcCall1 -> . ID TO_PARABRE

    TO_PARABRE      shift and go to state 97
    TO_INT          shift and go to state 103
    TO_FLOAT        shift and go to state 104
    PR_true         shift and go to state 105
    PR_false        shift and go to state 106
    ID              shift and go to state 107
    PR_arreglo      shift and go to state 108

    exp                            shift and go to state 183
    term                           shift and go to state 99
    fact                           shift and go to state 100
    funcCall                       shift and go to state 101
    val                            shift and go to state 102
    funcCall1                      shift and go to state 43

state 154

    (92) maybeRel -> empty .

    PR_interseccion reduce using rule 92 (maybeRel -> empty .)
    PR_union        reduce using rule 92 (maybeRel -> empty .)
    PR_end          reduce using rule 92 (maybeRel -> empty .)
    PR_return       reduce using rule 92 (maybeRel -> empty .)
    PR_print        reduce using rule 92 (maybeRel -> empty .)
    ID              reduce using rule 92 (maybeRel -> empty .)
    PR_arreglo      reduce using rule 92 (maybeRel -> empty .)
    PR_loop         reduce using rule 92 (maybeRel -> empty .)
    PR_if           reduce using rule 92 (maybeRel -> empty .)
    PR_var          reduce using rule 92 (maybeRel -> empty .)
    TO_PARCIERRA    reduce using rule 92 (maybeRel -> empty .)
    TO_COMA         reduce using rule 92 (maybeRel -> empty .)


state 155

    (50) opRelacional -> OP_DOBLEIGUAL .

    TO_PARABRE      reduce using rule 50 (opRelacional -> OP_DOBLEIGUAL .)
    TO_INT          reduce using rule 50 (opRelacional -> OP_DOBLEIGUAL .)
    TO_FLOAT        reduce using rule 50 (opRelacional -> OP_DOBLEIGUAL .)
    PR_true         reduce using rule 50 (opRelacional -> OP_DOBLEIGUAL .)
    PR_false        reduce using rule 50 (opRelacional -> OP_DOBLEIGUAL .)
    ID              reduce using rule 50 (opRelacional -> OP_DOBLEIGUAL .)
    PR_arreglo      reduce using rule 50 (opRelacional -> OP_DOBLEIGUAL .)


state 156

    (51) opRelacional -> OP_DIFDE .

    TO_PARABRE      reduce using rule 51 (opRelacional -> OP_DIFDE .)
    TO_INT          reduce using rule 51 (opRelacional -> OP_DIFDE .)
    TO_FLOAT        reduce using rule 51 (opRelacional -> OP_DIFDE .)
    PR_true         reduce using rule 51 (opRelacional -> OP_DIFDE .)
    PR_false        reduce using rule 51 (opRelacional -> OP_DIFDE .)
    ID              reduce using rule 51 (opRelacional -> OP_DIFDE .)
    PR_arreglo      reduce using rule 51 (opRelacional -> OP_DIFDE .)


state 157

    (52) opRelacional -> OP_MENORQUE .

    TO_PARABRE      reduce using rule 52 (opRelacional -> OP_MENORQUE .)
    TO_INT          reduce using rule 52 (opRelacional -> OP_MENORQUE .)
    TO_FLOAT        reduce using rule 52 (opRelacional -> OP_MENORQUE .)
    PR_true         reduce using rule 52 (opRelacional -> OP_MENORQUE .)
    PR_false        reduce using rule 52 (opRelacional -> OP_MENORQUE .)
    ID              reduce using rule 52 (opRelacional -> OP_MENORQUE .)
    PR_arreglo      reduce using rule 52 (opRelacional -> OP_MENORQUE .)


state 158

    (53) opRelacional -> OP_MENOROIGUAL .

    TO_PARABRE      reduce using rule 53 (opRelacional -> OP_MENOROIGUAL .)
    TO_INT          reduce using rule 53 (opRelacional -> OP_MENOROIGUAL .)
    TO_FLOAT        reduce using rule 53 (opRelacional -> OP_MENOROIGUAL .)
    PR_true         reduce using rule 53 (opRelacional -> OP_MENOROIGUAL .)
    PR_false        reduce using rule 53 (opRelacional -> OP_MENOROIGUAL .)
    ID              reduce using rule 53 (opRelacional -> OP_MENOROIGUAL .)
    PR_arreglo      reduce using rule 53 (opRelacional -> OP_MENOROIGUAL .)


state 159

    (54) opRelacional -> OP_MAYORQUE .

    TO_PARABRE      reduce using rule 54 (opRelacional -> OP_MAYORQUE .)
    TO_INT          reduce using rule 54 (opRelacional -> OP_MAYORQUE .)
    TO_FLOAT        reduce using rule 54 (opRelacional -> OP_MAYORQUE .)
    PR_true         reduce using rule 54 (opRelacional -> OP_MAYORQUE .)
    PR_false        reduce using rule 54 (opRelacional -> OP_MAYORQUE .)
    ID              reduce using rule 54 (opRelacional -> OP_MAYORQUE .)
    PR_arreglo      reduce using rule 54 (opRelacional -> OP_MAYORQUE .)


state 160

    (55) opRelacional -> OP_MAYOROIGUAL .

    TO_PARABRE      reduce using rule 55 (opRelacional -> OP_MAYOROIGUAL .)
    TO_INT          reduce using rule 55 (opRelacional -> OP_MAYOROIGUAL .)
    TO_FLOAT        reduce using rule 55 (opRelacional -> OP_MAYOROIGUAL .)
    PR_true         reduce using rule 55 (opRelacional -> OP_MAYOROIGUAL .)
    PR_false        reduce using rule 55 (opRelacional -> OP_MAYOROIGUAL .)
    ID              reduce using rule 55 (opRelacional -> OP_MAYOROIGUAL .)
    PR_arreglo      reduce using rule 55 (opRelacional -> OP_MAYOROIGUAL .)


state 161

    (74) moreParamVals -> TO_COMA unParam . moreParamVals
    (74) moreParamVals -> . TO_COMA unParam moreParamVals
    (75) moreParamVals -> . empty
    (105) empty -> .

    TO_COMA         shift and go to state 114
    TO_PARCIERRA    reduce using rule 105 (empty -> .)

    moreParamVals                  shift and go to state 184
    empty                          shift and go to state 115

state 162

    (76) unParam -> ID TO_DOSPTOS megaExp .

    TO_COMA         reduce using rule 76 (unParam -> ID TO_DOSPTOS megaExp .)
    TO_PARCIERRA    reduce using rule 76 (unParam -> ID TO_DOSPTOS megaExp .)


state 163

    (66) write -> PR_print TO_PARABRE superExp action . TO_PARCIERRA

    TO_PARCIERRA    shift and go to state 185


state 164

    (67) action -> empty .

    TO_PARCIERRA    reduce using rule 67 (action -> empty .)


state 165

    (26) assignTo -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .

    OP_IGUAL        reduce using rule 26 (assignTo -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)


state 166

    (28) moreDimIndex -> unaDim moreDimIndex .

    TO_CORCIERRA    reduce using rule 28 (moreDimIndex -> unaDim moreDimIndex .)


state 167

    (30) unaDim -> TO_COMA exp .

    TO_COMA         reduce using rule 30 (unaDim -> TO_COMA exp .)
    TO_CORCIERRA    reduce using rule 30 (unaDim -> TO_COMA exp .)


state 168

    (27) firstIndex -> ID TO_CORABRE exp .

    TO_COMA         reduce using rule 27 (firstIndex -> ID TO_CORABRE exp .)
    TO_CORCIERRA    reduce using rule 27 (firstIndex -> ID TO_CORABRE exp .)


state 169

    (79) compara1 -> PR_if TO_PARABRE megaExp TO_PARCIERRA . TO_LLAABRE

    TO_LLAABRE      shift and go to state 186


state 170

    (40) moreParams -> TO_COMA tipo . ID moreParams

    ID              shift and go to state 187


state 171

    (49) loop3 -> TO_LLAABRE bloque TO_LLACIERRA .

    PR_end          reduce using rule 49 (loop3 -> TO_LLAABRE bloque TO_LLACIERRA .)
    PR_return       reduce using rule 49 (loop3 -> TO_LLAABRE bloque TO_LLACIERRA .)
    PR_print        reduce using rule 49 (loop3 -> TO_LLAABRE bloque TO_LLACIERRA .)
    ID              reduce using rule 49 (loop3 -> TO_LLAABRE bloque TO_LLACIERRA .)
    PR_arreglo      reduce using rule 49 (loop3 -> TO_LLAABRE bloque TO_LLACIERRA .)
    PR_loop         reduce using rule 49 (loop3 -> TO_LLAABRE bloque TO_LLACIERRA .)
    PR_if           reduce using rule 49 (loop3 -> TO_LLAABRE bloque TO_LLACIERRA .)
    PR_var          reduce using rule 49 (loop3 -> TO_LLAABRE bloque TO_LLACIERRA .)


state 172

    (102) fact -> TO_PARABRE megaExp TO_PARCIERRA .

    OP_MULT         reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    OP_DIV          reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    OP_RESID        reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    OP_MAS          reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    OP_MENOS        reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    TO_PARCIERRA    reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    OP_DOBLEIGUAL   reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    OP_DIFDE        reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    OP_MENORQUE     reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    OP_MENOROIGUAL  reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    OP_MAYORQUE     reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    OP_MAYOROIGUAL  reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    PR_interseccion reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    PR_union        reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    PR_end          reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    PR_return       reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    PR_print        reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    ID              reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    PR_arreglo      reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    PR_loop         reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    PR_if           reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    PR_var          reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    TO_COMA         reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)
    TO_CORCIERRA    reduce using rule 102 (fact -> TO_PARABRE megaExp TO_PARCIERRA .)


state 173

    (94) anotherExp -> OP_MAS exp .

    TO_PARCIERRA    reduce using rule 94 (anotherExp -> OP_MAS exp .)
    OP_DOBLEIGUAL   reduce using rule 94 (anotherExp -> OP_MAS exp .)
    OP_DIFDE        reduce using rule 94 (anotherExp -> OP_MAS exp .)
    OP_MENORQUE     reduce using rule 94 (anotherExp -> OP_MAS exp .)
    OP_MENOROIGUAL  reduce using rule 94 (anotherExp -> OP_MAS exp .)
    OP_MAYORQUE     reduce using rule 94 (anotherExp -> OP_MAS exp .)
    OP_MAYOROIGUAL  reduce using rule 94 (anotherExp -> OP_MAS exp .)
    PR_interseccion reduce using rule 94 (anotherExp -> OP_MAS exp .)
    PR_union        reduce using rule 94 (anotherExp -> OP_MAS exp .)
    PR_end          reduce using rule 94 (anotherExp -> OP_MAS exp .)
    PR_return       reduce using rule 94 (anotherExp -> OP_MAS exp .)
    PR_print        reduce using rule 94 (anotherExp -> OP_MAS exp .)
    ID              reduce using rule 94 (anotherExp -> OP_MAS exp .)
    PR_arreglo      reduce using rule 94 (anotherExp -> OP_MAS exp .)
    PR_loop         reduce using rule 94 (anotherExp -> OP_MAS exp .)
    PR_if           reduce using rule 94 (anotherExp -> OP_MAS exp .)
    PR_var          reduce using rule 94 (anotherExp -> OP_MAS exp .)
    TO_COMA         reduce using rule 94 (anotherExp -> OP_MAS exp .)
    TO_CORCIERRA    reduce using rule 94 (anotherExp -> OP_MAS exp .)


state 174

    (95) anotherExp -> OP_MENOS exp .

    TO_PARCIERRA    reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    OP_DOBLEIGUAL   reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    OP_DIFDE        reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    OP_MENORQUE     reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    OP_MENOROIGUAL  reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    OP_MAYORQUE     reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    OP_MAYOROIGUAL  reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    PR_interseccion reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    PR_union        reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    PR_end          reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    PR_return       reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    PR_print        reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    ID              reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    PR_arreglo      reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    PR_loop         reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    PR_if           reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    PR_var          reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    TO_COMA         reduce using rule 95 (anotherExp -> OP_MENOS exp .)
    TO_CORCIERRA    reduce using rule 95 (anotherExp -> OP_MENOS exp .)


state 175

    (98) anotherTerm -> OP_MULT term .

    OP_MAS          reduce using rule 98 (anotherTerm -> OP_MULT term .)
    OP_MENOS        reduce using rule 98 (anotherTerm -> OP_MULT term .)
    TO_PARCIERRA    reduce using rule 98 (anotherTerm -> OP_MULT term .)
    OP_DOBLEIGUAL   reduce using rule 98 (anotherTerm -> OP_MULT term .)
    OP_DIFDE        reduce using rule 98 (anotherTerm -> OP_MULT term .)
    OP_MENORQUE     reduce using rule 98 (anotherTerm -> OP_MULT term .)
    OP_MENOROIGUAL  reduce using rule 98 (anotherTerm -> OP_MULT term .)
    OP_MAYORQUE     reduce using rule 98 (anotherTerm -> OP_MULT term .)
    OP_MAYOROIGUAL  reduce using rule 98 (anotherTerm -> OP_MULT term .)
    PR_interseccion reduce using rule 98 (anotherTerm -> OP_MULT term .)
    PR_union        reduce using rule 98 (anotherTerm -> OP_MULT term .)
    PR_end          reduce using rule 98 (anotherTerm -> OP_MULT term .)
    PR_return       reduce using rule 98 (anotherTerm -> OP_MULT term .)
    PR_print        reduce using rule 98 (anotherTerm -> OP_MULT term .)
    ID              reduce using rule 98 (anotherTerm -> OP_MULT term .)
    PR_arreglo      reduce using rule 98 (anotherTerm -> OP_MULT term .)
    PR_loop         reduce using rule 98 (anotherTerm -> OP_MULT term .)
    PR_if           reduce using rule 98 (anotherTerm -> OP_MULT term .)
    PR_var          reduce using rule 98 (anotherTerm -> OP_MULT term .)
    TO_COMA         reduce using rule 98 (anotherTerm -> OP_MULT term .)
    TO_CORCIERRA    reduce using rule 98 (anotherTerm -> OP_MULT term .)


state 176

    (99) anotherTerm -> OP_DIV term .

    OP_MAS          reduce using rule 99 (anotherTerm -> OP_DIV term .)
    OP_MENOS        reduce using rule 99 (anotherTerm -> OP_DIV term .)
    TO_PARCIERRA    reduce using rule 99 (anotherTerm -> OP_DIV term .)
    OP_DOBLEIGUAL   reduce using rule 99 (anotherTerm -> OP_DIV term .)
    OP_DIFDE        reduce using rule 99 (anotherTerm -> OP_DIV term .)
    OP_MENORQUE     reduce using rule 99 (anotherTerm -> OP_DIV term .)
    OP_MENOROIGUAL  reduce using rule 99 (anotherTerm -> OP_DIV term .)
    OP_MAYORQUE     reduce using rule 99 (anotherTerm -> OP_DIV term .)
    OP_MAYOROIGUAL  reduce using rule 99 (anotherTerm -> OP_DIV term .)
    PR_interseccion reduce using rule 99 (anotherTerm -> OP_DIV term .)
    PR_union        reduce using rule 99 (anotherTerm -> OP_DIV term .)
    PR_end          reduce using rule 99 (anotherTerm -> OP_DIV term .)
    PR_return       reduce using rule 99 (anotherTerm -> OP_DIV term .)
    PR_print        reduce using rule 99 (anotherTerm -> OP_DIV term .)
    ID              reduce using rule 99 (anotherTerm -> OP_DIV term .)
    PR_arreglo      reduce using rule 99 (anotherTerm -> OP_DIV term .)
    PR_loop         reduce using rule 99 (anotherTerm -> OP_DIV term .)
    PR_if           reduce using rule 99 (anotherTerm -> OP_DIV term .)
    PR_var          reduce using rule 99 (anotherTerm -> OP_DIV term .)
    TO_COMA         reduce using rule 99 (anotherTerm -> OP_DIV term .)
    TO_CORCIERRA    reduce using rule 99 (anotherTerm -> OP_DIV term .)


state 177

    (100) anotherTerm -> OP_RESID term .

    OP_MAS          reduce using rule 100 (anotherTerm -> OP_RESID term .)
    OP_MENOS        reduce using rule 100 (anotherTerm -> OP_RESID term .)
    TO_PARCIERRA    reduce using rule 100 (anotherTerm -> OP_RESID term .)
    OP_DOBLEIGUAL   reduce using rule 100 (anotherTerm -> OP_RESID term .)
    OP_DIFDE        reduce using rule 100 (anotherTerm -> OP_RESID term .)
    OP_MENORQUE     reduce using rule 100 (anotherTerm -> OP_RESID term .)
    OP_MENOROIGUAL  reduce using rule 100 (anotherTerm -> OP_RESID term .)
    OP_MAYORQUE     reduce using rule 100 (anotherTerm -> OP_RESID term .)
    OP_MAYOROIGUAL  reduce using rule 100 (anotherTerm -> OP_RESID term .)
    PR_interseccion reduce using rule 100 (anotherTerm -> OP_RESID term .)
    PR_union        reduce using rule 100 (anotherTerm -> OP_RESID term .)
    PR_end          reduce using rule 100 (anotherTerm -> OP_RESID term .)
    PR_return       reduce using rule 100 (anotherTerm -> OP_RESID term .)
    PR_print        reduce using rule 100 (anotherTerm -> OP_RESID term .)
    ID              reduce using rule 100 (anotherTerm -> OP_RESID term .)
    PR_arreglo      reduce using rule 100 (anotherTerm -> OP_RESID term .)
    PR_loop         reduce using rule 100 (anotherTerm -> OP_RESID term .)
    PR_if           reduce using rule 100 (anotherTerm -> OP_RESID term .)
    PR_var          reduce using rule 100 (anotherTerm -> OP_RESID term .)
    TO_COMA         reduce using rule 100 (anotherTerm -> OP_RESID term .)
    TO_CORCIERRA    reduce using rule 100 (anotherTerm -> OP_RESID term .)


state 178

    (7) val -> PR_arreglo firstIndex moreDimIndex . TO_CORCIERRA

    TO_CORCIERRA    shift and go to state 188


state 179

    (81) maybeElse -> checkElse doElse .

    PR_end          reduce using rule 81 (maybeElse -> checkElse doElse .)
    PR_return       reduce using rule 81 (maybeElse -> checkElse doElse .)
    PR_print        reduce using rule 81 (maybeElse -> checkElse doElse .)
    ID              reduce using rule 81 (maybeElse -> checkElse doElse .)
    PR_arreglo      reduce using rule 81 (maybeElse -> checkElse doElse .)
    PR_loop         reduce using rule 81 (maybeElse -> checkElse doElse .)
    PR_if           reduce using rule 81 (maybeElse -> checkElse doElse .)
    PR_var          reduce using rule 81 (maybeElse -> checkElse doElse .)


state 180

    (84) doElse -> bloque . TO_LLACIERRA

    TO_LLACIERRA    shift and go to state 189


state 181

    (83) checkElse -> PR_else TO_LLAABRE .

    PR_end          reduce using rule 83 (checkElse -> PR_else TO_LLAABRE .)
    PR_return       reduce using rule 83 (checkElse -> PR_else TO_LLAABRE .)
    PR_print        reduce using rule 83 (checkElse -> PR_else TO_LLAABRE .)
    ID              reduce using rule 83 (checkElse -> PR_else TO_LLAABRE .)
    PR_arreglo      reduce using rule 83 (checkElse -> PR_else TO_LLAABRE .)
    PR_loop         reduce using rule 83 (checkElse -> PR_else TO_LLAABRE .)
    PR_if           reduce using rule 83 (checkElse -> PR_else TO_LLAABRE .)
    PR_var          reduce using rule 83 (checkElse -> PR_else TO_LLAABRE .)


state 182

    (88) anotherMega -> opLogico megaExp .

    PR_end          reduce using rule 88 (anotherMega -> opLogico megaExp .)
    PR_return       reduce using rule 88 (anotherMega -> opLogico megaExp .)
    PR_print        reduce using rule 88 (anotherMega -> opLogico megaExp .)
    ID              reduce using rule 88 (anotherMega -> opLogico megaExp .)
    PR_arreglo      reduce using rule 88 (anotherMega -> opLogico megaExp .)
    PR_loop         reduce using rule 88 (anotherMega -> opLogico megaExp .)
    PR_if           reduce using rule 88 (anotherMega -> opLogico megaExp .)
    PR_var          reduce using rule 88 (anotherMega -> opLogico megaExp .)
    TO_PARCIERRA    reduce using rule 88 (anotherMega -> opLogico megaExp .)
    TO_COMA         reduce using rule 88 (anotherMega -> opLogico megaExp .)


state 183

    (91) maybeRel -> opRelacional exp .

    PR_interseccion reduce using rule 91 (maybeRel -> opRelacional exp .)
    PR_union        reduce using rule 91 (maybeRel -> opRelacional exp .)
    PR_end          reduce using rule 91 (maybeRel -> opRelacional exp .)
    PR_return       reduce using rule 91 (maybeRel -> opRelacional exp .)
    PR_print        reduce using rule 91 (maybeRel -> opRelacional exp .)
    ID              reduce using rule 91 (maybeRel -> opRelacional exp .)
    PR_arreglo      reduce using rule 91 (maybeRel -> opRelacional exp .)
    PR_loop         reduce using rule 91 (maybeRel -> opRelacional exp .)
    PR_if           reduce using rule 91 (maybeRel -> opRelacional exp .)
    PR_var          reduce using rule 91 (maybeRel -> opRelacional exp .)
    TO_PARCIERRA    reduce using rule 91 (maybeRel -> opRelacional exp .)
    TO_COMA         reduce using rule 91 (maybeRel -> opRelacional exp .)


state 184

    (74) moreParamVals -> TO_COMA unParam moreParamVals .

    TO_PARCIERRA    reduce using rule 74 (moreParamVals -> TO_COMA unParam moreParamVals .)


state 185

    (66) write -> PR_print TO_PARABRE superExp action TO_PARCIERRA .

    PR_end          reduce using rule 66 (write -> PR_print TO_PARABRE superExp action TO_PARCIERRA .)
    PR_return       reduce using rule 66 (write -> PR_print TO_PARABRE superExp action TO_PARCIERRA .)
    PR_print        reduce using rule 66 (write -> PR_print TO_PARABRE superExp action TO_PARCIERRA .)
    ID              reduce using rule 66 (write -> PR_print TO_PARABRE superExp action TO_PARCIERRA .)
    PR_arreglo      reduce using rule 66 (write -> PR_print TO_PARABRE superExp action TO_PARCIERRA .)
    PR_loop         reduce using rule 66 (write -> PR_print TO_PARABRE superExp action TO_PARCIERRA .)
    PR_if           reduce using rule 66 (write -> PR_print TO_PARABRE superExp action TO_PARCIERRA .)
    PR_var          reduce using rule 66 (write -> PR_print TO_PARABRE superExp action TO_PARCIERRA .)


state 186

    (79) compara1 -> PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE .

    PR_end          reduce using rule 79 (compara1 -> PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE .)
    PR_return       reduce using rule 79 (compara1 -> PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE .)
    PR_print        reduce using rule 79 (compara1 -> PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE .)
    ID              reduce using rule 79 (compara1 -> PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE .)
    PR_arreglo      reduce using rule 79 (compara1 -> PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE .)
    PR_loop         reduce using rule 79 (compara1 -> PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE .)
    PR_if           reduce using rule 79 (compara1 -> PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE .)
    PR_var          reduce using rule 79 (compara1 -> PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE .)


state 187

    (40) moreParams -> TO_COMA tipo ID . moreParams
    (40) moreParams -> . TO_COMA tipo ID moreParams
    (41) moreParams -> . empty
    (105) empty -> .

    TO_COMA         shift and go to state 127
    TO_PARCIERRA    reduce using rule 105 (empty -> .)

    moreParams                     shift and go to state 190
    empty                          shift and go to state 128

state 188

    (7) val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .

    OP_MULT         reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    OP_DIV          reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    OP_RESID        reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    OP_MAS          reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    OP_MENOS        reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    TO_PARCIERRA    reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    OP_DOBLEIGUAL   reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    OP_DIFDE        reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    OP_MENORQUE     reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    OP_MENOROIGUAL  reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    OP_MAYORQUE     reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    OP_MAYOROIGUAL  reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    PR_interseccion reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    PR_union        reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    PR_end          reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    PR_return       reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    PR_print        reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    ID              reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    PR_arreglo      reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    PR_loop         reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    PR_if           reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    PR_var          reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    TO_COMA         reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)
    TO_CORCIERRA    reduce using rule 7 (val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA .)


state 189

    (84) doElse -> bloque TO_LLACIERRA .

    PR_end          reduce using rule 84 (doElse -> bloque TO_LLACIERRA .)
    PR_return       reduce using rule 84 (doElse -> bloque TO_LLACIERRA .)
    PR_print        reduce using rule 84 (doElse -> bloque TO_LLACIERRA .)
    ID              reduce using rule 84 (doElse -> bloque TO_LLACIERRA .)
    PR_arreglo      reduce using rule 84 (doElse -> bloque TO_LLACIERRA .)
    PR_loop         reduce using rule 84 (doElse -> bloque TO_LLACIERRA .)
    PR_if           reduce using rule 84 (doElse -> bloque TO_LLACIERRA .)
    PR_var          reduce using rule 84 (doElse -> bloque TO_LLACIERRA .)


state 190

    (40) moreParams -> TO_COMA tipo ID moreParams .

    TO_PARCIERRA    reduce using rule 40 (moreParams -> TO_COMA tipo ID moreParams .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PR_var in state 6 resolved as shift
WARNING: shift/reduce conflict for PR_end in state 11 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 11 resolved as shift
WARNING: shift/reduce conflict for PR_print in state 11 resolved as shift
WARNING: shift/reduce conflict for ID in state 11 resolved as shift
WARNING: shift/reduce conflict for PR_arreglo in state 11 resolved as shift
WARNING: shift/reduce conflict for PR_loop in state 11 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 11 resolved as shift
WARNING: shift/reduce conflict for PR_var in state 11 resolved as shift
WARNING: shift/reduce conflict for PR_var in state 16 resolved as shift
WARNING: shift/reduce conflict for PR_end in state 30 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 30 resolved as shift
WARNING: shift/reduce conflict for PR_print in state 30 resolved as shift
WARNING: shift/reduce conflict for ID in state 30 resolved as shift
WARNING: shift/reduce conflict for PR_arreglo in state 30 resolved as shift
WARNING: shift/reduce conflict for PR_loop in state 30 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 30 resolved as shift
WARNING: shift/reduce conflict for PR_var in state 30 resolved as shift
WARNING: shift/reduce conflict for PR_end in state 41 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 41 resolved as shift
WARNING: shift/reduce conflict for PR_print in state 41 resolved as shift
WARNING: shift/reduce conflict for ID in state 41 resolved as shift
WARNING: shift/reduce conflict for PR_arreglo in state 41 resolved as shift
WARNING: shift/reduce conflict for PR_loop in state 41 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 41 resolved as shift
WARNING: shift/reduce conflict for PR_var in state 41 resolved as shift
WARNING: shift/reduce conflict for PR_end in state 52 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 52 resolved as shift
WARNING: shift/reduce conflict for PR_print in state 52 resolved as shift
WARNING: shift/reduce conflict for ID in state 52 resolved as shift
WARNING: shift/reduce conflict for PR_arreglo in state 52 resolved as shift
WARNING: shift/reduce conflict for PR_loop in state 52 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 52 resolved as shift
WARNING: shift/reduce conflict for PR_var in state 52 resolved as shift
WARNING: shift/reduce conflict for PR_end in state 96 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 96 resolved as shift
WARNING: shift/reduce conflict for PR_print in state 96 resolved as shift
WARNING: shift/reduce conflict for ID in state 96 resolved as shift
WARNING: shift/reduce conflict for PR_arreglo in state 96 resolved as shift
WARNING: shift/reduce conflict for PR_loop in state 96 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 96 resolved as shift
WARNING: shift/reduce conflict for PR_var in state 96 resolved as shift
WARNING: shift/reduce conflict for PR_end in state 144 resolved as shift
WARNING: shift/reduce conflict for PR_return in state 144 resolved as shift
WARNING: shift/reduce conflict for PR_print in state 144 resolved as shift
WARNING: shift/reduce conflict for ID in state 144 resolved as shift
WARNING: shift/reduce conflict for PR_arreglo in state 144 resolved as shift
WARNING: shift/reduce conflict for PR_loop in state 144 resolved as shift
WARNING: shift/reduce conflict for PR_if in state 144 resolved as shift
WARNING: shift/reduce conflict for PR_var in state 144 resolved as shift
