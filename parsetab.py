
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ID OP_DIFDE OP_DIV OP_DOBLEIGUAL OP_IGUAL OP_MAS OP_MAYOROIGUAL OP_MAYORQUE OP_MENOROIGUAL OP_MENORQUE OP_MENOS OP_MULT OP_RESID PR_arreglo PR_bool PR_calculaBinomial PR_calculaMedia PR_calculaMediana PR_calculaModa PR_calculaNormal PR_calculaPoisson PR_calculaRegresion PR_else PR_end PR_false PR_float PR_function PR_if PR_int PR_interseccion PR_loop PR_main PR_negacion PR_prediceResultado PR_print PR_program PR_return PR_true PR_union PR_var PR_void TO_COMA TO_CORABRE TO_CORCIERRA TO_DOSPTOS TO_FLOAT TO_INT TO_LLAABRE TO_LLACIERRA TO_PARABRE TO_PARCIERRAprog : PR_program TO_LLAABRE declare mainBlock TO_LLACIERRAval :  TO_INT\n            | TO_FLOAT\n            | PR_true\n            | PR_false\n            | ID\n            | PR_arreglo firstIndex moreDimIndex TO_CORCIERRAdeclare : decVar decFunc decVar : var decVar\n                | empty decFunc : func decFunc\n                | emptyvar : var1 arrayCreatevar1 :  PR_var tipo IDarrayCreate : firstCreate moreDimCreate TO_CORCIERRA\n                   | emptyfirstCreate : TO_CORABRE TO_INTmoreDimCreate : unaDimCreate moreDimCreate\n                     | emptyunaDimCreate : TO_COMA TO_INTtipo : PR_int\n            | PR_float\n            | PR_bool assign : assignTo OP_IGUAL megaExpassignTo : ID\n                | PR_arreglo firstIndex moreDimIndex TO_CORCIERRAfirstIndex : ID TO_CORABRE expmoreDimIndex : unaDim moreDimIndex\n                     | emptyunaDim : TO_COMA expfunc : func1 func2func1 : func11 func12func11 : PR_function decideType ID TO_PARABREfunc12 : params TO_PARCIERRA TO_LLAABREfunc2 : decVar bloque TO_LLACIERRAdecideType : tipo\n                  | PR_voidparams : tipo ID moreParams\n              | emptymoreParams : TO_COMA tipo ID moreParams\n              | emptymainBlock : mainBlock1 bloque TO_LLACIERRAmainBlock1 : PR_main TO_LLAABREopLogico : PR_interseccion\n                | PR_unionloop : loop1 loop2 loop3loop1 : PR_looploop2 : TO_PARABRE exp TO_PARCIERRAloop3 : TO_LLAABRE bloque TO_LLACIERRAopRelacional : OP_DOBLEIGUAL\n                    | OP_DIFDE\n                    | OP_MENORQUE\n                    | OP_MENOROIGUAL\n                    | OP_MAYORQUE\n                    | OP_MAYOROIGUALbloque : estructura bloque\n              | PR_endestructura : assign\n                  | loop\n                  | comparacion\n                  | return\n                  | funcCall\n                  | decVar\n                  | write funcCall : funcCall1 funcCall2\n                | PR_calculaRegresion TO_PARABRE ID TO_PARCIERRA\n                | PR_prediceResultado TO_PARABRE ID TO_PARCIERRA\n                | PR_calculaModa TO_PARABRE ID TO_PARCIERRA\n                | PR_calculaMediana TO_PARABRE ID TO_PARCIERRA\n                | PR_calculaMedia TO_PARABRE ID TO_PARCIERRA\n                | PR_calculaPoisson TO_PARABRE ID TO_PARCIERRA\n                | PR_calculaBinomial TO_PARABRE ID TO_PARCIERRA\n                | PR_calculaNormal TO_PARABRE ID TO_PARCIERRA write : PR_print TO_PARABRE superExp action TO_PARCIERRA action : emptyfuncCall1 : ID TO_PARABREfuncCall2 : paramVals TO_PARCIERRAparamVals : unParam moreParamVals\n                 | emptymoreParamVals : TO_COMA unParam moreParamVals\n                     | emptyunParam : ID TO_DOSPTOS megaExpreturn : PR_return megaExpcomparacion : compara1 compara2compara1 : PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABREcompara2 : bloque TO_LLACIERRA maybeElsemaybeElse : checkElse doElse\n                 | emptycheckElse : PR_else TO_LLAABREdoElse : bloque TO_LLACIERRAmegaExp : maybeNot superExp anotherMegamaybeNot : PR_negacion\n                | emptyanotherMega : opLogico megaExp\n                   | emptysuperExp : exp maybeRelmaybeRel : opRelacional exp\n                | emptyexp : term anotherExpanotherExp : OP_MAS exp\n                  | OP_MENOS exp\n                  | emptyterm : fact anotherTermanotherTerm : OP_MULT term\n                   | OP_DIV term\n                   | OP_RESID term\n                   | emptyfact : TO_PARABRE megaExp TO_PARCIERRA\n            | funcCall\n            | valempty :'
    
_lr_action_items = {'PR_program':([0,],[2,]),'$end':([1,28,],[0,-1,]),'TO_LLAABRE':([2,12,77,104,156,170,201,],[3,57,112,149,-48,213,218,]),'PR_function':([3,5,6,7,8,14,19,20,22,59,73,107,148,],[-111,18,-111,-10,-111,18,-9,-13,-16,-31,-14,-15,-35,]),'PR_main':([3,4,5,6,7,8,13,14,15,19,20,22,58,59,73,107,148,],[-111,12,-111,-111,-10,-111,-8,-111,-12,-9,-13,-16,-11,-31,-14,-15,-35,]),'PR_var':([3,6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,57,60,61,73,79,81,85,107,110,111,112,115,116,117,118,119,120,121,122,123,125,126,127,128,149,157,160,161,165,167,168,169,171,173,176,178,187,188,189,190,191,192,193,194,203,204,205,206,207,208,209,211,213,214,215,217,218,220,221,],[9,9,-10,-111,9,9,-9,-13,-16,9,-58,-59,-60,-61,-62,-63,-64,9,-43,9,-32,-14,-84,-83,-65,-15,-24,-46,9,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-111,-77,-34,-99,-102,-103,-107,-86,9,-88,-91,-95,-96,-98,-66,-67,-68,-69,-70,-71,-72,-73,-49,-108,-100,-101,-104,-105,-106,-87,-89,-94,-97,-74,-85,-7,-90,]),'PR_end':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,57,60,61,73,79,81,85,107,110,111,112,115,116,117,118,119,120,121,122,123,125,126,127,128,149,157,160,161,165,167,168,169,171,173,176,178,187,188,189,190,191,192,193,194,203,204,205,206,207,208,209,211,213,214,215,217,218,220,221,],[-111,-10,-111,31,-111,-9,-13,-16,31,-58,-59,-60,-61,-62,-63,-64,31,-43,31,-32,-14,-84,-83,-65,-15,-24,-46,31,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-111,-77,-34,-99,-102,-103,-107,-86,31,-88,-91,-95,-96,-98,-66,-67,-68,-69,-70,-71,-72,-73,-49,-108,-100,-101,-104,-105,-106,-87,-89,-94,-97,-74,-85,-7,-90,]),'PR_return':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,57,60,61,73,79,81,85,107,110,111,112,115,116,117,118,119,120,121,122,123,125,126,127,128,149,157,160,161,165,167,168,169,171,173,176,178,187,188,189,190,191,192,193,194,203,204,205,206,207,208,209,211,213,214,215,217,218,220,221,],[-111,-10,-111,42,-111,-9,-13,-16,42,-58,-59,-60,-61,-62,-63,-64,42,-43,42,-32,-14,-84,-83,-65,-15,-24,-46,42,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-111,-77,-34,-99,-102,-103,-107,-86,42,-88,-91,-95,-96,-98,-66,-67,-68,-69,-70,-71,-72,-73,-49,-108,-100,-101,-104,-105,-106,-87,-89,-94,-97,-74,-85,-7,-90,]),'PR_calculaRegresion':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,57,60,61,73,76,78,79,81,82,83,84,85,99,102,107,110,111,112,113,115,116,117,118,119,120,121,122,123,125,126,127,128,132,145,146,149,157,158,159,160,161,162,163,164,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,190,191,192,193,194,203,204,205,206,207,208,209,211,213,214,215,217,218,220,221,],[-111,-10,-111,44,-111,-9,-13,-16,44,-58,-59,-60,-61,-62,-63,-64,44,-111,-43,44,-32,-14,-111,44,-84,-83,44,-92,-93,-65,44,-111,-15,-24,-46,44,-111,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-111,-77,-111,44,44,-34,-99,44,44,-102,-103,44,44,44,-107,-86,44,-88,-91,-111,-95,-44,-45,-96,44,-98,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-73,-49,-108,-100,-101,-104,-105,-106,-87,-89,-94,-97,-74,-85,-7,-90,]),'PR_prediceResultado':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,57,60,61,73,76,78,79,81,82,83,84,85,99,102,107,110,111,112,113,115,116,117,118,119,120,121,122,123,125,126,127,128,132,145,146,149,157,158,159,160,161,162,163,164,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,190,191,192,193,194,203,204,205,206,207,208,209,211,213,214,215,217,218,220,221,],[-111,-10,-111,46,-111,-9,-13,-16,46,-58,-59,-60,-61,-62,-63,-64,46,-111,-43,46,-32,-14,-111,46,-84,-83,46,-92,-93,-65,46,-111,-15,-24,-46,46,-111,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-111,-77,-111,46,46,-34,-99,46,46,-102,-103,46,46,46,-107,-86,46,-88,-91,-111,-95,-44,-45,-96,46,-98,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-73,-49,-108,-100,-101,-104,-105,-106,-87,-89,-94,-97,-74,-85,-7,-90,]),'PR_calculaModa':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,57,60,61,73,76,78,79,81,82,83,84,85,99,102,107,110,111,112,113,115,116,117,118,119,120,121,122,123,125,126,127,128,132,145,146,149,157,158,159,160,161,162,163,164,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,190,191,192,193,194,203,204,205,206,207,208,209,211,213,214,215,217,218,220,221,],[-111,-10,-111,47,-111,-9,-13,-16,47,-58,-59,-60,-61,-62,-63,-64,47,-111,-43,47,-32,-14,-111,47,-84,-83,47,-92,-93,-65,47,-111,-15,-24,-46,47,-111,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-111,-77,-111,47,47,-34,-99,47,47,-102,-103,47,47,47,-107,-86,47,-88,-91,-111,-95,-44,-45,-96,47,-98,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-73,-49,-108,-100,-101,-104,-105,-106,-87,-89,-94,-97,-74,-85,-7,-90,]),'PR_calculaMediana':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,57,60,61,73,76,78,79,81,82,83,84,85,99,102,107,110,111,112,113,115,116,117,118,119,120,121,122,123,125,126,127,128,132,145,146,149,157,158,159,160,161,162,163,164,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,190,191,192,193,194,203,204,205,206,207,208,209,211,213,214,215,217,218,220,221,],[-111,-10,-111,48,-111,-9,-13,-16,48,-58,-59,-60,-61,-62,-63,-64,48,-111,-43,48,-32,-14,-111,48,-84,-83,48,-92,-93,-65,48,-111,-15,-24,-46,48,-111,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-111,-77,-111,48,48,-34,-99,48,48,-102,-103,48,48,48,-107,-86,48,-88,-91,-111,-95,-44,-45,-96,48,-98,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-73,-49,-108,-100,-101,-104,-105,-106,-87,-89,-94,-97,-74,-85,-7,-90,]),'PR_calculaMedia':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,57,60,61,73,76,78,79,81,82,83,84,85,99,102,107,110,111,112,113,115,116,117,118,119,120,121,122,123,125,126,127,128,132,145,146,149,157,158,159,160,161,162,163,164,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,190,191,192,193,194,203,204,205,206,207,208,209,211,213,214,215,217,218,220,221,],[-111,-10,-111,49,-111,-9,-13,-16,49,-58,-59,-60,-61,-62,-63,-64,49,-111,-43,49,-32,-14,-111,49,-84,-83,49,-92,-93,-65,49,-111,-15,-24,-46,49,-111,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-111,-77,-111,49,49,-34,-99,49,49,-102,-103,49,49,49,-107,-86,49,-88,-91,-111,-95,-44,-45,-96,49,-98,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-73,-49,-108,-100,-101,-104,-105,-106,-87,-89,-94,-97,-74,-85,-7,-90,]),'PR_calculaPoisson':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,57,60,61,73,76,78,79,81,82,83,84,85,99,102,107,110,111,112,113,115,116,117,118,119,120,121,122,123,125,126,127,128,132,145,146,149,157,158,159,160,161,162,163,164,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,190,191,192,193,194,203,204,205,206,207,208,209,211,213,214,215,217,218,220,221,],[-111,-10,-111,50,-111,-9,-13,-16,50,-58,-59,-60,-61,-62,-63,-64,50,-111,-43,50,-32,-14,-111,50,-84,-83,50,-92,-93,-65,50,-111,-15,-24,-46,50,-111,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-111,-77,-111,50,50,-34,-99,50,50,-102,-103,50,50,50,-107,-86,50,-88,-91,-111,-95,-44,-45,-96,50,-98,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-73,-49,-108,-100,-101,-104,-105,-106,-87,-89,-94,-97,-74,-85,-7,-90,]),'PR_calculaBinomial':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,57,60,61,73,76,78,79,81,82,83,84,85,99,102,107,110,111,112,113,115,116,117,118,119,120,121,122,123,125,126,127,128,132,145,146,149,157,158,159,160,161,162,163,164,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,190,191,192,193,194,203,204,205,206,207,208,209,211,213,214,215,217,218,220,221,],[-111,-10,-111,51,-111,-9,-13,-16,51,-58,-59,-60,-61,-62,-63,-64,51,-111,-43,51,-32,-14,-111,51,-84,-83,51,-92,-93,-65,51,-111,-15,-24,-46,51,-111,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-111,-77,-111,51,51,-34,-99,51,51,-102,-103,51,51,51,-107,-86,51,-88,-91,-111,-95,-44,-45,-96,51,-98,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-73,-49,-108,-100,-101,-104,-105,-106,-87,-89,-94,-97,-74,-85,-7,-90,]),'PR_calculaNormal':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,57,60,61,73,76,78,79,81,82,83,84,85,99,102,107,110,111,112,113,115,116,117,118,119,120,121,122,123,125,126,127,128,132,145,146,149,157,158,159,160,161,162,163,164,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,190,191,192,193,194,203,204,205,206,207,208,209,211,213,214,215,217,218,220,221,],[-111,-10,-111,52,-111,-9,-13,-16,52,-58,-59,-60,-61,-62,-63,-64,52,-111,-43,52,-32,-14,-111,52,-84,-83,52,-92,-93,-65,52,-111,-15,-24,-46,52,-111,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-111,-77,-111,52,52,-34,-99,52,52,-102,-103,52,52,52,-107,-86,52,-88,-91,-111,-95,-44,-45,-96,52,-98,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-73,-49,-108,-100,-101,-104,-105,-106,-87,-89,-94,-97,-74,-85,-7,-90,]),'PR_print':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,57,60,61,73,79,81,85,107,110,111,112,115,116,117,118,119,120,121,122,123,125,126,127,128,149,157,160,161,165,167,168,169,171,173,176,178,187,188,189,190,191,192,193,194,203,204,205,206,207,208,209,211,213,214,215,217,218,220,221,],[-111,-10,-111,53,-111,-9,-13,-16,53,-58,-59,-60,-61,-62,-63,-64,53,-43,53,-32,-14,-84,-83,-65,-15,-24,-46,53,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-111,-77,-34,-99,-102,-103,-107,-86,53,-88,-91,-95,-96,-98,-66,-67,-68,-69,-70,-71,-72,-73,-49,-108,-100,-101,-104,-105,-106,-87,-89,-94,-97,-74,-85,-7,-90,]),'ID':([6,7,8,11,16,19,20,22,24,25,26,27,30,32,33,34,35,36,37,38,41,42,43,54,57,60,61,63,65,66,67,73,76,78,79,81,82,83,84,85,90,91,92,93,94,95,96,97,98,99,102,107,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,132,145,146,149,157,158,159,160,161,162,163,164,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,190,191,192,193,194,202,203,204,205,206,207,208,209,211,213,214,215,217,218,220,221,],[-111,-10,-111,45,-111,-9,-13,-16,73,-21,-22,-23,45,-58,-59,-60,-61,-62,-63,-64,45,-111,89,101,-43,45,-32,105,106,-36,-37,-14,-111,119,-84,-83,119,-92,-93,-65,133,-76,134,135,136,137,138,139,140,119,-111,-15,-24,-46,45,-111,-111,-111,-109,-110,-6,-2,-3,-4,-5,101,-111,-111,-111,-77,89,-111,119,119,-34,-99,119,119,-102,-103,119,119,119,-107,-86,45,-88,-91,-111,-95,-44,-45,-96,119,-98,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-73,219,-49,-108,-100,-101,-104,-105,-106,-87,-89,-94,-97,-74,-85,-7,-90,]),'PR_arreglo':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,57,60,61,73,76,78,79,81,82,83,84,85,99,102,107,110,111,112,113,115,116,117,118,119,120,121,122,123,125,126,127,128,132,145,146,149,157,158,159,160,161,162,163,164,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,187,188,189,190,191,192,193,194,203,204,205,206,207,208,209,211,213,214,215,217,218,220,221,],[-111,-10,-111,54,-111,-9,-13,-16,54,-58,-59,-60,-61,-62,-63,-64,54,-111,-43,54,-32,-14,-111,124,-84,-83,124,-92,-93,-65,124,-111,-15,-24,-46,54,-111,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-111,-77,-111,124,124,-34,-99,124,124,-102,-103,124,124,124,-107,-86,54,-88,-91,-111,-95,-44,-45,-96,124,-98,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-73,-49,-108,-100,-101,-104,-105,-106,-87,-89,-94,-97,-74,-85,-7,-90,]),'PR_loop':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,57,60,61,73,79,81,85,107,110,111,112,115,116,117,118,119,120,121,122,123,125,126,127,128,149,157,160,161,165,167,168,169,171,173,176,178,187,188,189,190,191,192,193,194,203,204,205,206,207,208,209,211,213,214,215,217,218,220,221,],[-111,-10,-111,55,-111,-9,-13,-16,55,-58,-59,-60,-61,-62,-63,-64,55,-43,55,-32,-14,-84,-83,-65,-15,-24,-46,55,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-111,-77,-34,-99,-102,-103,-107,-86,55,-88,-91,-95,-96,-98,-66,-67,-68,-69,-70,-71,-72,-73,-49,-108,-100,-101,-104,-105,-106,-87,-89,-94,-97,-74,-85,-7,-90,]),'PR_if':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,57,60,61,73,79,81,85,107,110,111,112,115,116,117,118,119,120,121,122,123,125,126,127,128,149,157,160,161,165,167,168,169,171,173,176,178,187,188,189,190,191,192,193,194,203,204,205,206,207,208,209,211,213,214,215,217,218,220,221,],[-111,-10,-111,56,-111,-9,-13,-16,56,-58,-59,-60,-61,-62,-63,-64,56,-43,56,-32,-14,-84,-83,-65,-15,-24,-46,56,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-111,-77,-34,-99,-102,-103,-107,-86,56,-88,-91,-95,-96,-98,-66,-67,-68,-69,-70,-71,-72,-73,-49,-108,-100,-101,-104,-105,-106,-87,-89,-94,-97,-74,-85,-7,-90,]),'TO_CORABRE':([8,73,101,],[23,-14,146,]),'PR_int':([9,17,18,151,153,],[25,25,25,25,-33,]),'PR_float':([9,17,18,151,153,],[26,26,26,26,-33,]),'PR_bool':([9,17,18,151,153,],[27,27,27,27,-33,]),'TO_LLACIERRA':([10,29,31,74,75,80,103,154,212,],[28,74,-57,-42,-56,125,148,203,221,]),'TO_PARCIERRA':([17,43,62,64,85,86,87,88,91,105,114,115,116,117,118,119,120,121,122,123,126,127,128,129,131,133,134,135,136,137,138,139,140,141,147,150,152,153,155,157,160,161,165,171,173,176,178,185,186,187,188,189,190,191,192,193,194,195,196,204,205,206,207,208,209,214,215,216,219,220,222,],[-111,-111,104,-39,-65,128,-111,-79,-76,-111,156,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-77,-78,-81,187,188,189,190,191,192,193,194,-111,201,-38,-41,-33,204,-99,-102,-103,-107,-91,-95,-96,-98,-111,-82,-66,-67,-68,-69,-70,-71,-72,-73,217,-75,-108,-100,-101,-104,-105,-106,-94,-97,-80,-111,-7,-40,]),'PR_void':([18,],[67,]),'TO_COMA':([21,69,72,85,87,100,105,109,115,116,117,118,119,120,121,122,123,126,127,128,143,157,160,161,165,166,171,173,176,178,185,186,187,188,189,190,191,192,193,194,199,200,204,205,206,207,208,209,214,215,219,220,],[71,71,-17,-65,130,145,151,-20,-111,-111,-109,-110,-6,-2,-3,-4,-5,-111,-111,-77,145,-99,-102,-103,-107,145,-91,-95,-96,-98,130,-82,-66,-67,-68,-69,-70,-71,-72,-73,-30,-27,-108,-100,-101,-104,-105,-106,-94,-97,151,-7,]),'TO_CORCIERRA':([21,68,69,70,72,85,100,108,109,115,116,117,118,119,120,121,122,123,128,142,143,144,157,160,161,165,166,187,188,189,190,191,192,193,194,198,199,200,204,205,206,207,208,209,210,220,],[-111,107,-111,-19,-17,-65,-111,-18,-20,-111,-111,-109,-110,-6,-2,-3,-4,-5,-77,197,-111,-29,-99,-102,-103,-107,-111,-66,-67,-68,-69,-70,-71,-72,-73,-28,-30,-27,-108,-100,-101,-104,-105,-106,220,-7,]),'TO_INT':([23,42,71,76,78,82,83,84,99,102,113,132,145,146,158,159,162,163,164,172,174,175,177,179,180,181,182,183,184,],[72,-111,109,-111,120,120,-92,-93,120,-111,-111,-111,120,120,120,120,120,120,120,-111,-44,-45,120,-50,-51,-52,-53,-54,-55,]),'OP_IGUAL':([39,45,197,],[76,-25,-26,]),'TO_PARABRE':([40,42,44,45,46,47,48,49,50,51,52,53,55,56,76,78,82,83,84,99,102,106,113,119,132,145,146,158,159,162,163,164,172,174,175,177,179,180,181,182,183,184,],[78,-111,90,91,92,93,94,95,96,97,98,99,-47,102,-111,113,113,-92,-93,113,-111,153,-111,91,-111,113,113,113,113,113,113,113,-111,-44,-45,113,-50,-51,-52,-53,-54,-55,]),'PR_negacion':([42,76,102,113,132,172,174,175,],[83,83,83,83,83,83,-44,-45,]),'TO_FLOAT':([42,76,78,82,83,84,99,102,113,132,145,146,158,159,162,163,164,172,174,175,177,179,180,181,182,183,184,],[-111,-111,121,121,-92,-93,121,-111,-111,-111,121,121,121,121,121,121,121,-111,-44,-45,121,-50,-51,-52,-53,-54,-55,]),'PR_true':([42,76,78,82,83,84,99,102,113,132,145,146,158,159,162,163,164,172,174,175,177,179,180,181,182,183,184,],[-111,-111,122,122,-92,-93,122,-111,-111,-111,122,122,122,122,122,122,122,-111,-44,-45,122,-50,-51,-52,-53,-54,-55,]),'PR_false':([42,76,78,82,83,84,99,102,113,132,145,146,158,159,162,163,164,172,174,175,177,179,180,181,182,183,184,],[-111,-111,123,123,-92,-93,123,-111,-111,-111,123,123,123,123,123,123,123,-111,-44,-45,123,-50,-51,-52,-53,-54,-55,]),'OP_MULT':([85,116,117,118,119,120,121,122,123,128,187,188,189,190,191,192,193,194,204,220,],[-65,162,-109,-110,-6,-2,-3,-4,-5,-77,-66,-67,-68,-69,-70,-71,-72,-73,-108,-7,]),'OP_DIV':([85,116,117,118,119,120,121,122,123,128,187,188,189,190,191,192,193,194,204,220,],[-65,163,-109,-110,-6,-2,-3,-4,-5,-77,-66,-67,-68,-69,-70,-71,-72,-73,-108,-7,]),'OP_RESID':([85,116,117,118,119,120,121,122,123,128,187,188,189,190,191,192,193,194,204,220,],[-65,164,-109,-110,-6,-2,-3,-4,-5,-77,-66,-67,-68,-69,-70,-71,-72,-73,-108,-7,]),'OP_MAS':([85,115,116,117,118,119,120,121,122,123,128,161,165,187,188,189,190,191,192,193,194,204,207,208,209,220,],[-65,158,-111,-109,-110,-6,-2,-3,-4,-5,-77,-103,-107,-66,-67,-68,-69,-70,-71,-72,-73,-108,-104,-105,-106,-7,]),'OP_MENOS':([85,115,116,117,118,119,120,121,122,123,128,161,165,187,188,189,190,191,192,193,194,204,207,208,209,220,],[-65,159,-111,-109,-110,-6,-2,-3,-4,-5,-77,-103,-107,-66,-67,-68,-69,-70,-71,-72,-73,-108,-104,-105,-106,-7,]),'OP_DOBLEIGUAL':([85,115,116,117,118,119,120,121,122,123,127,128,157,160,161,165,187,188,189,190,191,192,193,194,204,205,206,207,208,209,220,],[-65,-111,-111,-109,-110,-6,-2,-3,-4,-5,179,-77,-99,-102,-103,-107,-66,-67,-68,-69,-70,-71,-72,-73,-108,-100,-101,-104,-105,-106,-7,]),'OP_DIFDE':([85,115,116,117,118,119,120,121,122,123,127,128,157,160,161,165,187,188,189,190,191,192,193,194,204,205,206,207,208,209,220,],[-65,-111,-111,-109,-110,-6,-2,-3,-4,-5,180,-77,-99,-102,-103,-107,-66,-67,-68,-69,-70,-71,-72,-73,-108,-100,-101,-104,-105,-106,-7,]),'OP_MENORQUE':([85,115,116,117,118,119,120,121,122,123,127,128,157,160,161,165,187,188,189,190,191,192,193,194,204,205,206,207,208,209,220,],[-65,-111,-111,-109,-110,-6,-2,-3,-4,-5,181,-77,-99,-102,-103,-107,-66,-67,-68,-69,-70,-71,-72,-73,-108,-100,-101,-104,-105,-106,-7,]),'OP_MENOROIGUAL':([85,115,116,117,118,119,120,121,122,123,127,128,157,160,161,165,187,188,189,190,191,192,193,194,204,205,206,207,208,209,220,],[-65,-111,-111,-109,-110,-6,-2,-3,-4,-5,182,-77,-99,-102,-103,-107,-66,-67,-68,-69,-70,-71,-72,-73,-108,-100,-101,-104,-105,-106,-7,]),'OP_MAYORQUE':([85,115,116,117,118,119,120,121,122,123,127,128,157,160,161,165,187,188,189,190,191,192,193,194,204,205,206,207,208,209,220,],[-65,-111,-111,-109,-110,-6,-2,-3,-4,-5,183,-77,-99,-102,-103,-107,-66,-67,-68,-69,-70,-71,-72,-73,-108,-100,-101,-104,-105,-106,-7,]),'OP_MAYOROIGUAL':([85,115,116,117,118,119,120,121,122,123,127,128,157,160,161,165,187,188,189,190,191,192,193,194,204,205,206,207,208,209,220,],[-65,-111,-111,-109,-110,-6,-2,-3,-4,-5,184,-77,-99,-102,-103,-107,-66,-67,-68,-69,-70,-71,-72,-73,-108,-100,-101,-104,-105,-106,-7,]),'PR_interseccion':([85,115,116,117,118,119,120,121,122,123,126,127,128,157,160,161,165,176,178,187,188,189,190,191,192,193,194,204,205,206,207,208,209,215,220,],[-65,-111,-111,-109,-110,-6,-2,-3,-4,-5,174,-111,-77,-99,-102,-103,-107,-96,-98,-66,-67,-68,-69,-70,-71,-72,-73,-108,-100,-101,-104,-105,-106,-97,-7,]),'PR_union':([85,115,116,117,118,119,120,121,122,123,126,127,128,157,160,161,165,176,178,187,188,189,190,191,192,193,194,204,205,206,207,208,209,215,220,],[-65,-111,-111,-109,-110,-6,-2,-3,-4,-5,175,-111,-77,-99,-102,-103,-107,-96,-98,-66,-67,-68,-69,-70,-71,-72,-73,-108,-100,-101,-104,-105,-106,-97,-7,]),'TO_DOSPTOS':([89,],[132,]),'PR_else':([125,],[170,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'declare':([3,],[4,]),'decVar':([3,6,11,16,30,41,60,112,168,],[5,19,37,60,37,37,37,37,37,]),'var':([3,6,11,16,30,41,60,112,168,],[6,6,6,6,6,6,6,6,6,]),'empty':([3,5,6,8,11,14,16,17,21,30,41,42,43,60,69,76,87,100,102,105,112,113,115,116,125,126,127,132,141,143,166,168,172,185,219,],[7,15,7,22,7,15,7,64,70,7,7,84,88,7,70,84,131,144,84,152,7,84,160,165,169,173,178,84,196,144,144,7,84,131,152,]),'var1':([3,6,11,16,30,41,60,112,168,],[8,8,8,8,8,8,8,8,8,]),'mainBlock':([4,],[10,]),'mainBlock1':([4,],[11,]),'decFunc':([5,14,],[13,58,]),'func':([5,14,],[14,14,]),'func1':([5,14,],[16,16,]),'func11':([5,14,],[17,17,]),'arrayCreate':([8,],[20,]),'firstCreate':([8,],[21,]),'tipo':([9,17,18,151,],[24,63,66,202,]),'bloque':([11,30,41,60,112,168,],[29,75,80,103,154,212,]),'estructura':([11,30,41,60,112,168,],[30,30,30,30,30,30,]),'assign':([11,30,41,60,112,168,],[32,32,32,32,32,32,]),'loop':([11,30,41,60,112,168,],[33,33,33,33,33,33,]),'comparacion':([11,30,41,60,112,168,],[34,34,34,34,34,34,]),'return':([11,30,41,60,112,168,],[35,35,35,35,35,35,]),'funcCall':([11,30,41,60,78,82,99,112,145,146,158,159,162,163,164,168,177,],[36,36,36,36,117,117,117,36,117,117,117,117,117,117,117,36,117,]),'write':([11,30,41,60,112,168,],[38,38,38,38,38,38,]),'assignTo':([11,30,41,60,112,168,],[39,39,39,39,39,39,]),'loop1':([11,30,41,60,112,168,],[40,40,40,40,40,40,]),'compara1':([11,30,41,60,112,168,],[41,41,41,41,41,41,]),'funcCall1':([11,30,41,60,78,82,99,112,145,146,158,159,162,163,164,168,177,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'func2':([16,],[59,]),'func12':([17,],[61,]),'params':([17,],[62,]),'decideType':([18,],[65,]),'moreDimCreate':([21,69,],[68,108,]),'unaDimCreate':([21,69,],[69,69,]),'loop2':([40,],[77,]),'compara2':([41,],[79,]),'megaExp':([42,76,102,113,132,172,],[81,110,147,155,186,214,]),'maybeNot':([42,76,102,113,132,172,],[82,82,82,82,82,82,]),'funcCall2':([43,],[85,]),'paramVals':([43,],[86,]),'unParam':([43,130,],[87,185,]),'firstIndex':([54,124,],[100,166,]),'loop3':([77,],[111,]),'exp':([78,82,99,145,146,158,159,177,],[114,127,127,199,200,205,206,215,]),'term':([78,82,99,145,146,158,159,162,163,164,177,],[115,115,115,115,115,115,115,207,208,209,115,]),'fact':([78,82,99,145,146,158,159,162,163,164,177,],[116,116,116,116,116,116,116,116,116,116,116,]),'val':([78,82,99,145,146,158,159,162,163,164,177,],[118,118,118,118,118,118,118,118,118,118,118,]),'superExp':([82,99,],[126,141,]),'moreParamVals':([87,185,],[129,216,]),'moreDimIndex':([100,143,166,],[142,198,210,]),'unaDim':([100,143,166,],[143,143,143,]),'moreParams':([105,219,],[150,222,]),'anotherExp':([115,],[157,]),'anotherTerm':([116,],[161,]),'maybeElse':([125,],[167,]),'checkElse':([125,],[168,]),'anotherMega':([126,],[171,]),'opLogico':([126,],[172,]),'maybeRel':([127,],[176,]),'opRelacional':([127,],[177,]),'action':([141,],[195,]),'doElse':([168,],[211,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> PR_program TO_LLAABRE declare mainBlock TO_LLACIERRA','prog',5,'p_prog','scan_par.py',359),
  ('val -> TO_INT','val',1,'p_val','scan_par.py',365),
  ('val -> TO_FLOAT','val',1,'p_val','scan_par.py',366),
  ('val -> PR_true','val',1,'p_val','scan_par.py',367),
  ('val -> PR_false','val',1,'p_val','scan_par.py',368),
  ('val -> ID','val',1,'p_val','scan_par.py',369),
  ('val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA','val',4,'p_val','scan_par.py',370),
  ('declare -> decVar decFunc','declare',2,'p_declare','scan_par.py',423),
  ('decVar -> var decVar','decVar',2,'p_decVar','scan_par.py',426),
  ('decVar -> empty','decVar',1,'p_decVar','scan_par.py',427),
  ('decFunc -> func decFunc','decFunc',2,'p_decFunc','scan_par.py',430),
  ('decFunc -> empty','decFunc',1,'p_decFunc','scan_par.py',431),
  ('var -> var1 arrayCreate','var',2,'p_var','scan_par.py',434),
  ('var1 -> PR_var tipo ID','var1',3,'p_var1','scan_par.py',449),
  ('arrayCreate -> firstCreate moreDimCreate TO_CORCIERRA','arrayCreate',3,'p_arrayCreate','scan_par.py',462),
  ('arrayCreate -> empty','arrayCreate',1,'p_arrayCreate','scan_par.py',463),
  ('firstCreate -> TO_CORABRE TO_INT','firstCreate',2,'p_firstCreate','scan_par.py',484),
  ('moreDimCreate -> unaDimCreate moreDimCreate','moreDimCreate',2,'p_moreDimCreate','scan_par.py',491),
  ('moreDimCreate -> empty','moreDimCreate',1,'p_moreDimCreate','scan_par.py',492),
  ('unaDimCreate -> TO_COMA TO_INT','unaDimCreate',2,'p_unaDimCreate','scan_par.py',495),
  ('tipo -> PR_int','tipo',1,'p_tipo','scan_par.py',503),
  ('tipo -> PR_float','tipo',1,'p_tipo','scan_par.py',504),
  ('tipo -> PR_bool','tipo',1,'p_tipo','scan_par.py',505),
  ('assign -> assignTo OP_IGUAL megaExp','assign',3,'p_assign','scan_par.py',510),
  ('assignTo -> ID','assignTo',1,'p_assignTo','scan_par.py',571),
  ('assignTo -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA','assignTo',4,'p_assignTo','scan_par.py',572),
  ('firstIndex -> ID TO_CORABRE exp','firstIndex',3,'p_firstIndex','scan_par.py',603),
  ('moreDimIndex -> unaDim moreDimIndex','moreDimIndex',2,'p_moreDimIndex','scan_par.py',647),
  ('moreDimIndex -> empty','moreDimIndex',1,'p_moreDimIndex','scan_par.py',648),
  ('unaDim -> TO_COMA exp','unaDim',2,'p_unaDim','scan_par.py',655),
  ('func -> func1 func2','func',2,'p_func','scan_par.py',712),
  ('func1 -> func11 func12','func1',2,'p_func1','scan_par.py',716),
  ('func11 -> PR_function decideType ID TO_PARABRE','func11',4,'p_func11','scan_par.py',721),
  ('func12 -> params TO_PARCIERRA TO_LLAABRE','func12',3,'p_func12','scan_par.py',739),
  ('func2 -> decVar bloque TO_LLACIERRA','func2',3,'p_func2','scan_par.py',743),
  ('decideType -> tipo','decideType',1,'p_decideType','scan_par.py',748),
  ('decideType -> PR_void','decideType',1,'p_decideType','scan_par.py',749),
  ('params -> tipo ID moreParams','params',3,'p_params','scan_par.py',754),
  ('params -> empty','params',1,'p_params','scan_par.py',755),
  ('moreParams -> TO_COMA tipo ID moreParams','moreParams',4,'p_moreParams','scan_par.py',763),
  ('moreParams -> empty','moreParams',1,'p_moreParams','scan_par.py',764),
  ('mainBlock -> mainBlock1 bloque TO_LLACIERRA','mainBlock',3,'p_mainBlock','scan_par.py',771),
  ('mainBlock1 -> PR_main TO_LLAABRE','mainBlock1',2,'p_mainBlock1','scan_par.py',776),
  ('opLogico -> PR_interseccion','opLogico',1,'p_opLogico','scan_par.py',784),
  ('opLogico -> PR_union','opLogico',1,'p_opLogico','scan_par.py',785),
  ('loop -> loop1 loop2 loop3','loop',3,'p_loop','scan_par.py',795),
  ('loop1 -> PR_loop','loop1',1,'p_loop1','scan_par.py',807),
  ('loop2 -> TO_PARABRE exp TO_PARCIERRA','loop2',3,'p_loop2','scan_par.py',815),
  ('loop3 -> TO_LLAABRE bloque TO_LLACIERRA','loop3',3,'p_loop3','scan_par.py',832),
  ('opRelacional -> OP_DOBLEIGUAL','opRelacional',1,'p_opRelacional','scan_par.py',836),
  ('opRelacional -> OP_DIFDE','opRelacional',1,'p_opRelacional','scan_par.py',837),
  ('opRelacional -> OP_MENORQUE','opRelacional',1,'p_opRelacional','scan_par.py',838),
  ('opRelacional -> OP_MENOROIGUAL','opRelacional',1,'p_opRelacional','scan_par.py',839),
  ('opRelacional -> OP_MAYORQUE','opRelacional',1,'p_opRelacional','scan_par.py',840),
  ('opRelacional -> OP_MAYOROIGUAL','opRelacional',1,'p_opRelacional','scan_par.py',841),
  ('bloque -> estructura bloque','bloque',2,'p_bloque','scan_par.py',848),
  ('bloque -> PR_end','bloque',1,'p_bloque','scan_par.py',849),
  ('estructura -> assign','estructura',1,'p_estructura','scan_par.py',853),
  ('estructura -> loop','estructura',1,'p_estructura','scan_par.py',854),
  ('estructura -> comparacion','estructura',1,'p_estructura','scan_par.py',855),
  ('estructura -> return','estructura',1,'p_estructura','scan_par.py',856),
  ('estructura -> funcCall','estructura',1,'p_estructura','scan_par.py',857),
  ('estructura -> decVar','estructura',1,'p_estructura','scan_par.py',858),
  ('estructura -> write','estructura',1,'p_estructura','scan_par.py',859),
  ('funcCall -> funcCall1 funcCall2','funcCall',2,'p_funcCall','scan_par.py',865),
  ('funcCall -> PR_calculaRegresion TO_PARABRE ID TO_PARCIERRA','funcCall',4,'p_funcCall','scan_par.py',866),
  ('funcCall -> PR_prediceResultado TO_PARABRE ID TO_PARCIERRA','funcCall',4,'p_funcCall','scan_par.py',867),
  ('funcCall -> PR_calculaModa TO_PARABRE ID TO_PARCIERRA','funcCall',4,'p_funcCall','scan_par.py',868),
  ('funcCall -> PR_calculaMediana TO_PARABRE ID TO_PARCIERRA','funcCall',4,'p_funcCall','scan_par.py',869),
  ('funcCall -> PR_calculaMedia TO_PARABRE ID TO_PARCIERRA','funcCall',4,'p_funcCall','scan_par.py',870),
  ('funcCall -> PR_calculaPoisson TO_PARABRE ID TO_PARCIERRA','funcCall',4,'p_funcCall','scan_par.py',871),
  ('funcCall -> PR_calculaBinomial TO_PARABRE ID TO_PARCIERRA','funcCall',4,'p_funcCall','scan_par.py',872),
  ('funcCall -> PR_calculaNormal TO_PARABRE ID TO_PARCIERRA','funcCall',4,'p_funcCall','scan_par.py',873),
  ('write -> PR_print TO_PARABRE superExp action TO_PARCIERRA','write',5,'p_write','scan_par.py',878),
  ('action -> empty','action',1,'p_action','scan_par.py',882),
  ('funcCall1 -> ID TO_PARABRE','funcCall1',2,'p_funcCall1','scan_par.py',888),
  ('funcCall2 -> paramVals TO_PARCIERRA','funcCall2',2,'p_funcCall2','scan_par.py',900),
  ('paramVals -> unParam moreParamVals','paramVals',2,'p_paramVals','scan_par.py',916),
  ('paramVals -> empty','paramVals',1,'p_paramVals','scan_par.py',917),
  ('moreParamVals -> TO_COMA unParam moreParamVals','moreParamVals',3,'p_moreParamVals','scan_par.py',921),
  ('moreParamVals -> empty','moreParamVals',1,'p_moreParamVals','scan_par.py',922),
  ('unParam -> ID TO_DOSPTOS megaExp','unParam',3,'p_unParam','scan_par.py',926),
  ('return -> PR_return megaExp','return',2,'p_return','scan_par.py',949),
  ('comparacion -> compara1 compara2','comparacion',2,'p_comparacion','scan_par.py',961),
  ('compara1 -> PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE','compara1',5,'p_compara1','scan_par.py',965),
  ('compara2 -> bloque TO_LLACIERRA maybeElse','compara2',3,'p_compara2','scan_par.py',978),
  ('maybeElse -> checkElse doElse','maybeElse',2,'p_maybeElse','scan_par.py',985),
  ('maybeElse -> empty','maybeElse',1,'p_maybeElse','scan_par.py',986),
  ('checkElse -> PR_else TO_LLAABRE','checkElse',2,'p_checkElse','scan_par.py',990),
  ('doElse -> bloque TO_LLACIERRA','doElse',2,'p_doElse','scan_par.py',999),
  ('megaExp -> maybeNot superExp anotherMega','megaExp',3,'p_megaExp','scan_par.py',1003),
  ('maybeNot -> PR_negacion','maybeNot',1,'p_maybeNot','scan_par.py',1037),
  ('maybeNot -> empty','maybeNot',1,'p_maybeNot','scan_par.py',1038),
  ('anotherMega -> opLogico megaExp','anotherMega',2,'p_anotherMega','scan_par.py',1046),
  ('anotherMega -> empty','anotherMega',1,'p_anotherMega','scan_par.py',1047),
  ('superExp -> exp maybeRel','superExp',2,'p_superExp','scan_par.py',1051),
  ('maybeRel -> opRelacional exp','maybeRel',2,'p_maybeRel','scan_par.py',1056),
  ('maybeRel -> empty','maybeRel',1,'p_maybeRel','scan_par.py',1057),
  ('exp -> term anotherExp','exp',2,'p_exp','scan_par.py',1082),
  ('anotherExp -> OP_MAS exp','anotherExp',2,'p_anotherExp','scan_par.py',1106),
  ('anotherExp -> OP_MENOS exp','anotherExp',2,'p_anotherExp','scan_par.py',1107),
  ('anotherExp -> empty','anotherExp',1,'p_anotherExp','scan_par.py',1108),
  ('term -> fact anotherTerm','term',2,'p_term','scan_par.py',1115),
  ('anotherTerm -> OP_MULT term','anotherTerm',2,'p_anotherTerm','scan_par.py',1141),
  ('anotherTerm -> OP_DIV term','anotherTerm',2,'p_anotherTerm','scan_par.py',1142),
  ('anotherTerm -> OP_RESID term','anotherTerm',2,'p_anotherTerm','scan_par.py',1143),
  ('anotherTerm -> empty','anotherTerm',1,'p_anotherTerm','scan_par.py',1144),
  ('fact -> TO_PARABRE megaExp TO_PARCIERRA','fact',3,'p_fact','scan_par.py',1150),
  ('fact -> funcCall','fact',1,'p_fact','scan_par.py',1151),
  ('fact -> val','fact',1,'p_fact','scan_par.py',1152),
  ('empty -> <empty>','empty',0,'p_empty','scan_par.py',1156),
]
