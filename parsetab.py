
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ID OP_DIFDE OP_DIV OP_DOBLEIGUAL OP_IGUAL OP_MAS OP_MAYOROIGUAL OP_MAYORQUE OP_MENOROIGUAL OP_MENORQUE OP_MENOS OP_MULT OP_RESID PR_arreglo PR_bool PR_calculaBinomial PR_calculaGamma PR_calculaMedia PR_calculaMediana PR_calculaModa PR_calculaNormal PR_calculaPoisson PR_else PR_end PR_false PR_float PR_function PR_if PR_int PR_interseccion PR_loop PR_main PR_negacion PR_print PR_program PR_return PR_true PR_union PR_var PR_void TO_COMA TO_CORABRE TO_CORCIERRA TO_DOSPTOS TO_FLOAT TO_INT TO_LLAABRE TO_LLACIERRA TO_PARABRE TO_PARCIERRAprog : PR_program TO_LLAABRE declare mainBlock TO_LLACIERRAval :  TO_INT\n            | TO_FLOAT\n            | PR_true\n            | PR_false\n            | ID\n            | PR_arreglo firstIndex moreDimIndex TO_CORCIERRAdeclare : decVar decFunc decVar : var decVar\n                | empty decFunc : func decFunc\n                | emptyvar : var1 arrayCreatevar1 :  PR_var tipo IDarrayCreate : firstCreate moreDimCreate TO_CORCIERRA\n                   | emptyfirstCreate : TO_CORABRE TO_INTmoreDimCreate : unaDimCreate moreDimCreate\n                     | emptyunaDimCreate : TO_COMA TO_INTtipo : PR_int\n            | PR_float\n            | PR_bool assign : assignTo OP_IGUAL megaExpassignTo : ID\n                | PR_arreglo firstIndex moreDimIndex TO_CORCIERRAfirstIndex : ID TO_CORABRE expmoreDimIndex : unaDim moreDimIndex\n                     | emptyunaDim : TO_COMA expfunc : func1 func2func1 : func11 func12func11 : PR_function decideType ID TO_PARABREfunc12 : params TO_PARCIERRA TO_LLAABREfunc2 : decVar bloque TO_LLACIERRAdecideType : tipo\n                  | PR_voidparams : tipo ID moreParams\n              | emptymoreParams : TO_COMA tipo ID moreParams\n              | emptymainBlock : mainBlock1 bloque TO_LLACIERRAmainBlock1 : PR_main TO_LLAABREopLogico : PR_interseccion\n                | PR_unionloop : loop1 loop2 loop3loop1 : PR_looploop2 : TO_PARABRE exp TO_PARCIERRAloop3 : TO_LLAABRE bloque TO_LLACIERRAopRelacional : OP_DOBLEIGUAL\n                    | OP_DIFDE\n                    | OP_MENORQUE\n                    | OP_MENOROIGUAL\n                    | OP_MAYORQUE\n                    | OP_MAYOROIGUALbloque : estructura bloque\n              | PR_endestructura : assign\n                  | loop\n                  | comparacion\n                  | return\n                  | funcCall\n                  | decVar\n                  | write funcCall : funcCall1 funcCall2\n                | PR_calculaModa TO_PARABRE ID TO_PARCIERRA\n                | PR_calculaMediana TO_PARABRE ID TO_PARCIERRA\n                | PR_calculaMedia TO_PARABRE ID TO_PARCIERRA\n                | PR_calculaPoisson TO_PARABRE ID TO_PARCIERRA\n                | PR_calculaBinomial TO_PARABRE ID TO_PARCIERRA\n                | PR_calculaNormal TO_PARABRE ID TO_PARCIERRA\n                | PR_calculaGamma TO_PARABRE ID TO_PARCIERRA write : PR_print TO_PARABRE superExp action TO_PARCIERRA action : emptyfuncCall1 : ID TO_PARABREfuncCall2 : paramVals TO_PARCIERRAparamVals : unParam moreParamVals\n                 | emptymoreParamVals : TO_COMA unParam moreParamVals\n                     | emptyunParam : ID TO_DOSPTOS megaExpreturn : PR_return megaExpcomparacion : compara1 compara2compara1 : PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABREcompara2 : bloque TO_LLACIERRA maybeElsemaybeElse : checkElse doElse\n                 | emptycheckElse : PR_else TO_LLAABREdoElse : bloque TO_LLACIERRAmegaExp : maybeNot superExp anotherMegamaybeNot : PR_negacion\n                | emptyanotherMega : opLogico megaExp\n                   | emptysuperExp : exp maybeRelmaybeRel : opRelacional exp\n                | emptyexp : term anotherExpanotherExp : OP_MAS exp\n                  | OP_MENOS exp\n                  | emptyterm : fact anotherTermanotherTerm : OP_MULT term\n                   | OP_DIV term\n                   | OP_RESID term\n                   | emptyfact : TO_PARABRE megaExp TO_PARCIERRA\n            | funcCall\n            | valempty :'
    
_lr_action_items = {'PR_program':([0,],[2,]),'$end':([1,28,],[0,-1,]),'TO_LLAABRE':([2,12,76,102,153,167,197,],[3,56,110,146,-48,209,214,]),'PR_function':([3,5,6,7,8,14,19,20,22,58,72,105,145,],[-110,18,-110,-10,-110,18,-9,-13,-16,-31,-14,-15,-35,]),'PR_main':([3,4,5,6,7,8,13,14,15,19,20,22,57,58,72,105,145,],[-110,12,-110,-110,-10,-110,-8,-110,-12,-9,-13,-16,-11,-31,-14,-15,-35,]),'PR_var':([3,6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,56,59,60,72,78,80,84,105,108,109,110,113,114,115,116,117,118,119,120,121,123,124,125,126,146,154,157,158,162,164,165,166,168,170,173,175,184,185,186,187,188,189,190,199,200,201,202,203,204,205,207,209,210,211,213,214,216,217,],[9,9,-10,-110,9,9,-9,-13,-16,9,-58,-59,-60,-61,-62,-63,-64,9,-43,9,-32,-14,-83,-82,-65,-15,-24,-46,9,-110,-110,-108,-109,-6,-2,-3,-4,-5,-110,-110,-110,-76,-34,-98,-101,-102,-106,-85,9,-87,-90,-94,-95,-97,-66,-67,-68,-69,-70,-71,-72,-49,-107,-99,-100,-103,-104,-105,-86,-88,-93,-96,-73,-84,-7,-89,]),'PR_end':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,56,59,60,72,78,80,84,105,108,109,110,113,114,115,116,117,118,119,120,121,123,124,125,126,146,154,157,158,162,164,165,166,168,170,173,175,184,185,186,187,188,189,190,199,200,201,202,203,204,205,207,209,210,211,213,214,216,217,],[-110,-10,-110,31,-110,-9,-13,-16,31,-58,-59,-60,-61,-62,-63,-64,31,-43,31,-32,-14,-83,-82,-65,-15,-24,-46,31,-110,-110,-108,-109,-6,-2,-3,-4,-5,-110,-110,-110,-76,-34,-98,-101,-102,-106,-85,31,-87,-90,-94,-95,-97,-66,-67,-68,-69,-70,-71,-72,-49,-107,-99,-100,-103,-104,-105,-86,-88,-93,-96,-73,-84,-7,-89,]),'PR_return':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,56,59,60,72,78,80,84,105,108,109,110,113,114,115,116,117,118,119,120,121,123,124,125,126,146,154,157,158,162,164,165,166,168,170,173,175,184,185,186,187,188,189,190,199,200,201,202,203,204,205,207,209,210,211,213,214,216,217,],[-110,-10,-110,42,-110,-9,-13,-16,42,-58,-59,-60,-61,-62,-63,-64,42,-43,42,-32,-14,-83,-82,-65,-15,-24,-46,42,-110,-110,-108,-109,-6,-2,-3,-4,-5,-110,-110,-110,-76,-34,-98,-101,-102,-106,-85,42,-87,-90,-94,-95,-97,-66,-67,-68,-69,-70,-71,-72,-49,-107,-99,-100,-103,-104,-105,-86,-88,-93,-96,-73,-84,-7,-89,]),'PR_calculaModa':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,56,59,60,72,75,77,78,80,81,82,83,84,97,100,105,108,109,110,111,113,114,115,116,117,118,119,120,121,123,124,125,126,130,142,143,146,154,155,156,157,158,159,160,161,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,199,200,201,202,203,204,205,207,209,210,211,213,214,216,217,],[-110,-10,-110,44,-110,-9,-13,-16,44,-58,-59,-60,-61,-62,-63,-64,44,-110,-43,44,-32,-14,-110,44,-83,-82,44,-91,-92,-65,44,-110,-15,-24,-46,44,-110,-110,-110,-108,-109,-6,-2,-3,-4,-5,-110,-110,-110,-76,-110,44,44,-34,-98,44,44,-101,-102,44,44,44,-106,-85,44,-87,-90,-110,-94,-44,-45,-95,44,-97,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-49,-107,-99,-100,-103,-104,-105,-86,-88,-93,-96,-73,-84,-7,-89,]),'PR_calculaMediana':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,56,59,60,72,75,77,78,80,81,82,83,84,97,100,105,108,109,110,111,113,114,115,116,117,118,119,120,121,123,124,125,126,130,142,143,146,154,155,156,157,158,159,160,161,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,199,200,201,202,203,204,205,207,209,210,211,213,214,216,217,],[-110,-10,-110,46,-110,-9,-13,-16,46,-58,-59,-60,-61,-62,-63,-64,46,-110,-43,46,-32,-14,-110,46,-83,-82,46,-91,-92,-65,46,-110,-15,-24,-46,46,-110,-110,-110,-108,-109,-6,-2,-3,-4,-5,-110,-110,-110,-76,-110,46,46,-34,-98,46,46,-101,-102,46,46,46,-106,-85,46,-87,-90,-110,-94,-44,-45,-95,46,-97,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-49,-107,-99,-100,-103,-104,-105,-86,-88,-93,-96,-73,-84,-7,-89,]),'PR_calculaMedia':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,56,59,60,72,75,77,78,80,81,82,83,84,97,100,105,108,109,110,111,113,114,115,116,117,118,119,120,121,123,124,125,126,130,142,143,146,154,155,156,157,158,159,160,161,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,199,200,201,202,203,204,205,207,209,210,211,213,214,216,217,],[-110,-10,-110,47,-110,-9,-13,-16,47,-58,-59,-60,-61,-62,-63,-64,47,-110,-43,47,-32,-14,-110,47,-83,-82,47,-91,-92,-65,47,-110,-15,-24,-46,47,-110,-110,-110,-108,-109,-6,-2,-3,-4,-5,-110,-110,-110,-76,-110,47,47,-34,-98,47,47,-101,-102,47,47,47,-106,-85,47,-87,-90,-110,-94,-44,-45,-95,47,-97,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-49,-107,-99,-100,-103,-104,-105,-86,-88,-93,-96,-73,-84,-7,-89,]),'PR_calculaPoisson':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,56,59,60,72,75,77,78,80,81,82,83,84,97,100,105,108,109,110,111,113,114,115,116,117,118,119,120,121,123,124,125,126,130,142,143,146,154,155,156,157,158,159,160,161,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,199,200,201,202,203,204,205,207,209,210,211,213,214,216,217,],[-110,-10,-110,48,-110,-9,-13,-16,48,-58,-59,-60,-61,-62,-63,-64,48,-110,-43,48,-32,-14,-110,48,-83,-82,48,-91,-92,-65,48,-110,-15,-24,-46,48,-110,-110,-110,-108,-109,-6,-2,-3,-4,-5,-110,-110,-110,-76,-110,48,48,-34,-98,48,48,-101,-102,48,48,48,-106,-85,48,-87,-90,-110,-94,-44,-45,-95,48,-97,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-49,-107,-99,-100,-103,-104,-105,-86,-88,-93,-96,-73,-84,-7,-89,]),'PR_calculaBinomial':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,56,59,60,72,75,77,78,80,81,82,83,84,97,100,105,108,109,110,111,113,114,115,116,117,118,119,120,121,123,124,125,126,130,142,143,146,154,155,156,157,158,159,160,161,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,199,200,201,202,203,204,205,207,209,210,211,213,214,216,217,],[-110,-10,-110,49,-110,-9,-13,-16,49,-58,-59,-60,-61,-62,-63,-64,49,-110,-43,49,-32,-14,-110,49,-83,-82,49,-91,-92,-65,49,-110,-15,-24,-46,49,-110,-110,-110,-108,-109,-6,-2,-3,-4,-5,-110,-110,-110,-76,-110,49,49,-34,-98,49,49,-101,-102,49,49,49,-106,-85,49,-87,-90,-110,-94,-44,-45,-95,49,-97,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-49,-107,-99,-100,-103,-104,-105,-86,-88,-93,-96,-73,-84,-7,-89,]),'PR_calculaNormal':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,56,59,60,72,75,77,78,80,81,82,83,84,97,100,105,108,109,110,111,113,114,115,116,117,118,119,120,121,123,124,125,126,130,142,143,146,154,155,156,157,158,159,160,161,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,199,200,201,202,203,204,205,207,209,210,211,213,214,216,217,],[-110,-10,-110,50,-110,-9,-13,-16,50,-58,-59,-60,-61,-62,-63,-64,50,-110,-43,50,-32,-14,-110,50,-83,-82,50,-91,-92,-65,50,-110,-15,-24,-46,50,-110,-110,-110,-108,-109,-6,-2,-3,-4,-5,-110,-110,-110,-76,-110,50,50,-34,-98,50,50,-101,-102,50,50,50,-106,-85,50,-87,-90,-110,-94,-44,-45,-95,50,-97,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-49,-107,-99,-100,-103,-104,-105,-86,-88,-93,-96,-73,-84,-7,-89,]),'PR_calculaGamma':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,56,59,60,72,75,77,78,80,81,82,83,84,97,100,105,108,109,110,111,113,114,115,116,117,118,119,120,121,123,124,125,126,130,142,143,146,154,155,156,157,158,159,160,161,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,199,200,201,202,203,204,205,207,209,210,211,213,214,216,217,],[-110,-10,-110,51,-110,-9,-13,-16,51,-58,-59,-60,-61,-62,-63,-64,51,-110,-43,51,-32,-14,-110,51,-83,-82,51,-91,-92,-65,51,-110,-15,-24,-46,51,-110,-110,-110,-108,-109,-6,-2,-3,-4,-5,-110,-110,-110,-76,-110,51,51,-34,-98,51,51,-101,-102,51,51,51,-106,-85,51,-87,-90,-110,-94,-44,-45,-95,51,-97,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-49,-107,-99,-100,-103,-104,-105,-86,-88,-93,-96,-73,-84,-7,-89,]),'PR_print':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,56,59,60,72,78,80,84,105,108,109,110,113,114,115,116,117,118,119,120,121,123,124,125,126,146,154,157,158,162,164,165,166,168,170,173,175,184,185,186,187,188,189,190,199,200,201,202,203,204,205,207,209,210,211,213,214,216,217,],[-110,-10,-110,52,-110,-9,-13,-16,52,-58,-59,-60,-61,-62,-63,-64,52,-43,52,-32,-14,-83,-82,-65,-15,-24,-46,52,-110,-110,-108,-109,-6,-2,-3,-4,-5,-110,-110,-110,-76,-34,-98,-101,-102,-106,-85,52,-87,-90,-94,-95,-97,-66,-67,-68,-69,-70,-71,-72,-49,-107,-99,-100,-103,-104,-105,-86,-88,-93,-96,-73,-84,-7,-89,]),'ID':([6,7,8,11,16,19,20,22,24,25,26,27,30,32,33,34,35,36,37,38,41,42,43,53,56,59,60,62,64,65,66,72,75,77,78,80,81,82,83,84,89,90,91,92,93,94,95,96,97,100,105,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,130,142,143,146,154,155,156,157,158,159,160,161,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,198,199,200,201,202,203,204,205,207,209,210,211,213,214,216,217,],[-110,-10,-110,45,-110,-9,-13,-16,72,-21,-22,-23,45,-58,-59,-60,-61,-62,-63,-64,45,-110,88,99,-43,45,-32,103,104,-36,-37,-14,-110,117,-83,-82,117,-91,-92,-65,131,-75,132,133,134,135,136,137,117,-110,-15,-24,-46,45,-110,-110,-110,-108,-109,-6,-2,-3,-4,-5,99,-110,-110,-110,-76,88,-110,117,117,-34,-98,117,117,-101,-102,117,117,117,-106,-85,45,-87,-90,-110,-94,-44,-45,-95,117,-97,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,215,-49,-107,-99,-100,-103,-104,-105,-86,-88,-93,-96,-73,-84,-7,-89,]),'PR_arreglo':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,42,56,59,60,72,75,77,78,80,81,82,83,84,97,100,105,108,109,110,111,113,114,115,116,117,118,119,120,121,123,124,125,126,130,142,143,146,154,155,156,157,158,159,160,161,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,199,200,201,202,203,204,205,207,209,210,211,213,214,216,217,],[-110,-10,-110,53,-110,-9,-13,-16,53,-58,-59,-60,-61,-62,-63,-64,53,-110,-43,53,-32,-14,-110,122,-83,-82,122,-91,-92,-65,122,-110,-15,-24,-46,53,-110,-110,-110,-108,-109,-6,-2,-3,-4,-5,-110,-110,-110,-76,-110,122,122,-34,-98,122,122,-101,-102,122,122,122,-106,-85,53,-87,-90,-110,-94,-44,-45,-95,122,-97,-50,-51,-52,-53,-54,-55,-66,-67,-68,-69,-70,-71,-72,-49,-107,-99,-100,-103,-104,-105,-86,-88,-93,-96,-73,-84,-7,-89,]),'PR_loop':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,56,59,60,72,78,80,84,105,108,109,110,113,114,115,116,117,118,119,120,121,123,124,125,126,146,154,157,158,162,164,165,166,168,170,173,175,184,185,186,187,188,189,190,199,200,201,202,203,204,205,207,209,210,211,213,214,216,217,],[-110,-10,-110,54,-110,-9,-13,-16,54,-58,-59,-60,-61,-62,-63,-64,54,-43,54,-32,-14,-83,-82,-65,-15,-24,-46,54,-110,-110,-108,-109,-6,-2,-3,-4,-5,-110,-110,-110,-76,-34,-98,-101,-102,-106,-85,54,-87,-90,-94,-95,-97,-66,-67,-68,-69,-70,-71,-72,-49,-107,-99,-100,-103,-104,-105,-86,-88,-93,-96,-73,-84,-7,-89,]),'PR_if':([6,7,8,11,16,19,20,22,30,32,33,34,35,36,37,38,41,56,59,60,72,78,80,84,105,108,109,110,113,114,115,116,117,118,119,120,121,123,124,125,126,146,154,157,158,162,164,165,166,168,170,173,175,184,185,186,187,188,189,190,199,200,201,202,203,204,205,207,209,210,211,213,214,216,217,],[-110,-10,-110,55,-110,-9,-13,-16,55,-58,-59,-60,-61,-62,-63,-64,55,-43,55,-32,-14,-83,-82,-65,-15,-24,-46,55,-110,-110,-108,-109,-6,-2,-3,-4,-5,-110,-110,-110,-76,-34,-98,-101,-102,-106,-85,55,-87,-90,-94,-95,-97,-66,-67,-68,-69,-70,-71,-72,-49,-107,-99,-100,-103,-104,-105,-86,-88,-93,-96,-73,-84,-7,-89,]),'TO_CORABRE':([8,72,99,],[23,-14,143,]),'PR_int':([9,17,18,148,150,],[25,25,25,25,-33,]),'PR_float':([9,17,18,148,150,],[26,26,26,26,-33,]),'PR_bool':([9,17,18,148,150,],[27,27,27,27,-33,]),'TO_LLACIERRA':([10,29,31,73,74,79,101,151,208,],[28,73,-57,-42,-56,123,145,199,217,]),'TO_PARCIERRA':([17,43,61,63,84,85,86,87,90,103,112,113,114,115,116,117,118,119,120,121,124,125,126,127,129,131,132,133,134,135,136,137,138,144,147,149,150,152,154,157,158,162,168,170,173,175,182,183,184,185,186,187,188,189,190,191,192,200,201,202,203,204,205,210,211,212,215,216,218,],[-110,-110,102,-39,-65,126,-110,-78,-75,-110,153,-110,-110,-108,-109,-6,-2,-3,-4,-5,-110,-110,-76,-77,-80,184,185,186,187,188,189,190,-110,197,-38,-41,-33,200,-98,-101,-102,-106,-90,-94,-95,-97,-110,-81,-66,-67,-68,-69,-70,-71,-72,213,-74,-107,-99,-100,-103,-104,-105,-93,-96,-79,-110,-7,-40,]),'PR_void':([18,],[66,]),'TO_COMA':([21,68,71,84,86,98,103,107,113,114,115,116,117,118,119,120,121,124,125,126,140,154,157,158,162,163,168,170,173,175,182,183,184,185,186,187,188,189,190,195,196,200,201,202,203,204,205,210,211,215,216,],[70,70,-17,-65,128,142,148,-20,-110,-110,-108,-109,-6,-2,-3,-4,-5,-110,-110,-76,142,-98,-101,-102,-106,142,-90,-94,-95,-97,128,-81,-66,-67,-68,-69,-70,-71,-72,-30,-27,-107,-99,-100,-103,-104,-105,-93,-96,148,-7,]),'TO_CORCIERRA':([21,67,68,69,71,84,98,106,107,113,114,115,116,117,118,119,120,121,126,139,140,141,154,157,158,162,163,184,185,186,187,188,189,190,194,195,196,200,201,202,203,204,205,206,216,],[-110,105,-110,-19,-17,-65,-110,-18,-20,-110,-110,-108,-109,-6,-2,-3,-4,-5,-76,193,-110,-29,-98,-101,-102,-106,-110,-66,-67,-68,-69,-70,-71,-72,-28,-30,-27,-107,-99,-100,-103,-104,-105,216,-7,]),'TO_INT':([23,42,70,75,77,81,82,83,97,100,111,130,142,143,155,156,159,160,161,169,171,172,174,176,177,178,179,180,181,],[71,-110,107,-110,118,118,-91,-92,118,-110,-110,-110,118,118,118,118,118,118,118,-110,-44,-45,118,-50,-51,-52,-53,-54,-55,]),'OP_IGUAL':([39,45,193,],[75,-25,-26,]),'TO_PARABRE':([40,42,44,45,46,47,48,49,50,51,52,54,55,75,77,81,82,83,97,100,104,111,117,130,142,143,155,156,159,160,161,169,171,172,174,176,177,178,179,180,181,],[77,-110,89,90,91,92,93,94,95,96,97,-47,100,-110,111,111,-91,-92,111,-110,150,-110,90,-110,111,111,111,111,111,111,111,-110,-44,-45,111,-50,-51,-52,-53,-54,-55,]),'PR_negacion':([42,75,100,111,130,169,171,172,],[82,82,82,82,82,82,-44,-45,]),'TO_FLOAT':([42,75,77,81,82,83,97,100,111,130,142,143,155,156,159,160,161,169,171,172,174,176,177,178,179,180,181,],[-110,-110,119,119,-91,-92,119,-110,-110,-110,119,119,119,119,119,119,119,-110,-44,-45,119,-50,-51,-52,-53,-54,-55,]),'PR_true':([42,75,77,81,82,83,97,100,111,130,142,143,155,156,159,160,161,169,171,172,174,176,177,178,179,180,181,],[-110,-110,120,120,-91,-92,120,-110,-110,-110,120,120,120,120,120,120,120,-110,-44,-45,120,-50,-51,-52,-53,-54,-55,]),'PR_false':([42,75,77,81,82,83,97,100,111,130,142,143,155,156,159,160,161,169,171,172,174,176,177,178,179,180,181,],[-110,-110,121,121,-91,-92,121,-110,-110,-110,121,121,121,121,121,121,121,-110,-44,-45,121,-50,-51,-52,-53,-54,-55,]),'OP_MULT':([84,114,115,116,117,118,119,120,121,126,184,185,186,187,188,189,190,200,216,],[-65,159,-108,-109,-6,-2,-3,-4,-5,-76,-66,-67,-68,-69,-70,-71,-72,-107,-7,]),'OP_DIV':([84,114,115,116,117,118,119,120,121,126,184,185,186,187,188,189,190,200,216,],[-65,160,-108,-109,-6,-2,-3,-4,-5,-76,-66,-67,-68,-69,-70,-71,-72,-107,-7,]),'OP_RESID':([84,114,115,116,117,118,119,120,121,126,184,185,186,187,188,189,190,200,216,],[-65,161,-108,-109,-6,-2,-3,-4,-5,-76,-66,-67,-68,-69,-70,-71,-72,-107,-7,]),'OP_MAS':([84,113,114,115,116,117,118,119,120,121,126,158,162,184,185,186,187,188,189,190,200,203,204,205,216,],[-65,155,-110,-108,-109,-6,-2,-3,-4,-5,-76,-102,-106,-66,-67,-68,-69,-70,-71,-72,-107,-103,-104,-105,-7,]),'OP_MENOS':([84,113,114,115,116,117,118,119,120,121,126,158,162,184,185,186,187,188,189,190,200,203,204,205,216,],[-65,156,-110,-108,-109,-6,-2,-3,-4,-5,-76,-102,-106,-66,-67,-68,-69,-70,-71,-72,-107,-103,-104,-105,-7,]),'OP_DOBLEIGUAL':([84,113,114,115,116,117,118,119,120,121,125,126,154,157,158,162,184,185,186,187,188,189,190,200,201,202,203,204,205,216,],[-65,-110,-110,-108,-109,-6,-2,-3,-4,-5,176,-76,-98,-101,-102,-106,-66,-67,-68,-69,-70,-71,-72,-107,-99,-100,-103,-104,-105,-7,]),'OP_DIFDE':([84,113,114,115,116,117,118,119,120,121,125,126,154,157,158,162,184,185,186,187,188,189,190,200,201,202,203,204,205,216,],[-65,-110,-110,-108,-109,-6,-2,-3,-4,-5,177,-76,-98,-101,-102,-106,-66,-67,-68,-69,-70,-71,-72,-107,-99,-100,-103,-104,-105,-7,]),'OP_MENORQUE':([84,113,114,115,116,117,118,119,120,121,125,126,154,157,158,162,184,185,186,187,188,189,190,200,201,202,203,204,205,216,],[-65,-110,-110,-108,-109,-6,-2,-3,-4,-5,178,-76,-98,-101,-102,-106,-66,-67,-68,-69,-70,-71,-72,-107,-99,-100,-103,-104,-105,-7,]),'OP_MENOROIGUAL':([84,113,114,115,116,117,118,119,120,121,125,126,154,157,158,162,184,185,186,187,188,189,190,200,201,202,203,204,205,216,],[-65,-110,-110,-108,-109,-6,-2,-3,-4,-5,179,-76,-98,-101,-102,-106,-66,-67,-68,-69,-70,-71,-72,-107,-99,-100,-103,-104,-105,-7,]),'OP_MAYORQUE':([84,113,114,115,116,117,118,119,120,121,125,126,154,157,158,162,184,185,186,187,188,189,190,200,201,202,203,204,205,216,],[-65,-110,-110,-108,-109,-6,-2,-3,-4,-5,180,-76,-98,-101,-102,-106,-66,-67,-68,-69,-70,-71,-72,-107,-99,-100,-103,-104,-105,-7,]),'OP_MAYOROIGUAL':([84,113,114,115,116,117,118,119,120,121,125,126,154,157,158,162,184,185,186,187,188,189,190,200,201,202,203,204,205,216,],[-65,-110,-110,-108,-109,-6,-2,-3,-4,-5,181,-76,-98,-101,-102,-106,-66,-67,-68,-69,-70,-71,-72,-107,-99,-100,-103,-104,-105,-7,]),'PR_interseccion':([84,113,114,115,116,117,118,119,120,121,124,125,126,154,157,158,162,173,175,184,185,186,187,188,189,190,200,201,202,203,204,205,211,216,],[-65,-110,-110,-108,-109,-6,-2,-3,-4,-5,171,-110,-76,-98,-101,-102,-106,-95,-97,-66,-67,-68,-69,-70,-71,-72,-107,-99,-100,-103,-104,-105,-96,-7,]),'PR_union':([84,113,114,115,116,117,118,119,120,121,124,125,126,154,157,158,162,173,175,184,185,186,187,188,189,190,200,201,202,203,204,205,211,216,],[-65,-110,-110,-108,-109,-6,-2,-3,-4,-5,172,-110,-76,-98,-101,-102,-106,-95,-97,-66,-67,-68,-69,-70,-71,-72,-107,-99,-100,-103,-104,-105,-96,-7,]),'TO_DOSPTOS':([88,],[130,]),'PR_else':([123,],[167,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'declare':([3,],[4,]),'decVar':([3,6,11,16,30,41,59,110,165,],[5,19,37,59,37,37,37,37,37,]),'var':([3,6,11,16,30,41,59,110,165,],[6,6,6,6,6,6,6,6,6,]),'empty':([3,5,6,8,11,14,16,17,21,30,41,42,43,59,68,75,86,98,100,103,110,111,113,114,123,124,125,130,138,140,163,165,169,182,215,],[7,15,7,22,7,15,7,63,69,7,7,83,87,7,69,83,129,141,83,149,7,83,157,162,166,170,175,83,192,141,141,7,83,129,149,]),'var1':([3,6,11,16,30,41,59,110,165,],[8,8,8,8,8,8,8,8,8,]),'mainBlock':([4,],[10,]),'mainBlock1':([4,],[11,]),'decFunc':([5,14,],[13,57,]),'func':([5,14,],[14,14,]),'func1':([5,14,],[16,16,]),'func11':([5,14,],[17,17,]),'arrayCreate':([8,],[20,]),'firstCreate':([8,],[21,]),'tipo':([9,17,18,148,],[24,62,65,198,]),'bloque':([11,30,41,59,110,165,],[29,74,79,101,151,208,]),'estructura':([11,30,41,59,110,165,],[30,30,30,30,30,30,]),'assign':([11,30,41,59,110,165,],[32,32,32,32,32,32,]),'loop':([11,30,41,59,110,165,],[33,33,33,33,33,33,]),'comparacion':([11,30,41,59,110,165,],[34,34,34,34,34,34,]),'return':([11,30,41,59,110,165,],[35,35,35,35,35,35,]),'funcCall':([11,30,41,59,77,81,97,110,142,143,155,156,159,160,161,165,174,],[36,36,36,36,115,115,115,36,115,115,115,115,115,115,115,36,115,]),'write':([11,30,41,59,110,165,],[38,38,38,38,38,38,]),'assignTo':([11,30,41,59,110,165,],[39,39,39,39,39,39,]),'loop1':([11,30,41,59,110,165,],[40,40,40,40,40,40,]),'compara1':([11,30,41,59,110,165,],[41,41,41,41,41,41,]),'funcCall1':([11,30,41,59,77,81,97,110,142,143,155,156,159,160,161,165,174,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'func2':([16,],[58,]),'func12':([17,],[60,]),'params':([17,],[61,]),'decideType':([18,],[64,]),'moreDimCreate':([21,68,],[67,106,]),'unaDimCreate':([21,68,],[68,68,]),'loop2':([40,],[76,]),'compara2':([41,],[78,]),'megaExp':([42,75,100,111,130,169,],[80,108,144,152,183,210,]),'maybeNot':([42,75,100,111,130,169,],[81,81,81,81,81,81,]),'funcCall2':([43,],[84,]),'paramVals':([43,],[85,]),'unParam':([43,128,],[86,182,]),'firstIndex':([53,122,],[98,163,]),'loop3':([76,],[109,]),'exp':([77,81,97,142,143,155,156,174,],[112,125,125,195,196,201,202,211,]),'term':([77,81,97,142,143,155,156,159,160,161,174,],[113,113,113,113,113,113,113,203,204,205,113,]),'fact':([77,81,97,142,143,155,156,159,160,161,174,],[114,114,114,114,114,114,114,114,114,114,114,]),'val':([77,81,97,142,143,155,156,159,160,161,174,],[116,116,116,116,116,116,116,116,116,116,116,]),'superExp':([81,97,],[124,138,]),'moreParamVals':([86,182,],[127,212,]),'moreDimIndex':([98,140,163,],[139,194,206,]),'unaDim':([98,140,163,],[140,140,140,]),'moreParams':([103,215,],[147,218,]),'anotherExp':([113,],[154,]),'anotherTerm':([114,],[158,]),'maybeElse':([123,],[164,]),'checkElse':([123,],[165,]),'anotherMega':([124,],[168,]),'opLogico':([124,],[169,]),'maybeRel':([125,],[173,]),'opRelacional':([125,],[174,]),'action':([138,],[191,]),'doElse':([165,],[207,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> PR_program TO_LLAABRE declare mainBlock TO_LLACIERRA','prog',5,'p_prog','DOODLR.py',364),
  ('val -> TO_INT','val',1,'p_val','DOODLR.py',375),
  ('val -> TO_FLOAT','val',1,'p_val','DOODLR.py',376),
  ('val -> PR_true','val',1,'p_val','DOODLR.py',377),
  ('val -> PR_false','val',1,'p_val','DOODLR.py',378),
  ('val -> ID','val',1,'p_val','DOODLR.py',379),
  ('val -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA','val',4,'p_val','DOODLR.py',380),
  ('declare -> decVar decFunc','declare',2,'p_declare','DOODLR.py',434),
  ('decVar -> var decVar','decVar',2,'p_decVar','DOODLR.py',437),
  ('decVar -> empty','decVar',1,'p_decVar','DOODLR.py',438),
  ('decFunc -> func decFunc','decFunc',2,'p_decFunc','DOODLR.py',441),
  ('decFunc -> empty','decFunc',1,'p_decFunc','DOODLR.py',442),
  ('var -> var1 arrayCreate','var',2,'p_var','DOODLR.py',445),
  ('var1 -> PR_var tipo ID','var1',3,'p_var1','DOODLR.py',460),
  ('arrayCreate -> firstCreate moreDimCreate TO_CORCIERRA','arrayCreate',3,'p_arrayCreate','DOODLR.py',473),
  ('arrayCreate -> empty','arrayCreate',1,'p_arrayCreate','DOODLR.py',474),
  ('firstCreate -> TO_CORABRE TO_INT','firstCreate',2,'p_firstCreate','DOODLR.py',495),
  ('moreDimCreate -> unaDimCreate moreDimCreate','moreDimCreate',2,'p_moreDimCreate','DOODLR.py',502),
  ('moreDimCreate -> empty','moreDimCreate',1,'p_moreDimCreate','DOODLR.py',503),
  ('unaDimCreate -> TO_COMA TO_INT','unaDimCreate',2,'p_unaDimCreate','DOODLR.py',506),
  ('tipo -> PR_int','tipo',1,'p_tipo','DOODLR.py',514),
  ('tipo -> PR_float','tipo',1,'p_tipo','DOODLR.py',515),
  ('tipo -> PR_bool','tipo',1,'p_tipo','DOODLR.py',516),
  ('assign -> assignTo OP_IGUAL megaExp','assign',3,'p_assign','DOODLR.py',521),
  ('assignTo -> ID','assignTo',1,'p_assignTo','DOODLR.py',582),
  ('assignTo -> PR_arreglo firstIndex moreDimIndex TO_CORCIERRA','assignTo',4,'p_assignTo','DOODLR.py',583),
  ('firstIndex -> ID TO_CORABRE exp','firstIndex',3,'p_firstIndex','DOODLR.py',614),
  ('moreDimIndex -> unaDim moreDimIndex','moreDimIndex',2,'p_moreDimIndex','DOODLR.py',658),
  ('moreDimIndex -> empty','moreDimIndex',1,'p_moreDimIndex','DOODLR.py',659),
  ('unaDim -> TO_COMA exp','unaDim',2,'p_unaDim','DOODLR.py',664),
  ('func -> func1 func2','func',2,'p_func','DOODLR.py',710),
  ('func1 -> func11 func12','func1',2,'p_func1','DOODLR.py',713),
  ('func11 -> PR_function decideType ID TO_PARABRE','func11',4,'p_func11','DOODLR.py',717),
  ('func12 -> params TO_PARCIERRA TO_LLAABRE','func12',3,'p_func12','DOODLR.py',732),
  ('func2 -> decVar bloque TO_LLACIERRA','func2',3,'p_func2','DOODLR.py',736),
  ('decideType -> tipo','decideType',1,'p_decideType','DOODLR.py',741),
  ('decideType -> PR_void','decideType',1,'p_decideType','DOODLR.py',742),
  ('params -> tipo ID moreParams','params',3,'p_params','DOODLR.py',746),
  ('params -> empty','params',1,'p_params','DOODLR.py',747),
  ('moreParams -> TO_COMA tipo ID moreParams','moreParams',4,'p_moreParams','DOODLR.py',754),
  ('moreParams -> empty','moreParams',1,'p_moreParams','DOODLR.py',755),
  ('mainBlock -> mainBlock1 bloque TO_LLACIERRA','mainBlock',3,'p_mainBlock','DOODLR.py',762),
  ('mainBlock1 -> PR_main TO_LLAABRE','mainBlock1',2,'p_mainBlock1','DOODLR.py',767),
  ('opLogico -> PR_interseccion','opLogico',1,'p_opLogico','DOODLR.py',775),
  ('opLogico -> PR_union','opLogico',1,'p_opLogico','DOODLR.py',776),
  ('loop -> loop1 loop2 loop3','loop',3,'p_loop','DOODLR.py',785),
  ('loop1 -> PR_loop','loop1',1,'p_loop1','DOODLR.py',797),
  ('loop2 -> TO_PARABRE exp TO_PARCIERRA','loop2',3,'p_loop2','DOODLR.py',805),
  ('loop3 -> TO_LLAABRE bloque TO_LLACIERRA','loop3',3,'p_loop3','DOODLR.py',822),
  ('opRelacional -> OP_DOBLEIGUAL','opRelacional',1,'p_opRelacional','DOODLR.py',826),
  ('opRelacional -> OP_DIFDE','opRelacional',1,'p_opRelacional','DOODLR.py',827),
  ('opRelacional -> OP_MENORQUE','opRelacional',1,'p_opRelacional','DOODLR.py',828),
  ('opRelacional -> OP_MENOROIGUAL','opRelacional',1,'p_opRelacional','DOODLR.py',829),
  ('opRelacional -> OP_MAYORQUE','opRelacional',1,'p_opRelacional','DOODLR.py',830),
  ('opRelacional -> OP_MAYOROIGUAL','opRelacional',1,'p_opRelacional','DOODLR.py',831),
  ('bloque -> estructura bloque','bloque',2,'p_bloque','DOODLR.py',838),
  ('bloque -> PR_end','bloque',1,'p_bloque','DOODLR.py',839),
  ('estructura -> assign','estructura',1,'p_estructura','DOODLR.py',843),
  ('estructura -> loop','estructura',1,'p_estructura','DOODLR.py',844),
  ('estructura -> comparacion','estructura',1,'p_estructura','DOODLR.py',845),
  ('estructura -> return','estructura',1,'p_estructura','DOODLR.py',846),
  ('estructura -> funcCall','estructura',1,'p_estructura','DOODLR.py',847),
  ('estructura -> decVar','estructura',1,'p_estructura','DOODLR.py',848),
  ('estructura -> write','estructura',1,'p_estructura','DOODLR.py',849),
  ('funcCall -> funcCall1 funcCall2','funcCall',2,'p_funcCall','DOODLR.py',853),
  ('funcCall -> PR_calculaModa TO_PARABRE ID TO_PARCIERRA','funcCall',4,'p_funcCall','DOODLR.py',854),
  ('funcCall -> PR_calculaMediana TO_PARABRE ID TO_PARCIERRA','funcCall',4,'p_funcCall','DOODLR.py',855),
  ('funcCall -> PR_calculaMedia TO_PARABRE ID TO_PARCIERRA','funcCall',4,'p_funcCall','DOODLR.py',856),
  ('funcCall -> PR_calculaPoisson TO_PARABRE ID TO_PARCIERRA','funcCall',4,'p_funcCall','DOODLR.py',857),
  ('funcCall -> PR_calculaBinomial TO_PARABRE ID TO_PARCIERRA','funcCall',4,'p_funcCall','DOODLR.py',858),
  ('funcCall -> PR_calculaNormal TO_PARABRE ID TO_PARCIERRA','funcCall',4,'p_funcCall','DOODLR.py',859),
  ('funcCall -> PR_calculaGamma TO_PARABRE ID TO_PARCIERRA','funcCall',4,'p_funcCall','DOODLR.py',860),
  ('write -> PR_print TO_PARABRE superExp action TO_PARCIERRA','write',5,'p_write','DOODLR.py',867),
  ('action -> empty','action',1,'p_action','DOODLR.py',871),
  ('funcCall1 -> ID TO_PARABRE','funcCall1',2,'p_funcCall1','DOODLR.py',877),
  ('funcCall2 -> paramVals TO_PARCIERRA','funcCall2',2,'p_funcCall2','DOODLR.py',888),
  ('paramVals -> unParam moreParamVals','paramVals',2,'p_paramVals','DOODLR.py',904),
  ('paramVals -> empty','paramVals',1,'p_paramVals','DOODLR.py',905),
  ('moreParamVals -> TO_COMA unParam moreParamVals','moreParamVals',3,'p_moreParamVals','DOODLR.py',909),
  ('moreParamVals -> empty','moreParamVals',1,'p_moreParamVals','DOODLR.py',910),
  ('unParam -> ID TO_DOSPTOS megaExp','unParam',3,'p_unParam','DOODLR.py',914),
  ('return -> PR_return megaExp','return',2,'p_return','DOODLR.py',936),
  ('comparacion -> compara1 compara2','comparacion',2,'p_comparacion','DOODLR.py',948),
  ('compara1 -> PR_if TO_PARABRE megaExp TO_PARCIERRA TO_LLAABRE','compara1',5,'p_compara1','DOODLR.py',952),
  ('compara2 -> bloque TO_LLACIERRA maybeElse','compara2',3,'p_compara2','DOODLR.py',965),
  ('maybeElse -> checkElse doElse','maybeElse',2,'p_maybeElse','DOODLR.py',972),
  ('maybeElse -> empty','maybeElse',1,'p_maybeElse','DOODLR.py',973),
  ('checkElse -> PR_else TO_LLAABRE','checkElse',2,'p_checkElse','DOODLR.py',977),
  ('doElse -> bloque TO_LLACIERRA','doElse',2,'p_doElse','DOODLR.py',986),
  ('megaExp -> maybeNot superExp anotherMega','megaExp',3,'p_megaExp','DOODLR.py',990),
  ('maybeNot -> PR_negacion','maybeNot',1,'p_maybeNot','DOODLR.py',1024),
  ('maybeNot -> empty','maybeNot',1,'p_maybeNot','DOODLR.py',1025),
  ('anotherMega -> opLogico megaExp','anotherMega',2,'p_anotherMega','DOODLR.py',1033),
  ('anotherMega -> empty','anotherMega',1,'p_anotherMega','DOODLR.py',1034),
  ('superExp -> exp maybeRel','superExp',2,'p_superExp','DOODLR.py',1038),
  ('maybeRel -> opRelacional exp','maybeRel',2,'p_maybeRel','DOODLR.py',1043),
  ('maybeRel -> empty','maybeRel',1,'p_maybeRel','DOODLR.py',1044),
  ('exp -> term anotherExp','exp',2,'p_exp','DOODLR.py',1068),
  ('anotherExp -> OP_MAS exp','anotherExp',2,'p_anotherExp','DOODLR.py',1091),
  ('anotherExp -> OP_MENOS exp','anotherExp',2,'p_anotherExp','DOODLR.py',1092),
  ('anotherExp -> empty','anotherExp',1,'p_anotherExp','DOODLR.py',1093),
  ('term -> fact anotherTerm','term',2,'p_term','DOODLR.py',1100),
  ('anotherTerm -> OP_MULT term','anotherTerm',2,'p_anotherTerm','DOODLR.py',1126),
  ('anotherTerm -> OP_DIV term','anotherTerm',2,'p_anotherTerm','DOODLR.py',1127),
  ('anotherTerm -> OP_RESID term','anotherTerm',2,'p_anotherTerm','DOODLR.py',1128),
  ('anotherTerm -> empty','anotherTerm',1,'p_anotherTerm','DOODLR.py',1129),
  ('fact -> TO_PARABRE megaExp TO_PARCIERRA','fact',3,'p_fact','DOODLR.py',1135),
  ('fact -> funcCall','fact',1,'p_fact','DOODLR.py',1136),
  ('fact -> val','fact',1,'p_fact','DOODLR.py',1137),
  ('empty -> <empty>','empty',0,'p_empty','DOODLR.py',1141),
]
